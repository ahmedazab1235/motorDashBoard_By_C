
motordashbord.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004a00  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c0  00800060  00004a00  00004a74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000033e4  00000000  00000000  00004b34  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cf5  00000000  00000000  00007f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00008c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00008d4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00008ebd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000ab06  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b9f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c7a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c900  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000cb8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000d35b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	fa e4       	ldi	r31, 0x4A	; 74
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 32       	cpi	r26, 0x20	; 32
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 65 15 	call	0x2aca	; 0x2aca <main>
      7a:	0c 94 fe 24 	jmp	0x49fc	; 0x49fc <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 c7 24 	jmp	0x498e	; 0x498e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e1       	ldi	r26, 0x10	; 16
     118:	b1 e0       	ldi	r27, 0x01	; 1
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 e3 24 	jmp	0x49c6	; 0x49c6 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 c7 24 	jmp	0x498e	; 0x498e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e1       	ldi	r24, 0x10	; 16
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 e3 24 	jmp	0x49c6	; 0x49c6 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 d3 24 	jmp	0x49a6	; 0x49a6 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 ef 24 	jmp	0x49de	; 0x49de <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 d7 24 	jmp	0x49ae	; 0x49ae <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 f3 24 	jmp	0x49e6	; 0x49e6 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_u8SetPinDirection>:
 * Inputs: number of the port , pin number ,  pin direction ( INPUT , OUTPUT )
 * Output: Error state
 */

u8 DIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_u8SetPinDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_u8SetPinDirection+0x8>
     b3e:	00 d0       	rcall	.+0      	; 0xb40 <DIO_u8SetPinDirection+0xa>
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	6b 83       	std	Y+3, r22	; 0x03
     b48:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8Error=0;
     b4a:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Pin <= 7) && (Copy_u8Direction <= 1))
     b4c:	8b 81       	ldd	r24, Y+3	; 0x03
     b4e:	88 30       	cpi	r24, 0x08	; 8
     b50:	08 f0       	brcs	.+2      	; 0xb54 <DIO_u8SetPinDirection+0x1e>
     b52:	b1 c0       	rjmp	.+354    	; 0xcb6 <DIO_u8SetPinDirection+0x180>
     b54:	8c 81       	ldd	r24, Y+4	; 0x04
     b56:	82 30       	cpi	r24, 0x02	; 2
     b58:	08 f0       	brcs	.+2      	; 0xb5c <DIO_u8SetPinDirection+0x26>
     b5a:	ad c0       	rjmp	.+346    	; 0xcb6 <DIO_u8SetPinDirection+0x180>
	{

	switch(Copy_u8Port)
     b5c:	8a 81       	ldd	r24, Y+2	; 0x02
     b5e:	28 2f       	mov	r18, r24
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	3e 83       	std	Y+6, r19	; 0x06
     b64:	2d 83       	std	Y+5, r18	; 0x05
     b66:	6d 81       	ldd	r22, Y+5	; 0x05
     b68:	7e 81       	ldd	r23, Y+6	; 0x06
     b6a:	61 30       	cpi	r22, 0x01	; 1
     b6c:	71 05       	cpc	r23, r1
     b6e:	d1 f1       	breq	.+116    	; 0xbe4 <DIO_u8SetPinDirection+0xae>
     b70:	8d 81       	ldd	r24, Y+5	; 0x05
     b72:	9e 81       	ldd	r25, Y+6	; 0x06
     b74:	82 30       	cpi	r24, 0x02	; 2
     b76:	91 05       	cpc	r25, r1
     b78:	34 f4       	brge	.+12     	; 0xb86 <DIO_u8SetPinDirection+0x50>
     b7a:	2d 81       	ldd	r18, Y+5	; 0x05
     b7c:	3e 81       	ldd	r19, Y+6	; 0x06
     b7e:	21 15       	cp	r18, r1
     b80:	31 05       	cpc	r19, r1
     b82:	71 f0       	breq	.+28     	; 0xba0 <DIO_u8SetPinDirection+0x6a>
     b84:	95 c0       	rjmp	.+298    	; 0xcb0 <DIO_u8SetPinDirection+0x17a>
     b86:	6d 81       	ldd	r22, Y+5	; 0x05
     b88:	7e 81       	ldd	r23, Y+6	; 0x06
     b8a:	62 30       	cpi	r22, 0x02	; 2
     b8c:	71 05       	cpc	r23, r1
     b8e:	09 f4       	brne	.+2      	; 0xb92 <DIO_u8SetPinDirection+0x5c>
     b90:	4b c0       	rjmp	.+150    	; 0xc28 <DIO_u8SetPinDirection+0xf2>
     b92:	8d 81       	ldd	r24, Y+5	; 0x05
     b94:	9e 81       	ldd	r25, Y+6	; 0x06
     b96:	83 30       	cpi	r24, 0x03	; 3
     b98:	91 05       	cpc	r25, r1
     b9a:	09 f4       	brne	.+2      	; 0xb9e <DIO_u8SetPinDirection+0x68>
     b9c:	67 c0       	rjmp	.+206    	; 0xc6c <DIO_u8SetPinDirection+0x136>
     b9e:	88 c0       	rjmp	.+272    	; 0xcb0 <DIO_u8SetPinDirection+0x17a>

		{

		case DIO_PORT_A :

		ASSIGN_BIT(DDRA, Copy_u8Pin, Copy_u8Direction);
     ba0:	aa e3       	ldi	r26, 0x3A	; 58
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	ea e3       	ldi	r30, 0x3A	; 58
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	48 2f       	mov	r20, r24
     bac:	8b 81       	ldd	r24, Y+3	; 0x03
     bae:	28 2f       	mov	r18, r24
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	81 e0       	ldi	r24, 0x01	; 1
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	02 c0       	rjmp	.+4      	; 0xbbc <DIO_u8SetPinDirection+0x86>
     bb8:	88 0f       	add	r24, r24
     bba:	99 1f       	adc	r25, r25
     bbc:	2a 95       	dec	r18
     bbe:	e2 f7       	brpl	.-8      	; 0xbb8 <DIO_u8SetPinDirection+0x82>
     bc0:	80 95       	com	r24
     bc2:	48 23       	and	r20, r24
     bc4:	8c 81       	ldd	r24, Y+4	; 0x04
     bc6:	28 2f       	mov	r18, r24
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	8b 81       	ldd	r24, Y+3	; 0x03
     bcc:	88 2f       	mov	r24, r24
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	b9 01       	movw	r22, r18
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <DIO_u8SetPinDirection+0xa2>
     bd4:	66 0f       	add	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	e2 f7       	brpl	.-8      	; 0xbd4 <DIO_u8SetPinDirection+0x9e>
     bdc:	cb 01       	movw	r24, r22
     bde:	84 2b       	or	r24, r20
     be0:	8c 93       	st	X, r24
     be2:	6b c0       	rjmp	.+214    	; 0xcba <DIO_u8SetPinDirection+0x184>

		break;

		case DIO_PORT_B :

		ASSIGN_BIT(DDRB, Copy_u8Pin, Copy_u8Direction);
     be4:	a7 e3       	ldi	r26, 0x37	; 55
     be6:	b0 e0       	ldi	r27, 0x00	; 0
     be8:	e7 e3       	ldi	r30, 0x37	; 55
     bea:	f0 e0       	ldi	r31, 0x00	; 0
     bec:	80 81       	ld	r24, Z
     bee:	48 2f       	mov	r20, r24
     bf0:	8b 81       	ldd	r24, Y+3	; 0x03
     bf2:	28 2f       	mov	r18, r24
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	02 c0       	rjmp	.+4      	; 0xc00 <DIO_u8SetPinDirection+0xca>
     bfc:	88 0f       	add	r24, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	2a 95       	dec	r18
     c02:	e2 f7       	brpl	.-8      	; 0xbfc <DIO_u8SetPinDirection+0xc6>
     c04:	80 95       	com	r24
     c06:	48 23       	and	r20, r24
     c08:	8c 81       	ldd	r24, Y+4	; 0x04
     c0a:	28 2f       	mov	r18, r24
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	88 2f       	mov	r24, r24
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	b9 01       	movw	r22, r18
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <DIO_u8SetPinDirection+0xe6>
     c18:	66 0f       	add	r22, r22
     c1a:	77 1f       	adc	r23, r23
     c1c:	8a 95       	dec	r24
     c1e:	e2 f7       	brpl	.-8      	; 0xc18 <DIO_u8SetPinDirection+0xe2>
     c20:	cb 01       	movw	r24, r22
     c22:	84 2b       	or	r24, r20
     c24:	8c 93       	st	X, r24
     c26:	49 c0       	rjmp	.+146    	; 0xcba <DIO_u8SetPinDirection+0x184>

		break;

		case DIO_PORT_C :

		ASSIGN_BIT(DDRC, Copy_u8Pin, Copy_u8Direction);
     c28:	a4 e3       	ldi	r26, 0x34	; 52
     c2a:	b0 e0       	ldi	r27, 0x00	; 0
     c2c:	e4 e3       	ldi	r30, 0x34	; 52
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	48 2f       	mov	r20, r24
     c34:	8b 81       	ldd	r24, Y+3	; 0x03
     c36:	28 2f       	mov	r18, r24
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <DIO_u8SetPinDirection+0x10e>
     c40:	88 0f       	add	r24, r24
     c42:	99 1f       	adc	r25, r25
     c44:	2a 95       	dec	r18
     c46:	e2 f7       	brpl	.-8      	; 0xc40 <DIO_u8SetPinDirection+0x10a>
     c48:	80 95       	com	r24
     c4a:	48 23       	and	r20, r24
     c4c:	8c 81       	ldd	r24, Y+4	; 0x04
     c4e:	28 2f       	mov	r18, r24
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	8b 81       	ldd	r24, Y+3	; 0x03
     c54:	88 2f       	mov	r24, r24
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	b9 01       	movw	r22, r18
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <DIO_u8SetPinDirection+0x12a>
     c5c:	66 0f       	add	r22, r22
     c5e:	77 1f       	adc	r23, r23
     c60:	8a 95       	dec	r24
     c62:	e2 f7       	brpl	.-8      	; 0xc5c <DIO_u8SetPinDirection+0x126>
     c64:	cb 01       	movw	r24, r22
     c66:	84 2b       	or	r24, r20
     c68:	8c 93       	st	X, r24
     c6a:	27 c0       	rjmp	.+78     	; 0xcba <DIO_u8SetPinDirection+0x184>

		break;

		case DIO_PORT_D :

		ASSIGN_BIT(DDRD, Copy_u8Pin, Copy_u8Direction);
     c6c:	a1 e3       	ldi	r26, 0x31	; 49
     c6e:	b0 e0       	ldi	r27, 0x00	; 0
     c70:	e1 e3       	ldi	r30, 0x31	; 49
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	80 81       	ld	r24, Z
     c76:	48 2f       	mov	r20, r24
     c78:	8b 81       	ldd	r24, Y+3	; 0x03
     c7a:	28 2f       	mov	r18, r24
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <DIO_u8SetPinDirection+0x152>
     c84:	88 0f       	add	r24, r24
     c86:	99 1f       	adc	r25, r25
     c88:	2a 95       	dec	r18
     c8a:	e2 f7       	brpl	.-8      	; 0xc84 <DIO_u8SetPinDirection+0x14e>
     c8c:	80 95       	com	r24
     c8e:	48 23       	and	r20, r24
     c90:	8c 81       	ldd	r24, Y+4	; 0x04
     c92:	28 2f       	mov	r18, r24
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	8b 81       	ldd	r24, Y+3	; 0x03
     c98:	88 2f       	mov	r24, r24
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	b9 01       	movw	r22, r18
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <DIO_u8SetPinDirection+0x16e>
     ca0:	66 0f       	add	r22, r22
     ca2:	77 1f       	adc	r23, r23
     ca4:	8a 95       	dec	r24
     ca6:	e2 f7       	brpl	.-8      	; 0xca0 <DIO_u8SetPinDirection+0x16a>
     ca8:	cb 01       	movw	r24, r22
     caa:	84 2b       	or	r24, r20
     cac:	8c 93       	st	X, r24
     cae:	05 c0       	rjmp	.+10     	; 0xcba <DIO_u8SetPinDirection+0x184>

		break;

		default:Local_u8Error = 1;
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	89 83       	std	Y+1, r24	; 0x01
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <DIO_u8SetPinDirection+0x184>
		}
	}
	else
		{

		Local_u8Error = 1;
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	89 83       	std	Y+1, r24	; 0x01

		}

		return Local_u8Error;
     cba:	89 81       	ldd	r24, Y+1	; 0x01
}
     cbc:	26 96       	adiw	r28, 0x06	; 6
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	f8 94       	cli
     cc2:	de bf       	out	0x3e, r29	; 62
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	cd bf       	out	0x3d, r28	; 61
     cc8:	cf 91       	pop	r28
     cca:	df 91       	pop	r29
     ccc:	08 95       	ret

00000cce <DIO_u8SetPortDirection>:
 * Inputs: number of the port , port direction ( INPUT , OUTPUT )
 * Output: Error state
 */

u8 DIO_u8SetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction)
{
     cce:	df 93       	push	r29
     cd0:	cf 93       	push	r28
     cd2:	00 d0       	rcall	.+0      	; 0xcd4 <DIO_u8SetPortDirection+0x6>
     cd4:	00 d0       	rcall	.+0      	; 0xcd6 <DIO_u8SetPortDirection+0x8>
     cd6:	0f 92       	push	r0
     cd8:	cd b7       	in	r28, 0x3d	; 61
     cda:	de b7       	in	r29, 0x3e	; 62
     cdc:	8a 83       	std	Y+2, r24	; 0x02
     cde:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8Error=0;
     ce0:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Port <= 3) && (Copy_u8Direction <= 0xFF))
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	84 30       	cpi	r24, 0x04	; 4
     ce6:	b0 f5       	brcc	.+108    	; 0xd54 <DIO_u8SetPortDirection+0x86>

	{
		switch(Copy_u8Port)
     ce8:	8a 81       	ldd	r24, Y+2	; 0x02
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	3d 83       	std	Y+5, r19	; 0x05
     cf0:	2c 83       	std	Y+4, r18	; 0x04
     cf2:	8c 81       	ldd	r24, Y+4	; 0x04
     cf4:	9d 81       	ldd	r25, Y+5	; 0x05
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	d1 f0       	breq	.+52     	; 0xd30 <DIO_u8SetPortDirection+0x62>
     cfc:	2c 81       	ldd	r18, Y+4	; 0x04
     cfe:	3d 81       	ldd	r19, Y+5	; 0x05
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	2c f4       	brge	.+10     	; 0xd10 <DIO_u8SetPortDirection+0x42>
     d06:	8c 81       	ldd	r24, Y+4	; 0x04
     d08:	9d 81       	ldd	r25, Y+5	; 0x05
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	61 f0       	breq	.+24     	; 0xd26 <DIO_u8SetPortDirection+0x58>
     d0e:	1f c0       	rjmp	.+62     	; 0xd4e <DIO_u8SetPortDirection+0x80>
     d10:	2c 81       	ldd	r18, Y+4	; 0x04
     d12:	3d 81       	ldd	r19, Y+5	; 0x05
     d14:	22 30       	cpi	r18, 0x02	; 2
     d16:	31 05       	cpc	r19, r1
     d18:	81 f0       	breq	.+32     	; 0xd3a <DIO_u8SetPortDirection+0x6c>
     d1a:	8c 81       	ldd	r24, Y+4	; 0x04
     d1c:	9d 81       	ldd	r25, Y+5	; 0x05
     d1e:	83 30       	cpi	r24, 0x03	; 3
     d20:	91 05       	cpc	r25, r1
     d22:	81 f0       	breq	.+32     	; 0xd44 <DIO_u8SetPortDirection+0x76>
     d24:	14 c0       	rjmp	.+40     	; 0xd4e <DIO_u8SetPortDirection+0x80>

		{
			case DIO_PORT_A :

				DDRA = Copy_u8Direction;
     d26:	ea e3       	ldi	r30, 0x3A	; 58
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	8b 81       	ldd	r24, Y+3	; 0x03
     d2c:	80 83       	st	Z, r24
     d2e:	14 c0       	rjmp	.+40     	; 0xd58 <DIO_u8SetPortDirection+0x8a>

				break;

			case DIO_PORT_B :

				DDRB = Copy_u8Direction;
     d30:	e7 e3       	ldi	r30, 0x37	; 55
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	8b 81       	ldd	r24, Y+3	; 0x03
     d36:	80 83       	st	Z, r24
     d38:	0f c0       	rjmp	.+30     	; 0xd58 <DIO_u8SetPortDirection+0x8a>

				break;

			case DIO_PORT_C :

				DDRC = Copy_u8Direction;
     d3a:	e4 e3       	ldi	r30, 0x34	; 52
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	8b 81       	ldd	r24, Y+3	; 0x03
     d40:	80 83       	st	Z, r24
     d42:	0a c0       	rjmp	.+20     	; 0xd58 <DIO_u8SetPortDirection+0x8a>

				break;

			case DIO_PORT_D :

				DDRD=Copy_u8Direction;
     d44:	e1 e3       	ldi	r30, 0x31	; 49
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	8b 81       	ldd	r24, Y+3	; 0x03
     d4a:	80 83       	st	Z, r24
     d4c:	05 c0       	rjmp	.+10     	; 0xd58 <DIO_u8SetPortDirection+0x8a>

				break;

			default:Local_u8Error = 1;
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	89 83       	std	Y+1, r24	; 0x01
     d52:	02 c0       	rjmp	.+4      	; 0xd58 <DIO_u8SetPortDirection+0x8a>
		}
	}
		else
		{

			Local_u8Error = 1;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_u8Error;
     d58:	89 81       	ldd	r24, Y+1	; 0x01
}
     d5a:	0f 90       	pop	r0
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	cf 91       	pop	r28
     d66:	df 91       	pop	r29
     d68:	08 95       	ret

00000d6a <DIO_u8SetPinValue>:
 * Inputs: number of the port , pin number ,  port direction ( INPUT , OUTPUT )
 * Output: Error state
 */

u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value)
{
     d6a:	df 93       	push	r29
     d6c:	cf 93       	push	r28
     d6e:	00 d0       	rcall	.+0      	; 0xd70 <DIO_u8SetPinValue+0x6>
     d70:	00 d0       	rcall	.+0      	; 0xd72 <DIO_u8SetPinValue+0x8>
     d72:	00 d0       	rcall	.+0      	; 0xd74 <DIO_u8SetPinValue+0xa>
     d74:	cd b7       	in	r28, 0x3d	; 61
     d76:	de b7       	in	r29, 0x3e	; 62
     d78:	8a 83       	std	Y+2, r24	; 0x02
     d7a:	6b 83       	std	Y+3, r22	; 0x03
     d7c:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8Error=0;
     d7e:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Pin <= 7) && (Copy_u8Value <= 1))
     d80:	8b 81       	ldd	r24, Y+3	; 0x03
     d82:	88 30       	cpi	r24, 0x08	; 8
     d84:	08 f0       	brcs	.+2      	; 0xd88 <DIO_u8SetPinValue+0x1e>
     d86:	b1 c0       	rjmp	.+354    	; 0xeea <DIO_u8SetPinValue+0x180>
     d88:	8c 81       	ldd	r24, Y+4	; 0x04
     d8a:	82 30       	cpi	r24, 0x02	; 2
     d8c:	08 f0       	brcs	.+2      	; 0xd90 <DIO_u8SetPinValue+0x26>
     d8e:	ad c0       	rjmp	.+346    	; 0xeea <DIO_u8SetPinValue+0x180>

	{

	switch(Copy_u8Port)
     d90:	8a 81       	ldd	r24, Y+2	; 0x02
     d92:	28 2f       	mov	r18, r24
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	3e 83       	std	Y+6, r19	; 0x06
     d98:	2d 83       	std	Y+5, r18	; 0x05
     d9a:	6d 81       	ldd	r22, Y+5	; 0x05
     d9c:	7e 81       	ldd	r23, Y+6	; 0x06
     d9e:	61 30       	cpi	r22, 0x01	; 1
     da0:	71 05       	cpc	r23, r1
     da2:	d1 f1       	breq	.+116    	; 0xe18 <DIO_u8SetPinValue+0xae>
     da4:	8d 81       	ldd	r24, Y+5	; 0x05
     da6:	9e 81       	ldd	r25, Y+6	; 0x06
     da8:	82 30       	cpi	r24, 0x02	; 2
     daa:	91 05       	cpc	r25, r1
     dac:	34 f4       	brge	.+12     	; 0xdba <DIO_u8SetPinValue+0x50>
     dae:	2d 81       	ldd	r18, Y+5	; 0x05
     db0:	3e 81       	ldd	r19, Y+6	; 0x06
     db2:	21 15       	cp	r18, r1
     db4:	31 05       	cpc	r19, r1
     db6:	71 f0       	breq	.+28     	; 0xdd4 <DIO_u8SetPinValue+0x6a>
     db8:	95 c0       	rjmp	.+298    	; 0xee4 <DIO_u8SetPinValue+0x17a>
     dba:	6d 81       	ldd	r22, Y+5	; 0x05
     dbc:	7e 81       	ldd	r23, Y+6	; 0x06
     dbe:	62 30       	cpi	r22, 0x02	; 2
     dc0:	71 05       	cpc	r23, r1
     dc2:	09 f4       	brne	.+2      	; 0xdc6 <DIO_u8SetPinValue+0x5c>
     dc4:	4b c0       	rjmp	.+150    	; 0xe5c <DIO_u8SetPinValue+0xf2>
     dc6:	8d 81       	ldd	r24, Y+5	; 0x05
     dc8:	9e 81       	ldd	r25, Y+6	; 0x06
     dca:	83 30       	cpi	r24, 0x03	; 3
     dcc:	91 05       	cpc	r25, r1
     dce:	09 f4       	brne	.+2      	; 0xdd2 <DIO_u8SetPinValue+0x68>
     dd0:	67 c0       	rjmp	.+206    	; 0xea0 <DIO_u8SetPinValue+0x136>
     dd2:	88 c0       	rjmp	.+272    	; 0xee4 <DIO_u8SetPinValue+0x17a>

		{

		case DIO_PORT_A :

		ASSIGN_BIT(PORTA, Copy_u8Pin, Copy_u8Value);
     dd4:	ab e3       	ldi	r26, 0x3B	; 59
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	eb e3       	ldi	r30, 0x3B	; 59
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	80 81       	ld	r24, Z
     dde:	48 2f       	mov	r20, r24
     de0:	8b 81       	ldd	r24, Y+3	; 0x03
     de2:	28 2f       	mov	r18, r24
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <DIO_u8SetPinValue+0x86>
     dec:	88 0f       	add	r24, r24
     dee:	99 1f       	adc	r25, r25
     df0:	2a 95       	dec	r18
     df2:	e2 f7       	brpl	.-8      	; 0xdec <DIO_u8SetPinValue+0x82>
     df4:	80 95       	com	r24
     df6:	48 23       	and	r20, r24
     df8:	8c 81       	ldd	r24, Y+4	; 0x04
     dfa:	28 2f       	mov	r18, r24
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	8b 81       	ldd	r24, Y+3	; 0x03
     e00:	88 2f       	mov	r24, r24
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	b9 01       	movw	r22, r18
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <DIO_u8SetPinValue+0xa2>
     e08:	66 0f       	add	r22, r22
     e0a:	77 1f       	adc	r23, r23
     e0c:	8a 95       	dec	r24
     e0e:	e2 f7       	brpl	.-8      	; 0xe08 <DIO_u8SetPinValue+0x9e>
     e10:	cb 01       	movw	r24, r22
     e12:	84 2b       	or	r24, r20
     e14:	8c 93       	st	X, r24
     e16:	6b c0       	rjmp	.+214    	; 0xeee <DIO_u8SetPinValue+0x184>

		break;

		case DIO_PORT_B :

		ASSIGN_BIT(PORTB, Copy_u8Pin, Copy_u8Value);
     e18:	a8 e3       	ldi	r26, 0x38	; 56
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e8 e3       	ldi	r30, 0x38	; 56
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 c0       	rjmp	.+4      	; 0xe34 <DIO_u8SetPinValue+0xca>
     e30:	88 0f       	add	r24, r24
     e32:	99 1f       	adc	r25, r25
     e34:	2a 95       	dec	r18
     e36:	e2 f7       	brpl	.-8      	; 0xe30 <DIO_u8SetPinValue+0xc6>
     e38:	80 95       	com	r24
     e3a:	48 23       	and	r20, r24
     e3c:	8c 81       	ldd	r24, Y+4	; 0x04
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	8b 81       	ldd	r24, Y+3	; 0x03
     e44:	88 2f       	mov	r24, r24
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	b9 01       	movw	r22, r18
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <DIO_u8SetPinValue+0xe6>
     e4c:	66 0f       	add	r22, r22
     e4e:	77 1f       	adc	r23, r23
     e50:	8a 95       	dec	r24
     e52:	e2 f7       	brpl	.-8      	; 0xe4c <DIO_u8SetPinValue+0xe2>
     e54:	cb 01       	movw	r24, r22
     e56:	84 2b       	or	r24, r20
     e58:	8c 93       	st	X, r24
     e5a:	49 c0       	rjmp	.+146    	; 0xeee <DIO_u8SetPinValue+0x184>

		break;

		case DIO_PORT_C :

		ASSIGN_BIT(PORTC, Copy_u8Pin, Copy_u8Value);
     e5c:	a5 e3       	ldi	r26, 0x35	; 53
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e5 e3       	ldi	r30, 0x35	; 53
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	48 2f       	mov	r20, r24
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_u8SetPinValue+0x10e>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	2a 95       	dec	r18
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <DIO_u8SetPinValue+0x10a>
     e7c:	80 95       	com	r24
     e7e:	48 23       	and	r20, r24
     e80:	8c 81       	ldd	r24, Y+4	; 0x04
     e82:	28 2f       	mov	r18, r24
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	8b 81       	ldd	r24, Y+3	; 0x03
     e88:	88 2f       	mov	r24, r24
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	b9 01       	movw	r22, r18
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <DIO_u8SetPinValue+0x12a>
     e90:	66 0f       	add	r22, r22
     e92:	77 1f       	adc	r23, r23
     e94:	8a 95       	dec	r24
     e96:	e2 f7       	brpl	.-8      	; 0xe90 <DIO_u8SetPinValue+0x126>
     e98:	cb 01       	movw	r24, r22
     e9a:	84 2b       	or	r24, r20
     e9c:	8c 93       	st	X, r24
     e9e:	27 c0       	rjmp	.+78     	; 0xeee <DIO_u8SetPinValue+0x184>

		break;

		case DIO_PORT_D :

		ASSIGN_BIT(PORTD, Copy_u8Pin, Copy_u8Value);
     ea0:	a2 e3       	ldi	r26, 0x32	; 50
     ea2:	b0 e0       	ldi	r27, 0x00	; 0
     ea4:	e2 e3       	ldi	r30, 0x32	; 50
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	48 2f       	mov	r20, r24
     eac:	8b 81       	ldd	r24, Y+3	; 0x03
     eae:	28 2f       	mov	r18, r24
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <DIO_u8SetPinValue+0x152>
     eb8:	88 0f       	add	r24, r24
     eba:	99 1f       	adc	r25, r25
     ebc:	2a 95       	dec	r18
     ebe:	e2 f7       	brpl	.-8      	; 0xeb8 <DIO_u8SetPinValue+0x14e>
     ec0:	80 95       	com	r24
     ec2:	48 23       	and	r20, r24
     ec4:	8c 81       	ldd	r24, Y+4	; 0x04
     ec6:	28 2f       	mov	r18, r24
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	8b 81       	ldd	r24, Y+3	; 0x03
     ecc:	88 2f       	mov	r24, r24
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	b9 01       	movw	r22, r18
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <DIO_u8SetPinValue+0x16e>
     ed4:	66 0f       	add	r22, r22
     ed6:	77 1f       	adc	r23, r23
     ed8:	8a 95       	dec	r24
     eda:	e2 f7       	brpl	.-8      	; 0xed4 <DIO_u8SetPinValue+0x16a>
     edc:	cb 01       	movw	r24, r22
     ede:	84 2b       	or	r24, r20
     ee0:	8c 93       	st	X, r24
     ee2:	05 c0       	rjmp	.+10     	; 0xeee <DIO_u8SetPinValue+0x184>

		break;

		default:

		Local_u8Error=1;
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	89 83       	std	Y+1, r24	; 0x01
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <DIO_u8SetPinValue+0x184>
		}
	}
		else
		{

		Local_u8Error = 1;
     eea:	81 e0       	ldi	r24, 0x01	; 1
     eec:	89 83       	std	Y+1, r24	; 0x01

		}

	return Local_u8Error;
     eee:	89 81       	ldd	r24, Y+1	; 0x01

}
     ef0:	26 96       	adiw	r28, 0x06	; 6
     ef2:	0f b6       	in	r0, 0x3f	; 63
     ef4:	f8 94       	cli
     ef6:	de bf       	out	0x3e, r29	; 62
     ef8:	0f be       	out	0x3f, r0	; 63
     efa:	cd bf       	out	0x3d, r28	; 61
     efc:	cf 91       	pop	r28
     efe:	df 91       	pop	r29
     f00:	08 95       	ret

00000f02 <DIO_u8SetPortValue>:
 * Inputs: number of the port , port value
 * Output: Error state
 */

u8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value)
{
     f02:	df 93       	push	r29
     f04:	cf 93       	push	r28
     f06:	00 d0       	rcall	.+0      	; 0xf08 <DIO_u8SetPortValue+0x6>
     f08:	00 d0       	rcall	.+0      	; 0xf0a <DIO_u8SetPortValue+0x8>
     f0a:	0f 92       	push	r0
     f0c:	cd b7       	in	r28, 0x3d	; 61
     f0e:	de b7       	in	r29, 0x3e	; 62
     f10:	8a 83       	std	Y+2, r24	; 0x02
     f12:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Error = 0;
     f14:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Port <= 3) && (Copy_u8Value <= 0xFF))
     f16:	8a 81       	ldd	r24, Y+2	; 0x02
     f18:	84 30       	cpi	r24, 0x04	; 4
     f1a:	b0 f5       	brcc	.+108    	; 0xf88 <DIO_u8SetPortValue+0x86>
	{
		switch(Copy_u8Port)
     f1c:	8a 81       	ldd	r24, Y+2	; 0x02
     f1e:	28 2f       	mov	r18, r24
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	3d 83       	std	Y+5, r19	; 0x05
     f24:	2c 83       	std	Y+4, r18	; 0x04
     f26:	8c 81       	ldd	r24, Y+4	; 0x04
     f28:	9d 81       	ldd	r25, Y+5	; 0x05
     f2a:	81 30       	cpi	r24, 0x01	; 1
     f2c:	91 05       	cpc	r25, r1
     f2e:	d1 f0       	breq	.+52     	; 0xf64 <DIO_u8SetPortValue+0x62>
     f30:	2c 81       	ldd	r18, Y+4	; 0x04
     f32:	3d 81       	ldd	r19, Y+5	; 0x05
     f34:	22 30       	cpi	r18, 0x02	; 2
     f36:	31 05       	cpc	r19, r1
     f38:	2c f4       	brge	.+10     	; 0xf44 <DIO_u8SetPortValue+0x42>
     f3a:	8c 81       	ldd	r24, Y+4	; 0x04
     f3c:	9d 81       	ldd	r25, Y+5	; 0x05
     f3e:	00 97       	sbiw	r24, 0x00	; 0
     f40:	61 f0       	breq	.+24     	; 0xf5a <DIO_u8SetPortValue+0x58>
     f42:	1f c0       	rjmp	.+62     	; 0xf82 <DIO_u8SetPortValue+0x80>
     f44:	2c 81       	ldd	r18, Y+4	; 0x04
     f46:	3d 81       	ldd	r19, Y+5	; 0x05
     f48:	22 30       	cpi	r18, 0x02	; 2
     f4a:	31 05       	cpc	r19, r1
     f4c:	81 f0       	breq	.+32     	; 0xf6e <DIO_u8SetPortValue+0x6c>
     f4e:	8c 81       	ldd	r24, Y+4	; 0x04
     f50:	9d 81       	ldd	r25, Y+5	; 0x05
     f52:	83 30       	cpi	r24, 0x03	; 3
     f54:	91 05       	cpc	r25, r1
     f56:	81 f0       	breq	.+32     	; 0xf78 <DIO_u8SetPortValue+0x76>
     f58:	14 c0       	rjmp	.+40     	; 0xf82 <DIO_u8SetPortValue+0x80>
		{
			case DIO_PORT_A :

				PORTA = Copy_u8Value;
     f5a:	eb e3       	ldi	r30, 0x3B	; 59
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	8b 81       	ldd	r24, Y+3	; 0x03
     f60:	80 83       	st	Z, r24
     f62:	14 c0       	rjmp	.+40     	; 0xf8c <DIO_u8SetPortValue+0x8a>

				break;

			case DIO_PORT_B :

				PORTB = Copy_u8Value;
     f64:	e8 e3       	ldi	r30, 0x38	; 56
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	8b 81       	ldd	r24, Y+3	; 0x03
     f6a:	80 83       	st	Z, r24
     f6c:	0f c0       	rjmp	.+30     	; 0xf8c <DIO_u8SetPortValue+0x8a>

				break;

			case DIO_PORT_C :

				PORTC = Copy_u8Value;
     f6e:	e5 e3       	ldi	r30, 0x35	; 53
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	8b 81       	ldd	r24, Y+3	; 0x03
     f74:	80 83       	st	Z, r24
     f76:	0a c0       	rjmp	.+20     	; 0xf8c <DIO_u8SetPortValue+0x8a>

				break;

			case DIO_PORT_D :

				PORTD = Copy_u8Value;
     f78:	e2 e3       	ldi	r30, 0x32	; 50
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	8b 81       	ldd	r24, Y+3	; 0x03
     f7e:	80 83       	st	Z, r24
     f80:	05 c0       	rjmp	.+10     	; 0xf8c <DIO_u8SetPortValue+0x8a>

				break;

			default:

			Local_u8Error = 1;
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	89 83       	std	Y+1, r24	; 0x01
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <DIO_u8SetPortValue+0x8a>
	}

		else
		{

			Local_u8Error = 1;
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	89 83       	std	Y+1, r24	; 0x01

		}

	return Local_u8Error;
     f8c:	89 81       	ldd	r24, Y+1	; 0x01
}
     f8e:	0f 90       	pop	r0
     f90:	0f 90       	pop	r0
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	cf 91       	pop	r28
     f9a:	df 91       	pop	r29
     f9c:	08 95       	ret

00000f9e <DIO_u8GetPinValue>:
 * Inputs: number of the port , pin number , pointer to variable to save the got value on it
 * Output: Error state
 */

u8 DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8*Copy_u8PValue)
{
     f9e:	df 93       	push	r29
     fa0:	cf 93       	push	r28
     fa2:	cd b7       	in	r28, 0x3d	; 61
     fa4:	de b7       	in	r29, 0x3e	; 62
     fa6:	27 97       	sbiw	r28, 0x07	; 7
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	f8 94       	cli
     fac:	de bf       	out	0x3e, r29	; 62
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	cd bf       	out	0x3d, r28	; 61
     fb2:	8a 83       	std	Y+2, r24	; 0x02
     fb4:	6b 83       	std	Y+3, r22	; 0x03
     fb6:	5d 83       	std	Y+5, r21	; 0x05
     fb8:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8Error = 0;
     fba:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Port <= 3) && (Copy_u8Pin <= 7))
     fbc:	8a 81       	ldd	r24, Y+2	; 0x02
     fbe:	84 30       	cpi	r24, 0x04	; 4
     fc0:	08 f0       	brcs	.+2      	; 0xfc4 <DIO_u8GetPinValue+0x26>
     fc2:	78 c0       	rjmp	.+240    	; 0x10b4 <DIO_u8GetPinValue+0x116>
     fc4:	8b 81       	ldd	r24, Y+3	; 0x03
     fc6:	88 30       	cpi	r24, 0x08	; 8
     fc8:	08 f0       	brcs	.+2      	; 0xfcc <DIO_u8GetPinValue+0x2e>
     fca:	74 c0       	rjmp	.+232    	; 0x10b4 <DIO_u8GetPinValue+0x116>
	{
		switch(Copy_u8Port)
     fcc:	8a 81       	ldd	r24, Y+2	; 0x02
     fce:	28 2f       	mov	r18, r24
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	3f 83       	std	Y+7, r19	; 0x07
     fd4:	2e 83       	std	Y+6, r18	; 0x06
     fd6:	4e 81       	ldd	r20, Y+6	; 0x06
     fd8:	5f 81       	ldd	r21, Y+7	; 0x07
     fda:	41 30       	cpi	r20, 0x01	; 1
     fdc:	51 05       	cpc	r21, r1
     fde:	59 f1       	breq	.+86     	; 0x1036 <DIO_u8GetPinValue+0x98>
     fe0:	8e 81       	ldd	r24, Y+6	; 0x06
     fe2:	9f 81       	ldd	r25, Y+7	; 0x07
     fe4:	82 30       	cpi	r24, 0x02	; 2
     fe6:	91 05       	cpc	r25, r1
     fe8:	34 f4       	brge	.+12     	; 0xff6 <DIO_u8GetPinValue+0x58>
     fea:	2e 81       	ldd	r18, Y+6	; 0x06
     fec:	3f 81       	ldd	r19, Y+7	; 0x07
     fee:	21 15       	cp	r18, r1
     ff0:	31 05       	cpc	r19, r1
     ff2:	69 f0       	breq	.+26     	; 0x100e <DIO_u8GetPinValue+0x70>
     ff4:	5c c0       	rjmp	.+184    	; 0x10ae <DIO_u8GetPinValue+0x110>
     ff6:	4e 81       	ldd	r20, Y+6	; 0x06
     ff8:	5f 81       	ldd	r21, Y+7	; 0x07
     ffa:	42 30       	cpi	r20, 0x02	; 2
     ffc:	51 05       	cpc	r21, r1
     ffe:	09 f4       	brne	.+2      	; 0x1002 <DIO_u8GetPinValue+0x64>
    1000:	42 c0       	rjmp	.+132    	; 0x1086 <DIO_u8GetPinValue+0xe8>
    1002:	8e 81       	ldd	r24, Y+6	; 0x06
    1004:	9f 81       	ldd	r25, Y+7	; 0x07
    1006:	83 30       	cpi	r24, 0x03	; 3
    1008:	91 05       	cpc	r25, r1
    100a:	49 f1       	breq	.+82     	; 0x105e <DIO_u8GetPinValue+0xc0>
    100c:	50 c0       	rjmp	.+160    	; 0x10ae <DIO_u8GetPinValue+0x110>
		{
			case DIO_PORT_A:

				*Copy_u8PValue = GET_BIT(PINA, Copy_u8Pin);
    100e:	e9 e3       	ldi	r30, 0x39	; 57
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	80 81       	ld	r24, Z
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	8b 81       	ldd	r24, Y+3	; 0x03
    101a:	88 2f       	mov	r24, r24
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	a9 01       	movw	r20, r18
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <DIO_u8GetPinValue+0x88>
    1022:	55 95       	asr	r21
    1024:	47 95       	ror	r20
    1026:	8a 95       	dec	r24
    1028:	e2 f7       	brpl	.-8      	; 0x1022 <DIO_u8GetPinValue+0x84>
    102a:	ca 01       	movw	r24, r20
    102c:	81 70       	andi	r24, 0x01	; 1
    102e:	ec 81       	ldd	r30, Y+4	; 0x04
    1030:	fd 81       	ldd	r31, Y+5	; 0x05
    1032:	80 83       	st	Z, r24
    1034:	41 c0       	rjmp	.+130    	; 0x10b8 <DIO_u8GetPinValue+0x11a>

				break;

			case DIO_PORT_B:

				*Copy_u8PValue = GET_BIT(PINB, Copy_u8Pin);
    1036:	e6 e3       	ldi	r30, 0x36	; 54
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	80 81       	ld	r24, Z
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	88 2f       	mov	r24, r24
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a9 01       	movw	r20, r18
    1048:	02 c0       	rjmp	.+4      	; 0x104e <DIO_u8GetPinValue+0xb0>
    104a:	55 95       	asr	r21
    104c:	47 95       	ror	r20
    104e:	8a 95       	dec	r24
    1050:	e2 f7       	brpl	.-8      	; 0x104a <DIO_u8GetPinValue+0xac>
    1052:	ca 01       	movw	r24, r20
    1054:	81 70       	andi	r24, 0x01	; 1
    1056:	ec 81       	ldd	r30, Y+4	; 0x04
    1058:	fd 81       	ldd	r31, Y+5	; 0x05
    105a:	80 83       	st	Z, r24
    105c:	2d c0       	rjmp	.+90     	; 0x10b8 <DIO_u8GetPinValue+0x11a>

				break;

			case DIO_PORT_D:

				*Copy_u8PValue = GET_BIT(PIND, Copy_u8Pin);
    105e:	e0 e3       	ldi	r30, 0x30	; 48
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	28 2f       	mov	r18, r24
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	8b 81       	ldd	r24, Y+3	; 0x03
    106a:	88 2f       	mov	r24, r24
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	a9 01       	movw	r20, r18
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <DIO_u8GetPinValue+0xd8>
    1072:	55 95       	asr	r21
    1074:	47 95       	ror	r20
    1076:	8a 95       	dec	r24
    1078:	e2 f7       	brpl	.-8      	; 0x1072 <DIO_u8GetPinValue+0xd4>
    107a:	ca 01       	movw	r24, r20
    107c:	81 70       	andi	r24, 0x01	; 1
    107e:	ec 81       	ldd	r30, Y+4	; 0x04
    1080:	fd 81       	ldd	r31, Y+5	; 0x05
    1082:	80 83       	st	Z, r24
    1084:	19 c0       	rjmp	.+50     	; 0x10b8 <DIO_u8GetPinValue+0x11a>

				break;

			case DIO_PORT_C:

				*Copy_u8PValue = GET_BIT(PINC, Copy_u8Pin);
    1086:	e3 e3       	ldi	r30, 0x33	; 51
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	88 2f       	mov	r24, r24
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	a9 01       	movw	r20, r18
    1098:	02 c0       	rjmp	.+4      	; 0x109e <DIO_u8GetPinValue+0x100>
    109a:	55 95       	asr	r21
    109c:	47 95       	ror	r20
    109e:	8a 95       	dec	r24
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <DIO_u8GetPinValue+0xfc>
    10a2:	ca 01       	movw	r24, r20
    10a4:	81 70       	andi	r24, 0x01	; 1
    10a6:	ec 81       	ldd	r30, Y+4	; 0x04
    10a8:	fd 81       	ldd	r31, Y+5	; 0x05
    10aa:	80 83       	st	Z, r24
    10ac:	05 c0       	rjmp	.+10     	; 0x10b8 <DIO_u8GetPinValue+0x11a>

				break;

			default: Local_u8Error = 1;
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	89 83       	std	Y+1, r24	; 0x01
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <DIO_u8GetPinValue+0x11a>
	}

	else
	{

		Local_u8Error = 1;
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	89 83       	std	Y+1, r24	; 0x01

	}
	return Local_u8Error;
    10b8:	89 81       	ldd	r24, Y+1	; 0x01

}
    10ba:	27 96       	adiw	r28, 0x07	; 7
    10bc:	0f b6       	in	r0, 0x3f	; 63
    10be:	f8 94       	cli
    10c0:	de bf       	out	0x3e, r29	; 62
    10c2:	0f be       	out	0x3f, r0	; 63
    10c4:	cd bf       	out	0x3d, r28	; 61
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	08 95       	ret

000010cc <DIO_u8GetPortValue>:
 * Inputs: number of the port ,pointer to variable to save the got value on it
 * Output: Error state
 */

u8 DIO_u8GetPortValue(u8 Copy_u8Port, u8*Copy_u8PValue)
{
    10cc:	df 93       	push	r29
    10ce:	cf 93       	push	r28
    10d0:	00 d0       	rcall	.+0      	; 0x10d2 <DIO_u8GetPortValue+0x6>
    10d2:	00 d0       	rcall	.+0      	; 0x10d4 <DIO_u8GetPortValue+0x8>
    10d4:	00 d0       	rcall	.+0      	; 0x10d6 <DIO_u8GetPortValue+0xa>
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	8a 83       	std	Y+2, r24	; 0x02
    10dc:	7c 83       	std	Y+4, r23	; 0x04
    10de:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_u8Error = 0;
    10e0:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Port <= 3))
    10e2:	8a 81       	ldd	r24, Y+2	; 0x02
    10e4:	84 30       	cpi	r24, 0x04	; 4
    10e6:	08 f0       	brcs	.+2      	; 0x10ea <DIO_u8GetPortValue+0x1e>
    10e8:	3e c0       	rjmp	.+124    	; 0x1166 <DIO_u8GetPortValue+0x9a>

	{
		switch(Copy_u8Port)
    10ea:	8a 81       	ldd	r24, Y+2	; 0x02
    10ec:	28 2f       	mov	r18, r24
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	3e 83       	std	Y+6, r19	; 0x06
    10f2:	2d 83       	std	Y+5, r18	; 0x05
    10f4:	8d 81       	ldd	r24, Y+5	; 0x05
    10f6:	9e 81       	ldd	r25, Y+6	; 0x06
    10f8:	81 30       	cpi	r24, 0x01	; 1
    10fa:	91 05       	cpc	r25, r1
    10fc:	e1 f0       	breq	.+56     	; 0x1136 <DIO_u8GetPortValue+0x6a>
    10fe:	2d 81       	ldd	r18, Y+5	; 0x05
    1100:	3e 81       	ldd	r19, Y+6	; 0x06
    1102:	22 30       	cpi	r18, 0x02	; 2
    1104:	31 05       	cpc	r19, r1
    1106:	2c f4       	brge	.+10     	; 0x1112 <DIO_u8GetPortValue+0x46>
    1108:	8d 81       	ldd	r24, Y+5	; 0x05
    110a:	9e 81       	ldd	r25, Y+6	; 0x06
    110c:	00 97       	sbiw	r24, 0x00	; 0
    110e:	61 f0       	breq	.+24     	; 0x1128 <DIO_u8GetPortValue+0x5c>
    1110:	27 c0       	rjmp	.+78     	; 0x1160 <DIO_u8GetPortValue+0x94>
    1112:	2d 81       	ldd	r18, Y+5	; 0x05
    1114:	3e 81       	ldd	r19, Y+6	; 0x06
    1116:	22 30       	cpi	r18, 0x02	; 2
    1118:	31 05       	cpc	r19, r1
    111a:	d9 f0       	breq	.+54     	; 0x1152 <DIO_u8GetPortValue+0x86>
    111c:	8d 81       	ldd	r24, Y+5	; 0x05
    111e:	9e 81       	ldd	r25, Y+6	; 0x06
    1120:	83 30       	cpi	r24, 0x03	; 3
    1122:	91 05       	cpc	r25, r1
    1124:	79 f0       	breq	.+30     	; 0x1144 <DIO_u8GetPortValue+0x78>
    1126:	1c c0       	rjmp	.+56     	; 0x1160 <DIO_u8GetPortValue+0x94>
			{


				case DIO_PORT_A:

					*Copy_u8PValue = PINA;
    1128:	e9 e3       	ldi	r30, 0x39	; 57
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	eb 81       	ldd	r30, Y+3	; 0x03
    1130:	fc 81       	ldd	r31, Y+4	; 0x04
    1132:	80 83       	st	Z, r24
    1134:	1a c0       	rjmp	.+52     	; 0x116a <DIO_u8GetPortValue+0x9e>

					break;

				case DIO_PORT_B:

					*Copy_u8PValue = PINB;
    1136:	e6 e3       	ldi	r30, 0x36	; 54
    1138:	f0 e0       	ldi	r31, 0x00	; 0
    113a:	80 81       	ld	r24, Z
    113c:	eb 81       	ldd	r30, Y+3	; 0x03
    113e:	fc 81       	ldd	r31, Y+4	; 0x04
    1140:	80 83       	st	Z, r24
    1142:	13 c0       	rjmp	.+38     	; 0x116a <DIO_u8GetPortValue+0x9e>

					break;

				case DIO_PORT_D:

					*Copy_u8PValue = PIND;
    1144:	e0 e3       	ldi	r30, 0x30	; 48
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	80 81       	ld	r24, Z
    114a:	eb 81       	ldd	r30, Y+3	; 0x03
    114c:	fc 81       	ldd	r31, Y+4	; 0x04
    114e:	80 83       	st	Z, r24
    1150:	0c c0       	rjmp	.+24     	; 0x116a <DIO_u8GetPortValue+0x9e>

					break;

				case DIO_PORT_C:

					*Copy_u8PValue = PINC;
    1152:	e3 e3       	ldi	r30, 0x33	; 51
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	80 81       	ld	r24, Z
    1158:	eb 81       	ldd	r30, Y+3	; 0x03
    115a:	fc 81       	ldd	r31, Y+4	; 0x04
    115c:	80 83       	st	Z, r24
    115e:	05 c0       	rjmp	.+10     	; 0x116a <DIO_u8GetPortValue+0x9e>

					break;

				default : Local_u8Error = 1;
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	89 83       	std	Y+1, r24	; 0x01
    1164:	02 c0       	rjmp	.+4      	; 0x116a <DIO_u8GetPortValue+0x9e>
	}

				else

					{
		                Local_u8Error = 1 ;
    1166:	81 e0       	ldi	r24, 0x01	; 1
    1168:	89 83       	std	Y+1, r24	; 0x01

					}


	        return Local_u8Error ;
    116a:	89 81       	ldd	r24, Y+1	; 0x01
	}
    116c:	26 96       	adiw	r28, 0x06	; 6
    116e:	0f b6       	in	r0, 0x3f	; 63
    1170:	f8 94       	cli
    1172:	de bf       	out	0x3e, r29	; 62
    1174:	0f be       	out	0x3f, r0	; 63
    1176:	cd bf       	out	0x3d, r28	; 61
    1178:	cf 91       	pop	r28
    117a:	df 91       	pop	r29
    117c:	08 95       	ret

0000117e <KeyBad_voidInit>:

u8 KeyBad_Row[]={R0,R1,R2,R3};


void KeyBad_voidInit(void)
{
    117e:	df 93       	push	r29
    1180:	cf 93       	push	r28
    1182:	cd b7       	in	r28, 0x3d	; 61
    1184:	de b7       	in	r29, 0x3e	; 62
	DIO_u8SetPortDirection(KEY_BAD_PORT,0xF0);
    1186:	83 e0       	ldi	r24, 0x03	; 3
    1188:	60 ef       	ldi	r22, 0xF0	; 240
    118a:	0e 94 67 06 	call	0xcce	; 0xcce <DIO_u8SetPortDirection>

	DIO_u8SetPortValue(KEY_BAD_PORT,0xFF);
    118e:	83 e0       	ldi	r24, 0x03	; 3
    1190:	6f ef       	ldi	r22, 0xFF	; 255
    1192:	0e 94 81 07 	call	0xf02	; 0xf02 <DIO_u8SetPortValue>

}
    1196:	cf 91       	pop	r28
    1198:	df 91       	pop	r29
    119a:	08 95       	ret

0000119c <KeyBad_u8GetKey>:
void KeyBad_u8GetKey(u8*key)
{
    119c:	df 93       	push	r29
    119e:	cf 93       	push	r28
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	27 97       	sbiw	r28, 0x07	; 7
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	9d 83       	std	Y+5, r25	; 0x05
    11b2:	8c 83       	std	Y+4, r24	; 0x04
	u8 i,j,getbit;//i co   j row

	for(i=0;i<4;i++)
    11b4:	1a 82       	std	Y+2, r1	; 0x02
    11b6:	d8 c0       	rjmp	.+432    	; 0x1368 <KeyBad_u8GetKey+0x1cc>

	{
		DIO_u8SetPortValue(KEY_BAD_PORT,0xFF);
    11b8:	83 e0       	ldi	r24, 0x03	; 3
    11ba:	6f ef       	ldi	r22, 0xFF	; 255
    11bc:	0e 94 81 07 	call	0xf02	; 0xf02 <DIO_u8SetPortValue>

		DIO_u8SetPinValue(KEY_BAD_PORT,KeyBad_Col[i],DIO_PIN_LOW);
    11c0:	8a 81       	ldd	r24, Y+2	; 0x02
    11c2:	88 2f       	mov	r24, r24
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	fc 01       	movw	r30, r24
    11c8:	e8 5e       	subi	r30, 0xE8	; 232
    11ca:	fe 4f       	sbci	r31, 0xFE	; 254
    11cc:	90 81       	ld	r25, Z
    11ce:	83 e0       	ldi	r24, 0x03	; 3
    11d0:	69 2f       	mov	r22, r25
    11d2:	40 e0       	ldi	r20, 0x00	; 0
    11d4:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

		for(j=0;j<4;j++)
    11d8:	19 82       	std	Y+1, r1	; 0x01
    11da:	bf c0       	rjmp	.+382    	; 0x135a <KeyBad_u8GetKey+0x1be>

		{
			DIO_u8GetPinValue(KEY_BAD_PORT,KeyBad_Row[j],&getbit);
    11dc:	89 81       	ldd	r24, Y+1	; 0x01
    11de:	88 2f       	mov	r24, r24
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	fc 01       	movw	r30, r24
    11e4:	e4 5e       	subi	r30, 0xE4	; 228
    11e6:	fe 4f       	sbci	r31, 0xFE	; 254
    11e8:	90 81       	ld	r25, Z
    11ea:	9e 01       	movw	r18, r28
    11ec:	2d 5f       	subi	r18, 0xFD	; 253
    11ee:	3f 4f       	sbci	r19, 0xFF	; 255
    11f0:	83 e0       	ldi	r24, 0x03	; 3
    11f2:	69 2f       	mov	r22, r25
    11f4:	a9 01       	movw	r20, r18
    11f6:	0e 94 cf 07 	call	0xf9e	; 0xf9e <DIO_u8GetPinValue>

			if(!(getbit))
    11fa:	8b 81       	ldd	r24, Y+3	; 0x03
    11fc:	88 23       	and	r24, r24
    11fe:	09 f0       	breq	.+2      	; 0x1202 <KeyBad_u8GetKey+0x66>
    1200:	a9 c0       	rjmp	.+338    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
    1202:	0f c0       	rjmp	.+30     	; 0x1222 <KeyBad_u8GetKey+0x86>

			{
				while(!(getbit))

				{
					DIO_u8GetPinValue(KEY_BAD_PORT,KeyBad_Row[j],&getbit);
    1204:	89 81       	ldd	r24, Y+1	; 0x01
    1206:	88 2f       	mov	r24, r24
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	fc 01       	movw	r30, r24
    120c:	e4 5e       	subi	r30, 0xE4	; 228
    120e:	fe 4f       	sbci	r31, 0xFE	; 254
    1210:	90 81       	ld	r25, Z
    1212:	9e 01       	movw	r18, r28
    1214:	2d 5f       	subi	r18, 0xFD	; 253
    1216:	3f 4f       	sbci	r19, 0xFF	; 255
    1218:	83 e0       	ldi	r24, 0x03	; 3
    121a:	69 2f       	mov	r22, r25
    121c:	a9 01       	movw	r20, r18
    121e:	0e 94 cf 07 	call	0xf9e	; 0xf9e <DIO_u8GetPinValue>
			DIO_u8GetPinValue(KEY_BAD_PORT,KeyBad_Row[j],&getbit);

			if(!(getbit))

			{
				while(!(getbit))
    1222:	8b 81       	ldd	r24, Y+3	; 0x03
    1224:	88 23       	and	r24, r24
    1226:	71 f3       	breq	.-36     	; 0x1204 <KeyBad_u8GetKey+0x68>

				{
					DIO_u8GetPinValue(KEY_BAD_PORT,KeyBad_Row[j],&getbit);
				}

		switch(i)
    1228:	8a 81       	ldd	r24, Y+2	; 0x02
    122a:	28 2f       	mov	r18, r24
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	3f 83       	std	Y+7, r19	; 0x07
    1230:	2e 83       	std	Y+6, r18	; 0x06
    1232:	8e 81       	ldd	r24, Y+6	; 0x06
    1234:	9f 81       	ldd	r25, Y+7	; 0x07
    1236:	81 30       	cpi	r24, 0x01	; 1
    1238:	91 05       	cpc	r25, r1
    123a:	a9 f1       	breq	.+106    	; 0x12a6 <KeyBad_u8GetKey+0x10a>
    123c:	2e 81       	ldd	r18, Y+6	; 0x06
    123e:	3f 81       	ldd	r19, Y+7	; 0x07
    1240:	22 30       	cpi	r18, 0x02	; 2
    1242:	31 05       	cpc	r19, r1
    1244:	2c f4       	brge	.+10     	; 0x1250 <KeyBad_u8GetKey+0xb4>
    1246:	8e 81       	ldd	r24, Y+6	; 0x06
    1248:	9f 81       	ldd	r25, Y+7	; 0x07
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	71 f0       	breq	.+28     	; 0x126a <KeyBad_u8GetKey+0xce>
    124e:	82 c0       	rjmp	.+260    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
    1250:	2e 81       	ldd	r18, Y+6	; 0x06
    1252:	3f 81       	ldd	r19, Y+7	; 0x07
    1254:	22 30       	cpi	r18, 0x02	; 2
    1256:	31 05       	cpc	r19, r1
    1258:	09 f4       	brne	.+2      	; 0x125c <KeyBad_u8GetKey+0xc0>
    125a:	43 c0       	rjmp	.+134    	; 0x12e2 <KeyBad_u8GetKey+0x146>
    125c:	8e 81       	ldd	r24, Y+6	; 0x06
    125e:	9f 81       	ldd	r25, Y+7	; 0x07
    1260:	83 30       	cpi	r24, 0x03	; 3
    1262:	91 05       	cpc	r25, r1
    1264:	09 f4       	brne	.+2      	; 0x1268 <KeyBad_u8GetKey+0xcc>
    1266:	5a c0       	rjmp	.+180    	; 0x131c <KeyBad_u8GetKey+0x180>
    1268:	75 c0       	rjmp	.+234    	; 0x1354 <KeyBad_u8GetKey+0x1b8>

		{
				case 0:

						if(j==0)
    126a:	89 81       	ldd	r24, Y+1	; 0x01
    126c:	88 23       	and	r24, r24
    126e:	21 f4       	brne	.+8      	; 0x1278 <KeyBad_u8GetKey+0xdc>
							*key= 1 ;
    1270:	ec 81       	ldd	r30, Y+4	; 0x04
    1272:	fd 81       	ldd	r31, Y+5	; 0x05
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	80 83       	st	Z, r24
						if(j==1)
    1278:	89 81       	ldd	r24, Y+1	; 0x01
    127a:	81 30       	cpi	r24, 0x01	; 1
    127c:	21 f4       	brne	.+8      	; 0x1286 <KeyBad_u8GetKey+0xea>
							*key='4';
    127e:	ec 81       	ldd	r30, Y+4	; 0x04
    1280:	fd 81       	ldd	r31, Y+5	; 0x05
    1282:	84 e3       	ldi	r24, 0x34	; 52
    1284:	80 83       	st	Z, r24
						if(j==2)
    1286:	89 81       	ldd	r24, Y+1	; 0x01
    1288:	82 30       	cpi	r24, 0x02	; 2
    128a:	21 f4       	brne	.+8      	; 0x1294 <KeyBad_u8GetKey+0xf8>
							*key='7';
    128c:	ec 81       	ldd	r30, Y+4	; 0x04
    128e:	fd 81       	ldd	r31, Y+5	; 0x05
    1290:	87 e3       	ldi	r24, 0x37	; 55
    1292:	80 83       	st	Z, r24
						if(j==3)
    1294:	89 81       	ldd	r24, Y+1	; 0x01
    1296:	83 30       	cpi	r24, 0x03	; 3
    1298:	09 f0       	breq	.+2      	; 0x129c <KeyBad_u8GetKey+0x100>
    129a:	5c c0       	rjmp	.+184    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
							*key='=';
    129c:	ec 81       	ldd	r30, Y+4	; 0x04
    129e:	fd 81       	ldd	r31, Y+5	; 0x05
    12a0:	8d e3       	ldi	r24, 0x3D	; 61
    12a2:	80 83       	st	Z, r24
    12a4:	57 c0       	rjmp	.+174    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
						break;

				case 1:
					{
						if(j==0)
    12a6:	89 81       	ldd	r24, Y+1	; 0x01
    12a8:	88 23       	and	r24, r24
    12aa:	21 f4       	brne	.+8      	; 0x12b4 <KeyBad_u8GetKey+0x118>
							*key= 2 ;
    12ac:	ec 81       	ldd	r30, Y+4	; 0x04
    12ae:	fd 81       	ldd	r31, Y+5	; 0x05
    12b0:	82 e0       	ldi	r24, 0x02	; 2
    12b2:	80 83       	st	Z, r24
						if(j==1)
    12b4:	89 81       	ldd	r24, Y+1	; 0x01
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	21 f4       	brne	.+8      	; 0x12c2 <KeyBad_u8GetKey+0x126>
							*key='5';
    12ba:	ec 81       	ldd	r30, Y+4	; 0x04
    12bc:	fd 81       	ldd	r31, Y+5	; 0x05
    12be:	85 e3       	ldi	r24, 0x35	; 53
    12c0:	80 83       	st	Z, r24
						if(j==2)
    12c2:	89 81       	ldd	r24, Y+1	; 0x01
    12c4:	82 30       	cpi	r24, 0x02	; 2
    12c6:	21 f4       	brne	.+8      	; 0x12d0 <KeyBad_u8GetKey+0x134>
							*key='8';
    12c8:	ec 81       	ldd	r30, Y+4	; 0x04
    12ca:	fd 81       	ldd	r31, Y+5	; 0x05
    12cc:	88 e3       	ldi	r24, 0x38	; 56
    12ce:	80 83       	st	Z, r24
						if(j==3)
    12d0:	89 81       	ldd	r24, Y+1	; 0x01
    12d2:	83 30       	cpi	r24, 0x03	; 3
    12d4:	09 f0       	breq	.+2      	; 0x12d8 <KeyBad_u8GetKey+0x13c>
    12d6:	3e c0       	rjmp	.+124    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
							*key='*';
    12d8:	ec 81       	ldd	r30, Y+4	; 0x04
    12da:	fd 81       	ldd	r31, Y+5	; 0x05
    12dc:	8a e2       	ldi	r24, 0x2A	; 42
    12de:	80 83       	st	Z, r24
    12e0:	39 c0       	rjmp	.+114    	; 0x1354 <KeyBad_u8GetKey+0x1b8>
						break;
					}
				case 2:
					{
						if(j==0)
    12e2:	89 81       	ldd	r24, Y+1	; 0x01
    12e4:	88 23       	and	r24, r24
    12e6:	21 f4       	brne	.+8      	; 0x12f0 <KeyBad_u8GetKey+0x154>
							*key= 3 ;
    12e8:	ec 81       	ldd	r30, Y+4	; 0x04
    12ea:	fd 81       	ldd	r31, Y+5	; 0x05
    12ec:	83 e0       	ldi	r24, 0x03	; 3
    12ee:	80 83       	st	Z, r24
						if(j==1)
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	81 30       	cpi	r24, 0x01	; 1
    12f4:	21 f4       	brne	.+8      	; 0x12fe <KeyBad_u8GetKey+0x162>
							*key='6';
    12f6:	ec 81       	ldd	r30, Y+4	; 0x04
    12f8:	fd 81       	ldd	r31, Y+5	; 0x05
    12fa:	86 e3       	ldi	r24, 0x36	; 54
    12fc:	80 83       	st	Z, r24
						if(j==2)
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	82 30       	cpi	r24, 0x02	; 2
    1302:	21 f4       	brne	.+8      	; 0x130c <KeyBad_u8GetKey+0x170>
							*key='9';
    1304:	ec 81       	ldd	r30, Y+4	; 0x04
    1306:	fd 81       	ldd	r31, Y+5	; 0x05
    1308:	89 e3       	ldi	r24, 0x39	; 57
    130a:	80 83       	st	Z, r24
						if(j==3)
    130c:	89 81       	ldd	r24, Y+1	; 0x01
    130e:	83 30       	cpi	r24, 0x03	; 3
    1310:	09 f5       	brne	.+66     	; 0x1354 <KeyBad_u8GetKey+0x1b8>
							*key='%';
    1312:	ec 81       	ldd	r30, Y+4	; 0x04
    1314:	fd 81       	ldd	r31, Y+5	; 0x05
    1316:	85 e2       	ldi	r24, 0x25	; 37
    1318:	80 83       	st	Z, r24
    131a:	1c c0       	rjmp	.+56     	; 0x1354 <KeyBad_u8GetKey+0x1b8>
						break;
					}
				case 3:
					{
						if(j==0)
    131c:	89 81       	ldd	r24, Y+1	; 0x01
    131e:	88 23       	and	r24, r24
    1320:	21 f4       	brne	.+8      	; 0x132a <KeyBad_u8GetKey+0x18e>
							*key='+';
    1322:	ec 81       	ldd	r30, Y+4	; 0x04
    1324:	fd 81       	ldd	r31, Y+5	; 0x05
    1326:	8b e2       	ldi	r24, 0x2B	; 43
    1328:	80 83       	st	Z, r24
						if(j==1)
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	81 30       	cpi	r24, 0x01	; 1
    132e:	21 f4       	brne	.+8      	; 0x1338 <KeyBad_u8GetKey+0x19c>
							*key='-';
    1330:	ec 81       	ldd	r30, Y+4	; 0x04
    1332:	fd 81       	ldd	r31, Y+5	; 0x05
    1334:	8d e2       	ldi	r24, 0x2D	; 45
    1336:	80 83       	st	Z, r24
						if(j==2)
    1338:	89 81       	ldd	r24, Y+1	; 0x01
    133a:	82 30       	cpi	r24, 0x02	; 2
    133c:	21 f4       	brne	.+8      	; 0x1346 <KeyBad_u8GetKey+0x1aa>
							*key='/';
    133e:	ec 81       	ldd	r30, Y+4	; 0x04
    1340:	fd 81       	ldd	r31, Y+5	; 0x05
    1342:	8f e2       	ldi	r24, 0x2F	; 47
    1344:	80 83       	st	Z, r24
						if(j==3)
    1346:	89 81       	ldd	r24, Y+1	; 0x01
    1348:	83 30       	cpi	r24, 0x03	; 3
    134a:	21 f4       	brne	.+8      	; 0x1354 <KeyBad_u8GetKey+0x1b8>
							*key='0';
    134c:	ec 81       	ldd	r30, Y+4	; 0x04
    134e:	fd 81       	ldd	r31, Y+5	; 0x05
    1350:	80 e3       	ldi	r24, 0x30	; 48
    1352:	80 83       	st	Z, r24
	{
		DIO_u8SetPortValue(KEY_BAD_PORT,0xFF);

		DIO_u8SetPinValue(KEY_BAD_PORT,KeyBad_Col[i],DIO_PIN_LOW);

		for(j=0;j<4;j++)
    1354:	89 81       	ldd	r24, Y+1	; 0x01
    1356:	8f 5f       	subi	r24, 0xFF	; 255
    1358:	89 83       	std	Y+1, r24	; 0x01
    135a:	89 81       	ldd	r24, Y+1	; 0x01
    135c:	84 30       	cpi	r24, 0x04	; 4
    135e:	08 f4       	brcc	.+2      	; 0x1362 <KeyBad_u8GetKey+0x1c6>
    1360:	3d cf       	rjmp	.-390    	; 0x11dc <KeyBad_u8GetKey+0x40>
}
void KeyBad_u8GetKey(u8*key)
{
	u8 i,j,getbit;//i co   j row

	for(i=0;i<4;i++)
    1362:	8a 81       	ldd	r24, Y+2	; 0x02
    1364:	8f 5f       	subi	r24, 0xFF	; 255
    1366:	8a 83       	std	Y+2, r24	; 0x02
    1368:	8a 81       	ldd	r24, Y+2	; 0x02
    136a:	84 30       	cpi	r24, 0x04	; 4
    136c:	08 f4       	brcc	.+2      	; 0x1370 <KeyBad_u8GetKey+0x1d4>
    136e:	24 cf       	rjmp	.-440    	; 0x11b8 <KeyBad_u8GetKey+0x1c>
			}
		}

	}

}
    1370:	27 96       	adiw	r28, 0x07	; 7
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
    137c:	cf 91       	pop	r28
    137e:	df 91       	pop	r29
    1380:	08 95       	ret

00001382 <LCD4_voidSendCmd>:
 * Inputs: code of command
 * Output: void
 */
void LCD4_voidSendCmd(u8 cmd)

{
    1382:	df 93       	push	r29
    1384:	cf 93       	push	r28
    1386:	cd b7       	in	r28, 0x3d	; 61
    1388:	de b7       	in	r29, 0x3e	; 62
    138a:	e9 97       	sbiw	r28, 0x39	; 57
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61
    1396:	89 af       	std	Y+57, r24	; 0x39
	/* RS  => 0 (command) */
	DIO_u8SetPinValue(LCD_PORT , 4 , DIO_PIN_LOW) ;
    1398:	81 e0       	ldi	r24, 0x01	; 1
    139a:	64 e0       	ldi	r22, 0x04	; 4
    139c:	40 e0       	ldi	r20, 0x00	; 0
    139e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	/* R/W  => 0 (Write) */
	DIO_u8SetPinValue(LCD_PORT , 5 , DIO_PIN_LOW)  ;
    13a2:	81 e0       	ldi	r24, 0x01	; 1
    13a4:	65 e0       	ldi	r22, 0x05	; 5
    13a6:	40 e0       	ldi	r20, 0x00	; 0
    13a8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	/* sending upper nibble */

	DIO_u8SetPinValue(LCD_PORT ,0 ,  GET_BIT(cmd, 4)) ;
    13ac:	89 ad       	ldd	r24, Y+57	; 0x39
    13ae:	82 95       	swap	r24
    13b0:	8f 70       	andi	r24, 0x0F	; 15
    13b2:	98 2f       	mov	r25, r24
    13b4:	91 70       	andi	r25, 0x01	; 1
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	49 2f       	mov	r20, r25
    13bc:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,1 ,  GET_BIT(cmd, 5)) ;
    13c0:	89 ad       	ldd	r24, Y+57	; 0x39
    13c2:	82 95       	swap	r24
    13c4:	86 95       	lsr	r24
    13c6:	87 70       	andi	r24, 0x07	; 7
    13c8:	98 2f       	mov	r25, r24
    13ca:	91 70       	andi	r25, 0x01	; 1
    13cc:	81 e0       	ldi	r24, 0x01	; 1
    13ce:	61 e0       	ldi	r22, 0x01	; 1
    13d0:	49 2f       	mov	r20, r25
    13d2:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,2 ,  GET_BIT(cmd, 6)) ;
    13d6:	89 ad       	ldd	r24, Y+57	; 0x39
    13d8:	82 95       	swap	r24
    13da:	86 95       	lsr	r24
    13dc:	86 95       	lsr	r24
    13de:	83 70       	andi	r24, 0x03	; 3
    13e0:	98 2f       	mov	r25, r24
    13e2:	91 70       	andi	r25, 0x01	; 1
    13e4:	81 e0       	ldi	r24, 0x01	; 1
    13e6:	62 e0       	ldi	r22, 0x02	; 2
    13e8:	49 2f       	mov	r20, r25
    13ea:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,3 ,  GET_BIT(cmd, 7)) ;
    13ee:	89 ad       	ldd	r24, Y+57	; 0x39
    13f0:	98 2f       	mov	r25, r24
    13f2:	99 1f       	adc	r25, r25
    13f4:	99 27       	eor	r25, r25
    13f6:	99 1f       	adc	r25, r25
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	63 e0       	ldi	r22, 0x03	; 3
    13fc:	49 2f       	mov	r20, r25
    13fe:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_HIGH)  ;
    1402:	81 e0       	ldi	r24, 0x01	; 1
    1404:	66 e0       	ldi	r22, 0x06	; 6
    1406:	41 e0       	ldi	r20, 0x01	; 1
    1408:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    140c:	80 e0       	ldi	r24, 0x00	; 0
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	a0 e8       	ldi	r26, 0x80	; 128
    1412:	bf e3       	ldi	r27, 0x3F	; 63
    1414:	8d ab       	std	Y+53, r24	; 0x35
    1416:	9e ab       	std	Y+54, r25	; 0x36
    1418:	af ab       	std	Y+55, r26	; 0x37
    141a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    141c:	6d a9       	ldd	r22, Y+53	; 0x35
    141e:	7e a9       	ldd	r23, Y+54	; 0x36
    1420:	8f a9       	ldd	r24, Y+55	; 0x37
    1422:	98 ad       	ldd	r25, Y+56	; 0x38
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	4a ef       	ldi	r20, 0xFA	; 250
    142a:	54 e4       	ldi	r21, 0x44	; 68
    142c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1430:	dc 01       	movw	r26, r24
    1432:	cb 01       	movw	r24, r22
    1434:	89 ab       	std	Y+49, r24	; 0x31
    1436:	9a ab       	std	Y+50, r25	; 0x32
    1438:	ab ab       	std	Y+51, r26	; 0x33
    143a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    143c:	69 a9       	ldd	r22, Y+49	; 0x31
    143e:	7a a9       	ldd	r23, Y+50	; 0x32
    1440:	8b a9       	ldd	r24, Y+51	; 0x33
    1442:	9c a9       	ldd	r25, Y+52	; 0x34
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	40 e8       	ldi	r20, 0x80	; 128
    144a:	5f e3       	ldi	r21, 0x3F	; 63
    144c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1450:	88 23       	and	r24, r24
    1452:	2c f4       	brge	.+10     	; 0x145e <LCD4_voidSendCmd+0xdc>
		__ticks = 1;
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	98 ab       	std	Y+48, r25	; 0x30
    145a:	8f a7       	std	Y+47, r24	; 0x2f
    145c:	3f c0       	rjmp	.+126    	; 0x14dc <LCD4_voidSendCmd+0x15a>
	else if (__tmp > 65535)
    145e:	69 a9       	ldd	r22, Y+49	; 0x31
    1460:	7a a9       	ldd	r23, Y+50	; 0x32
    1462:	8b a9       	ldd	r24, Y+51	; 0x33
    1464:	9c a9       	ldd	r25, Y+52	; 0x34
    1466:	20 e0       	ldi	r18, 0x00	; 0
    1468:	3f ef       	ldi	r19, 0xFF	; 255
    146a:	4f e7       	ldi	r20, 0x7F	; 127
    146c:	57 e4       	ldi	r21, 0x47	; 71
    146e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1472:	18 16       	cp	r1, r24
    1474:	4c f5       	brge	.+82     	; 0x14c8 <LCD4_voidSendCmd+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1476:	6d a9       	ldd	r22, Y+53	; 0x35
    1478:	7e a9       	ldd	r23, Y+54	; 0x36
    147a:	8f a9       	ldd	r24, Y+55	; 0x37
    147c:	98 ad       	ldd	r25, Y+56	; 0x38
    147e:	20 e0       	ldi	r18, 0x00	; 0
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	40 e2       	ldi	r20, 0x20	; 32
    1484:	51 e4       	ldi	r21, 0x41	; 65
    1486:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    148a:	dc 01       	movw	r26, r24
    148c:	cb 01       	movw	r24, r22
    148e:	bc 01       	movw	r22, r24
    1490:	cd 01       	movw	r24, r26
    1492:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1496:	dc 01       	movw	r26, r24
    1498:	cb 01       	movw	r24, r22
    149a:	98 ab       	std	Y+48, r25	; 0x30
    149c:	8f a7       	std	Y+47, r24	; 0x2f
    149e:	0f c0       	rjmp	.+30     	; 0x14be <LCD4_voidSendCmd+0x13c>
    14a0:	88 ec       	ldi	r24, 0xC8	; 200
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	9e a7       	std	Y+46, r25	; 0x2e
    14a6:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14a8:	8d a5       	ldd	r24, Y+45	; 0x2d
    14aa:	9e a5       	ldd	r25, Y+46	; 0x2e
    14ac:	01 97       	sbiw	r24, 0x01	; 1
    14ae:	f1 f7       	brne	.-4      	; 0x14ac <LCD4_voidSendCmd+0x12a>
    14b0:	9e a7       	std	Y+46, r25	; 0x2e
    14b2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14b4:	8f a5       	ldd	r24, Y+47	; 0x2f
    14b6:	98 a9       	ldd	r25, Y+48	; 0x30
    14b8:	01 97       	sbiw	r24, 0x01	; 1
    14ba:	98 ab       	std	Y+48, r25	; 0x30
    14bc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14be:	8f a5       	ldd	r24, Y+47	; 0x2f
    14c0:	98 a9       	ldd	r25, Y+48	; 0x30
    14c2:	00 97       	sbiw	r24, 0x00	; 0
    14c4:	69 f7       	brne	.-38     	; 0x14a0 <LCD4_voidSendCmd+0x11e>
    14c6:	14 c0       	rjmp	.+40     	; 0x14f0 <LCD4_voidSendCmd+0x16e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14c8:	69 a9       	ldd	r22, Y+49	; 0x31
    14ca:	7a a9       	ldd	r23, Y+50	; 0x32
    14cc:	8b a9       	ldd	r24, Y+51	; 0x33
    14ce:	9c a9       	ldd	r25, Y+52	; 0x34
    14d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14d4:	dc 01       	movw	r26, r24
    14d6:	cb 01       	movw	r24, r22
    14d8:	98 ab       	std	Y+48, r25	; 0x30
    14da:	8f a7       	std	Y+47, r24	; 0x2f
    14dc:	8f a5       	ldd	r24, Y+47	; 0x2f
    14de:	98 a9       	ldd	r25, Y+48	; 0x30
    14e0:	9c a7       	std	Y+44, r25	; 0x2c
    14e2:	8b a7       	std	Y+43, r24	; 0x2b
    14e4:	8b a5       	ldd	r24, Y+43	; 0x2b
    14e6:	9c a5       	ldd	r25, Y+44	; 0x2c
    14e8:	01 97       	sbiw	r24, 0x01	; 1
    14ea:	f1 f7       	brne	.-4      	; 0x14e8 <LCD4_voidSendCmd+0x166>
    14ec:	9c a7       	std	Y+44, r25	; 0x2c
    14ee:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(1);

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_LOW)  ;
    14f0:	81 e0       	ldi	r24, 0x01	; 1
    14f2:	66 e0       	ldi	r22, 0x06	; 6
    14f4:	40 e0       	ldi	r20, 0x00	; 0
    14f6:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	a8 ec       	ldi	r26, 0xC8	; 200
    1500:	b2 e4       	ldi	r27, 0x42	; 66
    1502:	8f a3       	std	Y+39, r24	; 0x27
    1504:	98 a7       	std	Y+40, r25	; 0x28
    1506:	a9 a7       	std	Y+41, r26	; 0x29
    1508:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    150a:	6f a1       	ldd	r22, Y+39	; 0x27
    150c:	78 a5       	ldd	r23, Y+40	; 0x28
    150e:	89 a5       	ldd	r24, Y+41	; 0x29
    1510:	9a a5       	ldd	r25, Y+42	; 0x2a
    1512:	20 e0       	ldi	r18, 0x00	; 0
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	4a ef       	ldi	r20, 0xFA	; 250
    1518:	54 e4       	ldi	r21, 0x44	; 68
    151a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	8b a3       	std	Y+35, r24	; 0x23
    1524:	9c a3       	std	Y+36, r25	; 0x24
    1526:	ad a3       	std	Y+37, r26	; 0x25
    1528:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    152a:	6b a1       	ldd	r22, Y+35	; 0x23
    152c:	7c a1       	ldd	r23, Y+36	; 0x24
    152e:	8d a1       	ldd	r24, Y+37	; 0x25
    1530:	9e a1       	ldd	r25, Y+38	; 0x26
    1532:	20 e0       	ldi	r18, 0x00	; 0
    1534:	30 e0       	ldi	r19, 0x00	; 0
    1536:	40 e8       	ldi	r20, 0x80	; 128
    1538:	5f e3       	ldi	r21, 0x3F	; 63
    153a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    153e:	88 23       	and	r24, r24
    1540:	2c f4       	brge	.+10     	; 0x154c <LCD4_voidSendCmd+0x1ca>
		__ticks = 1;
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	9a a3       	std	Y+34, r25	; 0x22
    1548:	89 a3       	std	Y+33, r24	; 0x21
    154a:	3f c0       	rjmp	.+126    	; 0x15ca <LCD4_voidSendCmd+0x248>
	else if (__tmp > 65535)
    154c:	6b a1       	ldd	r22, Y+35	; 0x23
    154e:	7c a1       	ldd	r23, Y+36	; 0x24
    1550:	8d a1       	ldd	r24, Y+37	; 0x25
    1552:	9e a1       	ldd	r25, Y+38	; 0x26
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	3f ef       	ldi	r19, 0xFF	; 255
    1558:	4f e7       	ldi	r20, 0x7F	; 127
    155a:	57 e4       	ldi	r21, 0x47	; 71
    155c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1560:	18 16       	cp	r1, r24
    1562:	4c f5       	brge	.+82     	; 0x15b6 <LCD4_voidSendCmd+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1564:	6f a1       	ldd	r22, Y+39	; 0x27
    1566:	78 a5       	ldd	r23, Y+40	; 0x28
    1568:	89 a5       	ldd	r24, Y+41	; 0x29
    156a:	9a a5       	ldd	r25, Y+42	; 0x2a
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	40 e2       	ldi	r20, 0x20	; 32
    1572:	51 e4       	ldi	r21, 0x41	; 65
    1574:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1578:	dc 01       	movw	r26, r24
    157a:	cb 01       	movw	r24, r22
    157c:	bc 01       	movw	r22, r24
    157e:	cd 01       	movw	r24, r26
    1580:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1584:	dc 01       	movw	r26, r24
    1586:	cb 01       	movw	r24, r22
    1588:	9a a3       	std	Y+34, r25	; 0x22
    158a:	89 a3       	std	Y+33, r24	; 0x21
    158c:	0f c0       	rjmp	.+30     	; 0x15ac <LCD4_voidSendCmd+0x22a>
    158e:	88 ec       	ldi	r24, 0xC8	; 200
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	98 a3       	std	Y+32, r25	; 0x20
    1594:	8f 8f       	std	Y+31, r24	; 0x1f
    1596:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1598:	98 a1       	ldd	r25, Y+32	; 0x20
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	f1 f7       	brne	.-4      	; 0x159a <LCD4_voidSendCmd+0x218>
    159e:	98 a3       	std	Y+32, r25	; 0x20
    15a0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15a2:	89 a1       	ldd	r24, Y+33	; 0x21
    15a4:	9a a1       	ldd	r25, Y+34	; 0x22
    15a6:	01 97       	sbiw	r24, 0x01	; 1
    15a8:	9a a3       	std	Y+34, r25	; 0x22
    15aa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ac:	89 a1       	ldd	r24, Y+33	; 0x21
    15ae:	9a a1       	ldd	r25, Y+34	; 0x22
    15b0:	00 97       	sbiw	r24, 0x00	; 0
    15b2:	69 f7       	brne	.-38     	; 0x158e <LCD4_voidSendCmd+0x20c>
    15b4:	14 c0       	rjmp	.+40     	; 0x15de <LCD4_voidSendCmd+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15b6:	6b a1       	ldd	r22, Y+35	; 0x23
    15b8:	7c a1       	ldd	r23, Y+36	; 0x24
    15ba:	8d a1       	ldd	r24, Y+37	; 0x25
    15bc:	9e a1       	ldd	r25, Y+38	; 0x26
    15be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	9a a3       	std	Y+34, r25	; 0x22
    15c8:	89 a3       	std	Y+33, r24	; 0x21
    15ca:	89 a1       	ldd	r24, Y+33	; 0x21
    15cc:	9a a1       	ldd	r25, Y+34	; 0x22
    15ce:	9e 8f       	std	Y+30, r25	; 0x1e
    15d0:	8d 8f       	std	Y+29, r24	; 0x1d
    15d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <LCD4_voidSendCmd+0x254>
    15da:	9e 8f       	std	Y+30, r25	; 0x1e
    15dc:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(100);

	/* sending lower nibble */

	DIO_u8SetPinValue(LCD_PORT ,0 ,  GET_BIT(cmd, 0)) ;
    15de:	89 ad       	ldd	r24, Y+57	; 0x39
    15e0:	98 2f       	mov	r25, r24
    15e2:	91 70       	andi	r25, 0x01	; 1
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	60 e0       	ldi	r22, 0x00	; 0
    15e8:	49 2f       	mov	r20, r25
    15ea:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,1 ,  GET_BIT(cmd, 1)) ;
    15ee:	89 ad       	ldd	r24, Y+57	; 0x39
    15f0:	86 95       	lsr	r24
    15f2:	98 2f       	mov	r25, r24
    15f4:	91 70       	andi	r25, 0x01	; 1
    15f6:	81 e0       	ldi	r24, 0x01	; 1
    15f8:	61 e0       	ldi	r22, 0x01	; 1
    15fa:	49 2f       	mov	r20, r25
    15fc:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,2 ,  GET_BIT(cmd, 2)) ;
    1600:	89 ad       	ldd	r24, Y+57	; 0x39
    1602:	86 95       	lsr	r24
    1604:	86 95       	lsr	r24
    1606:	98 2f       	mov	r25, r24
    1608:	91 70       	andi	r25, 0x01	; 1
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	62 e0       	ldi	r22, 0x02	; 2
    160e:	49 2f       	mov	r20, r25
    1610:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,3 ,  GET_BIT(cmd, 3)) ;
    1614:	89 ad       	ldd	r24, Y+57	; 0x39
    1616:	86 95       	lsr	r24
    1618:	86 95       	lsr	r24
    161a:	86 95       	lsr	r24
    161c:	98 2f       	mov	r25, r24
    161e:	91 70       	andi	r25, 0x01	; 1
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	63 e0       	ldi	r22, 0x03	; 3
    1624:	49 2f       	mov	r20, r25
    1626:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_HIGH)  ;
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	66 e0       	ldi	r22, 0x06	; 6
    162e:	41 e0       	ldi	r20, 0x01	; 1
    1630:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    1634:	80 e0       	ldi	r24, 0x00	; 0
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	a0 e8       	ldi	r26, 0x80	; 128
    163a:	bf e3       	ldi	r27, 0x3F	; 63
    163c:	89 8f       	std	Y+25, r24	; 0x19
    163e:	9a 8f       	std	Y+26, r25	; 0x1a
    1640:	ab 8f       	std	Y+27, r26	; 0x1b
    1642:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1644:	69 8d       	ldd	r22, Y+25	; 0x19
    1646:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1648:	8b 8d       	ldd	r24, Y+27	; 0x1b
    164a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    164c:	20 e0       	ldi	r18, 0x00	; 0
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	4a ef       	ldi	r20, 0xFA	; 250
    1652:	54 e4       	ldi	r21, 0x44	; 68
    1654:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1658:	dc 01       	movw	r26, r24
    165a:	cb 01       	movw	r24, r22
    165c:	8d 8b       	std	Y+21, r24	; 0x15
    165e:	9e 8b       	std	Y+22, r25	; 0x16
    1660:	af 8b       	std	Y+23, r26	; 0x17
    1662:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1664:	6d 89       	ldd	r22, Y+21	; 0x15
    1666:	7e 89       	ldd	r23, Y+22	; 0x16
    1668:	8f 89       	ldd	r24, Y+23	; 0x17
    166a:	98 8d       	ldd	r25, Y+24	; 0x18
    166c:	20 e0       	ldi	r18, 0x00	; 0
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	40 e8       	ldi	r20, 0x80	; 128
    1672:	5f e3       	ldi	r21, 0x3F	; 63
    1674:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1678:	88 23       	and	r24, r24
    167a:	2c f4       	brge	.+10     	; 0x1686 <LCD4_voidSendCmd+0x304>
		__ticks = 1;
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	9c 8b       	std	Y+20, r25	; 0x14
    1682:	8b 8b       	std	Y+19, r24	; 0x13
    1684:	3f c0       	rjmp	.+126    	; 0x1704 <LCD4_voidSendCmd+0x382>
	else if (__tmp > 65535)
    1686:	6d 89       	ldd	r22, Y+21	; 0x15
    1688:	7e 89       	ldd	r23, Y+22	; 0x16
    168a:	8f 89       	ldd	r24, Y+23	; 0x17
    168c:	98 8d       	ldd	r25, Y+24	; 0x18
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	3f ef       	ldi	r19, 0xFF	; 255
    1692:	4f e7       	ldi	r20, 0x7F	; 127
    1694:	57 e4       	ldi	r21, 0x47	; 71
    1696:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    169a:	18 16       	cp	r1, r24
    169c:	4c f5       	brge	.+82     	; 0x16f0 <LCD4_voidSendCmd+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    169e:	69 8d       	ldd	r22, Y+25	; 0x19
    16a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16a6:	20 e0       	ldi	r18, 0x00	; 0
    16a8:	30 e0       	ldi	r19, 0x00	; 0
    16aa:	40 e2       	ldi	r20, 0x20	; 32
    16ac:	51 e4       	ldi	r21, 0x41	; 65
    16ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16b2:	dc 01       	movw	r26, r24
    16b4:	cb 01       	movw	r24, r22
    16b6:	bc 01       	movw	r22, r24
    16b8:	cd 01       	movw	r24, r26
    16ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16be:	dc 01       	movw	r26, r24
    16c0:	cb 01       	movw	r24, r22
    16c2:	9c 8b       	std	Y+20, r25	; 0x14
    16c4:	8b 8b       	std	Y+19, r24	; 0x13
    16c6:	0f c0       	rjmp	.+30     	; 0x16e6 <LCD4_voidSendCmd+0x364>
    16c8:	88 ec       	ldi	r24, 0xC8	; 200
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	9a 8b       	std	Y+18, r25	; 0x12
    16ce:	89 8b       	std	Y+17, r24	; 0x11
    16d0:	89 89       	ldd	r24, Y+17	; 0x11
    16d2:	9a 89       	ldd	r25, Y+18	; 0x12
    16d4:	01 97       	sbiw	r24, 0x01	; 1
    16d6:	f1 f7       	brne	.-4      	; 0x16d4 <LCD4_voidSendCmd+0x352>
    16d8:	9a 8b       	std	Y+18, r25	; 0x12
    16da:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16dc:	8b 89       	ldd	r24, Y+19	; 0x13
    16de:	9c 89       	ldd	r25, Y+20	; 0x14
    16e0:	01 97       	sbiw	r24, 0x01	; 1
    16e2:	9c 8b       	std	Y+20, r25	; 0x14
    16e4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16e6:	8b 89       	ldd	r24, Y+19	; 0x13
    16e8:	9c 89       	ldd	r25, Y+20	; 0x14
    16ea:	00 97       	sbiw	r24, 0x00	; 0
    16ec:	69 f7       	brne	.-38     	; 0x16c8 <LCD4_voidSendCmd+0x346>
    16ee:	14 c0       	rjmp	.+40     	; 0x1718 <LCD4_voidSendCmd+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16f0:	6d 89       	ldd	r22, Y+21	; 0x15
    16f2:	7e 89       	ldd	r23, Y+22	; 0x16
    16f4:	8f 89       	ldd	r24, Y+23	; 0x17
    16f6:	98 8d       	ldd	r25, Y+24	; 0x18
    16f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	9c 8b       	std	Y+20, r25	; 0x14
    1702:	8b 8b       	std	Y+19, r24	; 0x13
    1704:	8b 89       	ldd	r24, Y+19	; 0x13
    1706:	9c 89       	ldd	r25, Y+20	; 0x14
    1708:	98 8b       	std	Y+16, r25	; 0x10
    170a:	8f 87       	std	Y+15, r24	; 0x0f
    170c:	8f 85       	ldd	r24, Y+15	; 0x0f
    170e:	98 89       	ldd	r25, Y+16	; 0x10
    1710:	01 97       	sbiw	r24, 0x01	; 1
    1712:	f1 f7       	brne	.-4      	; 0x1710 <LCD4_voidSendCmd+0x38e>
    1714:	98 8b       	std	Y+16, r25	; 0x10
    1716:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_LOW)  ;
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	66 e0       	ldi	r22, 0x06	; 6
    171c:	40 e0       	ldi	r20, 0x00	; 0
    171e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    1722:	80 e0       	ldi	r24, 0x00	; 0
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	a8 ec       	ldi	r26, 0xC8	; 200
    1728:	b2 e4       	ldi	r27, 0x42	; 66
    172a:	8b 87       	std	Y+11, r24	; 0x0b
    172c:	9c 87       	std	Y+12, r25	; 0x0c
    172e:	ad 87       	std	Y+13, r26	; 0x0d
    1730:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1732:	6b 85       	ldd	r22, Y+11	; 0x0b
    1734:	7c 85       	ldd	r23, Y+12	; 0x0c
    1736:	8d 85       	ldd	r24, Y+13	; 0x0d
    1738:	9e 85       	ldd	r25, Y+14	; 0x0e
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	4a ef       	ldi	r20, 0xFA	; 250
    1740:	54 e4       	ldi	r21, 0x44	; 68
    1742:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1746:	dc 01       	movw	r26, r24
    1748:	cb 01       	movw	r24, r22
    174a:	8f 83       	std	Y+7, r24	; 0x07
    174c:	98 87       	std	Y+8, r25	; 0x08
    174e:	a9 87       	std	Y+9, r26	; 0x09
    1750:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1752:	6f 81       	ldd	r22, Y+7	; 0x07
    1754:	78 85       	ldd	r23, Y+8	; 0x08
    1756:	89 85       	ldd	r24, Y+9	; 0x09
    1758:	9a 85       	ldd	r25, Y+10	; 0x0a
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	40 e8       	ldi	r20, 0x80	; 128
    1760:	5f e3       	ldi	r21, 0x3F	; 63
    1762:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1766:	88 23       	and	r24, r24
    1768:	2c f4       	brge	.+10     	; 0x1774 <LCD4_voidSendCmd+0x3f2>
		__ticks = 1;
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	9e 83       	std	Y+6, r25	; 0x06
    1770:	8d 83       	std	Y+5, r24	; 0x05
    1772:	3f c0       	rjmp	.+126    	; 0x17f2 <LCD4_voidSendCmd+0x470>
	else if (__tmp > 65535)
    1774:	6f 81       	ldd	r22, Y+7	; 0x07
    1776:	78 85       	ldd	r23, Y+8	; 0x08
    1778:	89 85       	ldd	r24, Y+9	; 0x09
    177a:	9a 85       	ldd	r25, Y+10	; 0x0a
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	3f ef       	ldi	r19, 0xFF	; 255
    1780:	4f e7       	ldi	r20, 0x7F	; 127
    1782:	57 e4       	ldi	r21, 0x47	; 71
    1784:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1788:	18 16       	cp	r1, r24
    178a:	4c f5       	brge	.+82     	; 0x17de <LCD4_voidSendCmd+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    178c:	6b 85       	ldd	r22, Y+11	; 0x0b
    178e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1790:	8d 85       	ldd	r24, Y+13	; 0x0d
    1792:	9e 85       	ldd	r25, Y+14	; 0x0e
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	40 e2       	ldi	r20, 0x20	; 32
    179a:	51 e4       	ldi	r21, 0x41	; 65
    179c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17a0:	dc 01       	movw	r26, r24
    17a2:	cb 01       	movw	r24, r22
    17a4:	bc 01       	movw	r22, r24
    17a6:	cd 01       	movw	r24, r26
    17a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ac:	dc 01       	movw	r26, r24
    17ae:	cb 01       	movw	r24, r22
    17b0:	9e 83       	std	Y+6, r25	; 0x06
    17b2:	8d 83       	std	Y+5, r24	; 0x05
    17b4:	0f c0       	rjmp	.+30     	; 0x17d4 <LCD4_voidSendCmd+0x452>
    17b6:	88 ec       	ldi	r24, 0xC8	; 200
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	9c 83       	std	Y+4, r25	; 0x04
    17bc:	8b 83       	std	Y+3, r24	; 0x03
    17be:	8b 81       	ldd	r24, Y+3	; 0x03
    17c0:	9c 81       	ldd	r25, Y+4	; 0x04
    17c2:	01 97       	sbiw	r24, 0x01	; 1
    17c4:	f1 f7       	brne	.-4      	; 0x17c2 <LCD4_voidSendCmd+0x440>
    17c6:	9c 83       	std	Y+4, r25	; 0x04
    17c8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ca:	8d 81       	ldd	r24, Y+5	; 0x05
    17cc:	9e 81       	ldd	r25, Y+6	; 0x06
    17ce:	01 97       	sbiw	r24, 0x01	; 1
    17d0:	9e 83       	std	Y+6, r25	; 0x06
    17d2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17d4:	8d 81       	ldd	r24, Y+5	; 0x05
    17d6:	9e 81       	ldd	r25, Y+6	; 0x06
    17d8:	00 97       	sbiw	r24, 0x00	; 0
    17da:	69 f7       	brne	.-38     	; 0x17b6 <LCD4_voidSendCmd+0x434>
    17dc:	14 c0       	rjmp	.+40     	; 0x1806 <LCD4_voidSendCmd+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17de:	6f 81       	ldd	r22, Y+7	; 0x07
    17e0:	78 85       	ldd	r23, Y+8	; 0x08
    17e2:	89 85       	ldd	r24, Y+9	; 0x09
    17e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ea:	dc 01       	movw	r26, r24
    17ec:	cb 01       	movw	r24, r22
    17ee:	9e 83       	std	Y+6, r25	; 0x06
    17f0:	8d 83       	std	Y+5, r24	; 0x05
    17f2:	8d 81       	ldd	r24, Y+5	; 0x05
    17f4:	9e 81       	ldd	r25, Y+6	; 0x06
    17f6:	9a 83       	std	Y+2, r25	; 0x02
    17f8:	89 83       	std	Y+1, r24	; 0x01
    17fa:	89 81       	ldd	r24, Y+1	; 0x01
    17fc:	9a 81       	ldd	r25, Y+2	; 0x02
    17fe:	01 97       	sbiw	r24, 0x01	; 1
    1800:	f1 f7       	brne	.-4      	; 0x17fe <LCD4_voidSendCmd+0x47c>
    1802:	9a 83       	std	Y+2, r25	; 0x02
    1804:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(100);



}
    1806:	e9 96       	adiw	r28, 0x39	; 57
    1808:	0f b6       	in	r0, 0x3f	; 63
    180a:	f8 94       	cli
    180c:	de bf       	out	0x3e, r29	; 62
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	cd bf       	out	0x3d, r28	; 61
    1812:	cf 91       	pop	r28
    1814:	df 91       	pop	r29
    1816:	08 95       	ret

00001818 <LCD4_voidInit>:
 * Inputs: none
 * Output: void
 */
void LCD4_voidInit(void)

{
    1818:	0f 93       	push	r16
    181a:	1f 93       	push	r17
    181c:	df 93       	push	r29
    181e:	cf 93       	push	r28
    1820:	cd b7       	in	r28, 0x3d	; 61
    1822:	de b7       	in	r29, 0x3e	; 62
    1824:	c6 54       	subi	r28, 0x46	; 70
    1826:	d0 40       	sbci	r29, 0x00	; 0
    1828:	0f b6       	in	r0, 0x3f	; 63
    182a:	f8 94       	cli
    182c:	de bf       	out	0x3e, r29	; 62
    182e:	0f be       	out	0x3f, r0	; 63
    1830:	cd bf       	out	0x3d, r28	; 61
    1832:	fe 01       	movw	r30, r28
    1834:	ed 5b       	subi	r30, 0xBD	; 189
    1836:	ff 4f       	sbci	r31, 0xFF	; 255
    1838:	80 e0       	ldi	r24, 0x00	; 0
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	a0 e2       	ldi	r26, 0x20	; 32
    183e:	b2 e4       	ldi	r27, 0x42	; 66
    1840:	80 83       	st	Z, r24
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	a2 83       	std	Z+2, r26	; 0x02
    1846:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1848:	8e 01       	movw	r16, r28
    184a:	01 5c       	subi	r16, 0xC1	; 193
    184c:	1f 4f       	sbci	r17, 0xFF	; 255
    184e:	fe 01       	movw	r30, r28
    1850:	ed 5b       	subi	r30, 0xBD	; 189
    1852:	ff 4f       	sbci	r31, 0xFF	; 255
    1854:	60 81       	ld	r22, Z
    1856:	71 81       	ldd	r23, Z+1	; 0x01
    1858:	82 81       	ldd	r24, Z+2	; 0x02
    185a:	93 81       	ldd	r25, Z+3	; 0x03
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	30 e0       	ldi	r19, 0x00	; 0
    1860:	4a ef       	ldi	r20, 0xFA	; 250
    1862:	54 e4       	ldi	r21, 0x44	; 68
    1864:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1868:	dc 01       	movw	r26, r24
    186a:	cb 01       	movw	r24, r22
    186c:	f8 01       	movw	r30, r16
    186e:	80 83       	st	Z, r24
    1870:	91 83       	std	Z+1, r25	; 0x01
    1872:	a2 83       	std	Z+2, r26	; 0x02
    1874:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1876:	fe 01       	movw	r30, r28
    1878:	ff 96       	adiw	r30, 0x3f	; 63
    187a:	60 81       	ld	r22, Z
    187c:	71 81       	ldd	r23, Z+1	; 0x01
    187e:	82 81       	ldd	r24, Z+2	; 0x02
    1880:	93 81       	ldd	r25, Z+3	; 0x03
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	40 e8       	ldi	r20, 0x80	; 128
    1888:	5f e3       	ldi	r21, 0x3F	; 63
    188a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    188e:	88 23       	and	r24, r24
    1890:	2c f4       	brge	.+10     	; 0x189c <LCD4_voidInit+0x84>
		__ticks = 1;
    1892:	81 e0       	ldi	r24, 0x01	; 1
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	9e af       	std	Y+62, r25	; 0x3e
    1898:	8d af       	std	Y+61, r24	; 0x3d
    189a:	46 c0       	rjmp	.+140    	; 0x1928 <LCD4_voidInit+0x110>
	else if (__tmp > 65535)
    189c:	fe 01       	movw	r30, r28
    189e:	ff 96       	adiw	r30, 0x3f	; 63
    18a0:	60 81       	ld	r22, Z
    18a2:	71 81       	ldd	r23, Z+1	; 0x01
    18a4:	82 81       	ldd	r24, Z+2	; 0x02
    18a6:	93 81       	ldd	r25, Z+3	; 0x03
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	3f ef       	ldi	r19, 0xFF	; 255
    18ac:	4f e7       	ldi	r20, 0x7F	; 127
    18ae:	57 e4       	ldi	r21, 0x47	; 71
    18b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18b4:	18 16       	cp	r1, r24
    18b6:	64 f5       	brge	.+88     	; 0x1910 <LCD4_voidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18b8:	fe 01       	movw	r30, r28
    18ba:	ed 5b       	subi	r30, 0xBD	; 189
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	60 81       	ld	r22, Z
    18c0:	71 81       	ldd	r23, Z+1	; 0x01
    18c2:	82 81       	ldd	r24, Z+2	; 0x02
    18c4:	93 81       	ldd	r25, Z+3	; 0x03
    18c6:	20 e0       	ldi	r18, 0x00	; 0
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	40 e2       	ldi	r20, 0x20	; 32
    18cc:	51 e4       	ldi	r21, 0x41	; 65
    18ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18d2:	dc 01       	movw	r26, r24
    18d4:	cb 01       	movw	r24, r22
    18d6:	bc 01       	movw	r22, r24
    18d8:	cd 01       	movw	r24, r26
    18da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18de:	dc 01       	movw	r26, r24
    18e0:	cb 01       	movw	r24, r22
    18e2:	9e af       	std	Y+62, r25	; 0x3e
    18e4:	8d af       	std	Y+61, r24	; 0x3d
    18e6:	0f c0       	rjmp	.+30     	; 0x1906 <LCD4_voidInit+0xee>
    18e8:	88 ec       	ldi	r24, 0xC8	; 200
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	9c af       	std	Y+60, r25	; 0x3c
    18ee:	8b af       	std	Y+59, r24	; 0x3b
    18f0:	8b ad       	ldd	r24, Y+59	; 0x3b
    18f2:	9c ad       	ldd	r25, Y+60	; 0x3c
    18f4:	01 97       	sbiw	r24, 0x01	; 1
    18f6:	f1 f7       	brne	.-4      	; 0x18f4 <LCD4_voidInit+0xdc>
    18f8:	9c af       	std	Y+60, r25	; 0x3c
    18fa:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18fc:	8d ad       	ldd	r24, Y+61	; 0x3d
    18fe:	9e ad       	ldd	r25, Y+62	; 0x3e
    1900:	01 97       	sbiw	r24, 0x01	; 1
    1902:	9e af       	std	Y+62, r25	; 0x3e
    1904:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1906:	8d ad       	ldd	r24, Y+61	; 0x3d
    1908:	9e ad       	ldd	r25, Y+62	; 0x3e
    190a:	00 97       	sbiw	r24, 0x00	; 0
    190c:	69 f7       	brne	.-38     	; 0x18e8 <LCD4_voidInit+0xd0>
    190e:	16 c0       	rjmp	.+44     	; 0x193c <LCD4_voidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1910:	fe 01       	movw	r30, r28
    1912:	ff 96       	adiw	r30, 0x3f	; 63
    1914:	60 81       	ld	r22, Z
    1916:	71 81       	ldd	r23, Z+1	; 0x01
    1918:	82 81       	ldd	r24, Z+2	; 0x02
    191a:	93 81       	ldd	r25, Z+3	; 0x03
    191c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	9e af       	std	Y+62, r25	; 0x3e
    1926:	8d af       	std	Y+61, r24	; 0x3d
    1928:	8d ad       	ldd	r24, Y+61	; 0x3d
    192a:	9e ad       	ldd	r25, Y+62	; 0x3e
    192c:	9a af       	std	Y+58, r25	; 0x3a
    192e:	89 af       	std	Y+57, r24	; 0x39
    1930:	89 ad       	ldd	r24, Y+57	; 0x39
    1932:	9a ad       	ldd	r25, Y+58	; 0x3a
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	f1 f7       	brne	.-4      	; 0x1934 <LCD4_voidInit+0x11c>
    1938:	9a af       	std	Y+58, r25	; 0x3a
    193a:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(40);

	DIO_u8SetPortDirection(LCD_PORT , DIO_PORT_OUTPUT) ;
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	6f ef       	ldi	r22, 0xFF	; 255
    1940:	0e 94 67 06 	call	0xcce	; 0xcce <DIO_u8SetPortDirection>

	LCD4_voidSendCmd(0x02) ;
    1944:	82 e0       	ldi	r24, 0x02	; 2
    1946:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    194a:	80 e0       	ldi	r24, 0x00	; 0
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	a0 e8       	ldi	r26, 0x80	; 128
    1950:	bf e3       	ldi	r27, 0x3F	; 63
    1952:	8d ab       	std	Y+53, r24	; 0x35
    1954:	9e ab       	std	Y+54, r25	; 0x36
    1956:	af ab       	std	Y+55, r26	; 0x37
    1958:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    195a:	6d a9       	ldd	r22, Y+53	; 0x35
    195c:	7e a9       	ldd	r23, Y+54	; 0x36
    195e:	8f a9       	ldd	r24, Y+55	; 0x37
    1960:	98 ad       	ldd	r25, Y+56	; 0x38
    1962:	20 e0       	ldi	r18, 0x00	; 0
    1964:	30 e0       	ldi	r19, 0x00	; 0
    1966:	4a ef       	ldi	r20, 0xFA	; 250
    1968:	54 e4       	ldi	r21, 0x44	; 68
    196a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196e:	dc 01       	movw	r26, r24
    1970:	cb 01       	movw	r24, r22
    1972:	89 ab       	std	Y+49, r24	; 0x31
    1974:	9a ab       	std	Y+50, r25	; 0x32
    1976:	ab ab       	std	Y+51, r26	; 0x33
    1978:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    197a:	69 a9       	ldd	r22, Y+49	; 0x31
    197c:	7a a9       	ldd	r23, Y+50	; 0x32
    197e:	8b a9       	ldd	r24, Y+51	; 0x33
    1980:	9c a9       	ldd	r25, Y+52	; 0x34
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	30 e0       	ldi	r19, 0x00	; 0
    1986:	40 e8       	ldi	r20, 0x80	; 128
    1988:	5f e3       	ldi	r21, 0x3F	; 63
    198a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    198e:	88 23       	and	r24, r24
    1990:	2c f4       	brge	.+10     	; 0x199c <LCD4_voidInit+0x184>
		__ticks = 1;
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	98 ab       	std	Y+48, r25	; 0x30
    1998:	8f a7       	std	Y+47, r24	; 0x2f
    199a:	3f c0       	rjmp	.+126    	; 0x1a1a <LCD4_voidInit+0x202>
	else if (__tmp > 65535)
    199c:	69 a9       	ldd	r22, Y+49	; 0x31
    199e:	7a a9       	ldd	r23, Y+50	; 0x32
    19a0:	8b a9       	ldd	r24, Y+51	; 0x33
    19a2:	9c a9       	ldd	r25, Y+52	; 0x34
    19a4:	20 e0       	ldi	r18, 0x00	; 0
    19a6:	3f ef       	ldi	r19, 0xFF	; 255
    19a8:	4f e7       	ldi	r20, 0x7F	; 127
    19aa:	57 e4       	ldi	r21, 0x47	; 71
    19ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19b0:	18 16       	cp	r1, r24
    19b2:	4c f5       	brge	.+82     	; 0x1a06 <LCD4_voidInit+0x1ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b4:	6d a9       	ldd	r22, Y+53	; 0x35
    19b6:	7e a9       	ldd	r23, Y+54	; 0x36
    19b8:	8f a9       	ldd	r24, Y+55	; 0x37
    19ba:	98 ad       	ldd	r25, Y+56	; 0x38
    19bc:	20 e0       	ldi	r18, 0x00	; 0
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	40 e2       	ldi	r20, 0x20	; 32
    19c2:	51 e4       	ldi	r21, 0x41	; 65
    19c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	bc 01       	movw	r22, r24
    19ce:	cd 01       	movw	r24, r26
    19d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	98 ab       	std	Y+48, r25	; 0x30
    19da:	8f a7       	std	Y+47, r24	; 0x2f
    19dc:	0f c0       	rjmp	.+30     	; 0x19fc <LCD4_voidInit+0x1e4>
    19de:	88 ec       	ldi	r24, 0xC8	; 200
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	9e a7       	std	Y+46, r25	; 0x2e
    19e4:	8d a7       	std	Y+45, r24	; 0x2d
    19e6:	8d a5       	ldd	r24, Y+45	; 0x2d
    19e8:	9e a5       	ldd	r25, Y+46	; 0x2e
    19ea:	01 97       	sbiw	r24, 0x01	; 1
    19ec:	f1 f7       	brne	.-4      	; 0x19ea <LCD4_voidInit+0x1d2>
    19ee:	9e a7       	std	Y+46, r25	; 0x2e
    19f0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    19f4:	98 a9       	ldd	r25, Y+48	; 0x30
    19f6:	01 97       	sbiw	r24, 0x01	; 1
    19f8:	98 ab       	std	Y+48, r25	; 0x30
    19fa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    19fe:	98 a9       	ldd	r25, Y+48	; 0x30
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	69 f7       	brne	.-38     	; 0x19de <LCD4_voidInit+0x1c6>
    1a04:	14 c0       	rjmp	.+40     	; 0x1a2e <LCD4_voidInit+0x216>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a06:	69 a9       	ldd	r22, Y+49	; 0x31
    1a08:	7a a9       	ldd	r23, Y+50	; 0x32
    1a0a:	8b a9       	ldd	r24, Y+51	; 0x33
    1a0c:	9c a9       	ldd	r25, Y+52	; 0x34
    1a0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	98 ab       	std	Y+48, r25	; 0x30
    1a18:	8f a7       	std	Y+47, r24	; 0x2f
    1a1a:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a1c:	98 a9       	ldd	r25, Y+48	; 0x30
    1a1e:	9c a7       	std	Y+44, r25	; 0x2c
    1a20:	8b a7       	std	Y+43, r24	; 0x2b
    1a22:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a24:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a26:	01 97       	sbiw	r24, 0x01	; 1
    1a28:	f1 f7       	brne	.-4      	; 0x1a26 <LCD4_voidInit+0x20e>
    1a2a:	9c a7       	std	Y+44, r25	; 0x2c
    1a2c:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(1);

	LCD4_voidSendCmd(0x28) ;
    1a2e:	88 e2       	ldi	r24, 0x28	; 40
    1a30:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    1a34:	80 e0       	ldi	r24, 0x00	; 0
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	a0 e8       	ldi	r26, 0x80	; 128
    1a3a:	bf e3       	ldi	r27, 0x3F	; 63
    1a3c:	8f a3       	std	Y+39, r24	; 0x27
    1a3e:	98 a7       	std	Y+40, r25	; 0x28
    1a40:	a9 a7       	std	Y+41, r26	; 0x29
    1a42:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a44:	6f a1       	ldd	r22, Y+39	; 0x27
    1a46:	78 a5       	ldd	r23, Y+40	; 0x28
    1a48:	89 a5       	ldd	r24, Y+41	; 0x29
    1a4a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a4c:	20 e0       	ldi	r18, 0x00	; 0
    1a4e:	30 e0       	ldi	r19, 0x00	; 0
    1a50:	4a ef       	ldi	r20, 0xFA	; 250
    1a52:	54 e4       	ldi	r21, 0x44	; 68
    1a54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a58:	dc 01       	movw	r26, r24
    1a5a:	cb 01       	movw	r24, r22
    1a5c:	8b a3       	std	Y+35, r24	; 0x23
    1a5e:	9c a3       	std	Y+36, r25	; 0x24
    1a60:	ad a3       	std	Y+37, r26	; 0x25
    1a62:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1a64:	6b a1       	ldd	r22, Y+35	; 0x23
    1a66:	7c a1       	ldd	r23, Y+36	; 0x24
    1a68:	8d a1       	ldd	r24, Y+37	; 0x25
    1a6a:	9e a1       	ldd	r25, Y+38	; 0x26
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	30 e0       	ldi	r19, 0x00	; 0
    1a70:	40 e8       	ldi	r20, 0x80	; 128
    1a72:	5f e3       	ldi	r21, 0x3F	; 63
    1a74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a78:	88 23       	and	r24, r24
    1a7a:	2c f4       	brge	.+10     	; 0x1a86 <LCD4_voidInit+0x26e>
		__ticks = 1;
    1a7c:	81 e0       	ldi	r24, 0x01	; 1
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	9a a3       	std	Y+34, r25	; 0x22
    1a82:	89 a3       	std	Y+33, r24	; 0x21
    1a84:	3f c0       	rjmp	.+126    	; 0x1b04 <LCD4_voidInit+0x2ec>
	else if (__tmp > 65535)
    1a86:	6b a1       	ldd	r22, Y+35	; 0x23
    1a88:	7c a1       	ldd	r23, Y+36	; 0x24
    1a8a:	8d a1       	ldd	r24, Y+37	; 0x25
    1a8c:	9e a1       	ldd	r25, Y+38	; 0x26
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	3f ef       	ldi	r19, 0xFF	; 255
    1a92:	4f e7       	ldi	r20, 0x7F	; 127
    1a94:	57 e4       	ldi	r21, 0x47	; 71
    1a96:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a9a:	18 16       	cp	r1, r24
    1a9c:	4c f5       	brge	.+82     	; 0x1af0 <LCD4_voidInit+0x2d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a9e:	6f a1       	ldd	r22, Y+39	; 0x27
    1aa0:	78 a5       	ldd	r23, Y+40	; 0x28
    1aa2:	89 a5       	ldd	r24, Y+41	; 0x29
    1aa4:	9a a5       	ldd	r25, Y+42	; 0x2a
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	40 e2       	ldi	r20, 0x20	; 32
    1aac:	51 e4       	ldi	r21, 0x41	; 65
    1aae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ab2:	dc 01       	movw	r26, r24
    1ab4:	cb 01       	movw	r24, r22
    1ab6:	bc 01       	movw	r22, r24
    1ab8:	cd 01       	movw	r24, r26
    1aba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1abe:	dc 01       	movw	r26, r24
    1ac0:	cb 01       	movw	r24, r22
    1ac2:	9a a3       	std	Y+34, r25	; 0x22
    1ac4:	89 a3       	std	Y+33, r24	; 0x21
    1ac6:	0f c0       	rjmp	.+30     	; 0x1ae6 <LCD4_voidInit+0x2ce>
    1ac8:	88 ec       	ldi	r24, 0xC8	; 200
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	98 a3       	std	Y+32, r25	; 0x20
    1ace:	8f 8f       	std	Y+31, r24	; 0x1f
    1ad0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ad2:	98 a1       	ldd	r25, Y+32	; 0x20
    1ad4:	01 97       	sbiw	r24, 0x01	; 1
    1ad6:	f1 f7       	brne	.-4      	; 0x1ad4 <LCD4_voidInit+0x2bc>
    1ad8:	98 a3       	std	Y+32, r25	; 0x20
    1ada:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1adc:	89 a1       	ldd	r24, Y+33	; 0x21
    1ade:	9a a1       	ldd	r25, Y+34	; 0x22
    1ae0:	01 97       	sbiw	r24, 0x01	; 1
    1ae2:	9a a3       	std	Y+34, r25	; 0x22
    1ae4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ae8:	9a a1       	ldd	r25, Y+34	; 0x22
    1aea:	00 97       	sbiw	r24, 0x00	; 0
    1aec:	69 f7       	brne	.-38     	; 0x1ac8 <LCD4_voidInit+0x2b0>
    1aee:	14 c0       	rjmp	.+40     	; 0x1b18 <LCD4_voidInit+0x300>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af0:	6b a1       	ldd	r22, Y+35	; 0x23
    1af2:	7c a1       	ldd	r23, Y+36	; 0x24
    1af4:	8d a1       	ldd	r24, Y+37	; 0x25
    1af6:	9e a1       	ldd	r25, Y+38	; 0x26
    1af8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1afc:	dc 01       	movw	r26, r24
    1afe:	cb 01       	movw	r24, r22
    1b00:	9a a3       	std	Y+34, r25	; 0x22
    1b02:	89 a3       	std	Y+33, r24	; 0x21
    1b04:	89 a1       	ldd	r24, Y+33	; 0x21
    1b06:	9a a1       	ldd	r25, Y+34	; 0x22
    1b08:	9e 8f       	std	Y+30, r25	; 0x1e
    1b0a:	8d 8f       	std	Y+29, r24	; 0x1d
    1b0c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b0e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	f1 f7       	brne	.-4      	; 0x1b10 <LCD4_voidInit+0x2f8>
    1b14:	9e 8f       	std	Y+30, r25	; 0x1e
    1b16:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(1);

	LCD4_voidSendCmd(LCD_CLEAR) ;
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    1b1e:	80 e0       	ldi	r24, 0x00	; 0
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	a0 e7       	ldi	r26, 0x70	; 112
    1b24:	b1 e4       	ldi	r27, 0x41	; 65
    1b26:	89 8f       	std	Y+25, r24	; 0x19
    1b28:	9a 8f       	std	Y+26, r25	; 0x1a
    1b2a:	ab 8f       	std	Y+27, r26	; 0x1b
    1b2c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b2e:	69 8d       	ldd	r22, Y+25	; 0x19
    1b30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b36:	20 e0       	ldi	r18, 0x00	; 0
    1b38:	30 e0       	ldi	r19, 0x00	; 0
    1b3a:	4a ef       	ldi	r20, 0xFA	; 250
    1b3c:	54 e4       	ldi	r21, 0x44	; 68
    1b3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b42:	dc 01       	movw	r26, r24
    1b44:	cb 01       	movw	r24, r22
    1b46:	8d 8b       	std	Y+21, r24	; 0x15
    1b48:	9e 8b       	std	Y+22, r25	; 0x16
    1b4a:	af 8b       	std	Y+23, r26	; 0x17
    1b4c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1b4e:	6d 89       	ldd	r22, Y+21	; 0x15
    1b50:	7e 89       	ldd	r23, Y+22	; 0x16
    1b52:	8f 89       	ldd	r24, Y+23	; 0x17
    1b54:	98 8d       	ldd	r25, Y+24	; 0x18
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	40 e8       	ldi	r20, 0x80	; 128
    1b5c:	5f e3       	ldi	r21, 0x3F	; 63
    1b5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b62:	88 23       	and	r24, r24
    1b64:	2c f4       	brge	.+10     	; 0x1b70 <LCD4_voidInit+0x358>
		__ticks = 1;
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	9c 8b       	std	Y+20, r25	; 0x14
    1b6c:	8b 8b       	std	Y+19, r24	; 0x13
    1b6e:	3f c0       	rjmp	.+126    	; 0x1bee <LCD4_voidInit+0x3d6>
	else if (__tmp > 65535)
    1b70:	6d 89       	ldd	r22, Y+21	; 0x15
    1b72:	7e 89       	ldd	r23, Y+22	; 0x16
    1b74:	8f 89       	ldd	r24, Y+23	; 0x17
    1b76:	98 8d       	ldd	r25, Y+24	; 0x18
    1b78:	20 e0       	ldi	r18, 0x00	; 0
    1b7a:	3f ef       	ldi	r19, 0xFF	; 255
    1b7c:	4f e7       	ldi	r20, 0x7F	; 127
    1b7e:	57 e4       	ldi	r21, 0x47	; 71
    1b80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b84:	18 16       	cp	r1, r24
    1b86:	4c f5       	brge	.+82     	; 0x1bda <LCD4_voidInit+0x3c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b88:	69 8d       	ldd	r22, Y+25	; 0x19
    1b8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b90:	20 e0       	ldi	r18, 0x00	; 0
    1b92:	30 e0       	ldi	r19, 0x00	; 0
    1b94:	40 e2       	ldi	r20, 0x20	; 32
    1b96:	51 e4       	ldi	r21, 0x41	; 65
    1b98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	cb 01       	movw	r24, r22
    1ba0:	bc 01       	movw	r22, r24
    1ba2:	cd 01       	movw	r24, r26
    1ba4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ba8:	dc 01       	movw	r26, r24
    1baa:	cb 01       	movw	r24, r22
    1bac:	9c 8b       	std	Y+20, r25	; 0x14
    1bae:	8b 8b       	std	Y+19, r24	; 0x13
    1bb0:	0f c0       	rjmp	.+30     	; 0x1bd0 <LCD4_voidInit+0x3b8>
    1bb2:	88 ec       	ldi	r24, 0xC8	; 200
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	9a 8b       	std	Y+18, r25	; 0x12
    1bb8:	89 8b       	std	Y+17, r24	; 0x11
    1bba:	89 89       	ldd	r24, Y+17	; 0x11
    1bbc:	9a 89       	ldd	r25, Y+18	; 0x12
    1bbe:	01 97       	sbiw	r24, 0x01	; 1
    1bc0:	f1 f7       	brne	.-4      	; 0x1bbe <LCD4_voidInit+0x3a6>
    1bc2:	9a 8b       	std	Y+18, r25	; 0x12
    1bc4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bc6:	8b 89       	ldd	r24, Y+19	; 0x13
    1bc8:	9c 89       	ldd	r25, Y+20	; 0x14
    1bca:	01 97       	sbiw	r24, 0x01	; 1
    1bcc:	9c 8b       	std	Y+20, r25	; 0x14
    1bce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bd0:	8b 89       	ldd	r24, Y+19	; 0x13
    1bd2:	9c 89       	ldd	r25, Y+20	; 0x14
    1bd4:	00 97       	sbiw	r24, 0x00	; 0
    1bd6:	69 f7       	brne	.-38     	; 0x1bb2 <LCD4_voidInit+0x39a>
    1bd8:	14 c0       	rjmp	.+40     	; 0x1c02 <LCD4_voidInit+0x3ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bda:	6d 89       	ldd	r22, Y+21	; 0x15
    1bdc:	7e 89       	ldd	r23, Y+22	; 0x16
    1bde:	8f 89       	ldd	r24, Y+23	; 0x17
    1be0:	98 8d       	ldd	r25, Y+24	; 0x18
    1be2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1be6:	dc 01       	movw	r26, r24
    1be8:	cb 01       	movw	r24, r22
    1bea:	9c 8b       	std	Y+20, r25	; 0x14
    1bec:	8b 8b       	std	Y+19, r24	; 0x13
    1bee:	8b 89       	ldd	r24, Y+19	; 0x13
    1bf0:	9c 89       	ldd	r25, Y+20	; 0x14
    1bf2:	98 8b       	std	Y+16, r25	; 0x10
    1bf4:	8f 87       	std	Y+15, r24	; 0x0f
    1bf6:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bf8:	98 89       	ldd	r25, Y+16	; 0x10
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <LCD4_voidInit+0x3e2>
    1bfe:	98 8b       	std	Y+16, r25	; 0x10
    1c00:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(15);


	LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE) ;
    1c02:	80 e8       	ldi	r24, 0x80	; 128
    1c04:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    1c08:	80 e0       	ldi	r24, 0x00	; 0
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	a0 e7       	ldi	r26, 0x70	; 112
    1c0e:	b1 e4       	ldi	r27, 0x41	; 65
    1c10:	8b 87       	std	Y+11, r24	; 0x0b
    1c12:	9c 87       	std	Y+12, r25	; 0x0c
    1c14:	ad 87       	std	Y+13, r26	; 0x0d
    1c16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c18:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c20:	20 e0       	ldi	r18, 0x00	; 0
    1c22:	30 e0       	ldi	r19, 0x00	; 0
    1c24:	4a ef       	ldi	r20, 0xFA	; 250
    1c26:	54 e4       	ldi	r21, 0x44	; 68
    1c28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c2c:	dc 01       	movw	r26, r24
    1c2e:	cb 01       	movw	r24, r22
    1c30:	8f 83       	std	Y+7, r24	; 0x07
    1c32:	98 87       	std	Y+8, r25	; 0x08
    1c34:	a9 87       	std	Y+9, r26	; 0x09
    1c36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c38:	6f 81       	ldd	r22, Y+7	; 0x07
    1c3a:	78 85       	ldd	r23, Y+8	; 0x08
    1c3c:	89 85       	ldd	r24, Y+9	; 0x09
    1c3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	40 e8       	ldi	r20, 0x80	; 128
    1c46:	5f e3       	ldi	r21, 0x3F	; 63
    1c48:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c4c:	88 23       	and	r24, r24
    1c4e:	2c f4       	brge	.+10     	; 0x1c5a <LCD4_voidInit+0x442>
		__ticks = 1;
    1c50:	81 e0       	ldi	r24, 0x01	; 1
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	9e 83       	std	Y+6, r25	; 0x06
    1c56:	8d 83       	std	Y+5, r24	; 0x05
    1c58:	3f c0       	rjmp	.+126    	; 0x1cd8 <LCD4_voidInit+0x4c0>
	else if (__tmp > 65535)
    1c5a:	6f 81       	ldd	r22, Y+7	; 0x07
    1c5c:	78 85       	ldd	r23, Y+8	; 0x08
    1c5e:	89 85       	ldd	r24, Y+9	; 0x09
    1c60:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c62:	20 e0       	ldi	r18, 0x00	; 0
    1c64:	3f ef       	ldi	r19, 0xFF	; 255
    1c66:	4f e7       	ldi	r20, 0x7F	; 127
    1c68:	57 e4       	ldi	r21, 0x47	; 71
    1c6a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c6e:	18 16       	cp	r1, r24
    1c70:	4c f5       	brge	.+82     	; 0x1cc4 <LCD4_voidInit+0x4ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c72:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c74:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c76:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c78:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c7a:	20 e0       	ldi	r18, 0x00	; 0
    1c7c:	30 e0       	ldi	r19, 0x00	; 0
    1c7e:	40 e2       	ldi	r20, 0x20	; 32
    1c80:	51 e4       	ldi	r21, 0x41	; 65
    1c82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c86:	dc 01       	movw	r26, r24
    1c88:	cb 01       	movw	r24, r22
    1c8a:	bc 01       	movw	r22, r24
    1c8c:	cd 01       	movw	r24, r26
    1c8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c92:	dc 01       	movw	r26, r24
    1c94:	cb 01       	movw	r24, r22
    1c96:	9e 83       	std	Y+6, r25	; 0x06
    1c98:	8d 83       	std	Y+5, r24	; 0x05
    1c9a:	0f c0       	rjmp	.+30     	; 0x1cba <LCD4_voidInit+0x4a2>
    1c9c:	88 ec       	ldi	r24, 0xC8	; 200
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	9c 83       	std	Y+4, r25	; 0x04
    1ca2:	8b 83       	std	Y+3, r24	; 0x03
    1ca4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ca6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ca8:	01 97       	sbiw	r24, 0x01	; 1
    1caa:	f1 f7       	brne	.-4      	; 0x1ca8 <LCD4_voidInit+0x490>
    1cac:	9c 83       	std	Y+4, r25	; 0x04
    1cae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cb0:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb2:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb4:	01 97       	sbiw	r24, 0x01	; 1
    1cb6:	9e 83       	std	Y+6, r25	; 0x06
    1cb8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cba:	8d 81       	ldd	r24, Y+5	; 0x05
    1cbc:	9e 81       	ldd	r25, Y+6	; 0x06
    1cbe:	00 97       	sbiw	r24, 0x00	; 0
    1cc0:	69 f7       	brne	.-38     	; 0x1c9c <LCD4_voidInit+0x484>
    1cc2:	14 c0       	rjmp	.+40     	; 0x1cec <LCD4_voidInit+0x4d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cc4:	6f 81       	ldd	r22, Y+7	; 0x07
    1cc6:	78 85       	ldd	r23, Y+8	; 0x08
    1cc8:	89 85       	ldd	r24, Y+9	; 0x09
    1cca:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ccc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd0:	dc 01       	movw	r26, r24
    1cd2:	cb 01       	movw	r24, r22
    1cd4:	9e 83       	std	Y+6, r25	; 0x06
    1cd6:	8d 83       	std	Y+5, r24	; 0x05
    1cd8:	8d 81       	ldd	r24, Y+5	; 0x05
    1cda:	9e 81       	ldd	r25, Y+6	; 0x06
    1cdc:	9a 83       	std	Y+2, r25	; 0x02
    1cde:	89 83       	std	Y+1, r24	; 0x01
    1ce0:	89 81       	ldd	r24, Y+1	; 0x01
    1ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    1ce4:	01 97       	sbiw	r24, 0x01	; 1
    1ce6:	f1 f7       	brne	.-4      	; 0x1ce4 <LCD4_voidInit+0x4cc>
    1ce8:	9a 83       	std	Y+2, r25	; 0x02
    1cea:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(15);

	LCD4_voidSendCmd(LCD_DISPLAYON_CURSORBLLINK) ;
    1cec:	8e e0       	ldi	r24, 0x0E	; 14
    1cee:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>





}
    1cf2:	ca 5b       	subi	r28, 0xBA	; 186
    1cf4:	df 4f       	sbci	r29, 0xFF	; 255
    1cf6:	0f b6       	in	r0, 0x3f	; 63
    1cf8:	f8 94       	cli
    1cfa:	de bf       	out	0x3e, r29	; 62
    1cfc:	0f be       	out	0x3f, r0	; 63
    1cfe:	cd bf       	out	0x3d, r28	; 61
    1d00:	cf 91       	pop	r28
    1d02:	df 91       	pop	r29
    1d04:	1f 91       	pop	r17
    1d06:	0f 91       	pop	r16
    1d08:	08 95       	ret

00001d0a <LCD4_voidSendChar>:
 * Output: void
 */

void LCD4_voidSendChar(u8 data)

{
    1d0a:	df 93       	push	r29
    1d0c:	cf 93       	push	r28
    1d0e:	cd b7       	in	r28, 0x3d	; 61
    1d10:	de b7       	in	r29, 0x3e	; 62
    1d12:	e9 97       	sbiw	r28, 0x39	; 57
    1d14:	0f b6       	in	r0, 0x3f	; 63
    1d16:	f8 94       	cli
    1d18:	de bf       	out	0x3e, r29	; 62
    1d1a:	0f be       	out	0x3f, r0	; 63
    1d1c:	cd bf       	out	0x3d, r28	; 61
    1d1e:	89 af       	std	Y+57, r24	; 0x39

	DIO_u8SetPinValue(LCD_PORT , 4 , DIO_PIN_HIGH) ;
    1d20:	81 e0       	ldi	r24, 0x01	; 1
    1d22:	64 e0       	ldi	r22, 0x04	; 4
    1d24:	41 e0       	ldi	r20, 0x01	; 1
    1d26:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(LCD_PORT , 5 , DIO_PIN_LOW)  ;
    1d2a:	81 e0       	ldi	r24, 0x01	; 1
    1d2c:	65 e0       	ldi	r22, 0x05	; 5
    1d2e:	40 e0       	ldi	r20, 0x00	; 0
    1d30:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>


	/* sending upper nibble */

	DIO_u8SetPinValue(LCD_PORT ,0 ,  GET_BIT(data, 4)) ;
    1d34:	89 ad       	ldd	r24, Y+57	; 0x39
    1d36:	82 95       	swap	r24
    1d38:	8f 70       	andi	r24, 0x0F	; 15
    1d3a:	98 2f       	mov	r25, r24
    1d3c:	91 70       	andi	r25, 0x01	; 1
    1d3e:	81 e0       	ldi	r24, 0x01	; 1
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	49 2f       	mov	r20, r25
    1d44:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,1 ,  GET_BIT(data, 5)) ;
    1d48:	89 ad       	ldd	r24, Y+57	; 0x39
    1d4a:	82 95       	swap	r24
    1d4c:	86 95       	lsr	r24
    1d4e:	87 70       	andi	r24, 0x07	; 7
    1d50:	98 2f       	mov	r25, r24
    1d52:	91 70       	andi	r25, 0x01	; 1
    1d54:	81 e0       	ldi	r24, 0x01	; 1
    1d56:	61 e0       	ldi	r22, 0x01	; 1
    1d58:	49 2f       	mov	r20, r25
    1d5a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,2 ,  GET_BIT(data, 6)) ;
    1d5e:	89 ad       	ldd	r24, Y+57	; 0x39
    1d60:	82 95       	swap	r24
    1d62:	86 95       	lsr	r24
    1d64:	86 95       	lsr	r24
    1d66:	83 70       	andi	r24, 0x03	; 3
    1d68:	98 2f       	mov	r25, r24
    1d6a:	91 70       	andi	r25, 0x01	; 1
    1d6c:	81 e0       	ldi	r24, 0x01	; 1
    1d6e:	62 e0       	ldi	r22, 0x02	; 2
    1d70:	49 2f       	mov	r20, r25
    1d72:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT ,3 ,  GET_BIT(data, 7)) ;
    1d76:	89 ad       	ldd	r24, Y+57	; 0x39
    1d78:	98 2f       	mov	r25, r24
    1d7a:	99 1f       	adc	r25, r25
    1d7c:	99 27       	eor	r25, r25
    1d7e:	99 1f       	adc	r25, r25
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	63 e0       	ldi	r22, 0x03	; 3
    1d84:	49 2f       	mov	r20, r25
    1d86:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_HIGH)  ;
    1d8a:	81 e0       	ldi	r24, 0x01	; 1
    1d8c:	66 e0       	ldi	r22, 0x06	; 6
    1d8e:	41 e0       	ldi	r20, 0x01	; 1
    1d90:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	a0 e8       	ldi	r26, 0x80	; 128
    1d9a:	bf e3       	ldi	r27, 0x3F	; 63
    1d9c:	8d ab       	std	Y+53, r24	; 0x35
    1d9e:	9e ab       	std	Y+54, r25	; 0x36
    1da0:	af ab       	std	Y+55, r26	; 0x37
    1da2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1da4:	6d a9       	ldd	r22, Y+53	; 0x35
    1da6:	7e a9       	ldd	r23, Y+54	; 0x36
    1da8:	8f a9       	ldd	r24, Y+55	; 0x37
    1daa:	98 ad       	ldd	r25, Y+56	; 0x38
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	30 e0       	ldi	r19, 0x00	; 0
    1db0:	4a ef       	ldi	r20, 0xFA	; 250
    1db2:	54 e4       	ldi	r21, 0x44	; 68
    1db4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	89 ab       	std	Y+49, r24	; 0x31
    1dbe:	9a ab       	std	Y+50, r25	; 0x32
    1dc0:	ab ab       	std	Y+51, r26	; 0x33
    1dc2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1dc4:	69 a9       	ldd	r22, Y+49	; 0x31
    1dc6:	7a a9       	ldd	r23, Y+50	; 0x32
    1dc8:	8b a9       	ldd	r24, Y+51	; 0x33
    1dca:	9c a9       	ldd	r25, Y+52	; 0x34
    1dcc:	20 e0       	ldi	r18, 0x00	; 0
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	40 e8       	ldi	r20, 0x80	; 128
    1dd2:	5f e3       	ldi	r21, 0x3F	; 63
    1dd4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1dd8:	88 23       	and	r24, r24
    1dda:	2c f4       	brge	.+10     	; 0x1de6 <LCD4_voidSendChar+0xdc>
		__ticks = 1;
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	98 ab       	std	Y+48, r25	; 0x30
    1de2:	8f a7       	std	Y+47, r24	; 0x2f
    1de4:	3f c0       	rjmp	.+126    	; 0x1e64 <LCD4_voidSendChar+0x15a>
	else if (__tmp > 65535)
    1de6:	69 a9       	ldd	r22, Y+49	; 0x31
    1de8:	7a a9       	ldd	r23, Y+50	; 0x32
    1dea:	8b a9       	ldd	r24, Y+51	; 0x33
    1dec:	9c a9       	ldd	r25, Y+52	; 0x34
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	3f ef       	ldi	r19, 0xFF	; 255
    1df2:	4f e7       	ldi	r20, 0x7F	; 127
    1df4:	57 e4       	ldi	r21, 0x47	; 71
    1df6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dfa:	18 16       	cp	r1, r24
    1dfc:	4c f5       	brge	.+82     	; 0x1e50 <LCD4_voidSendChar+0x146>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfe:	6d a9       	ldd	r22, Y+53	; 0x35
    1e00:	7e a9       	ldd	r23, Y+54	; 0x36
    1e02:	8f a9       	ldd	r24, Y+55	; 0x37
    1e04:	98 ad       	ldd	r25, Y+56	; 0x38
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e2       	ldi	r20, 0x20	; 32
    1e0c:	51 e4       	ldi	r21, 0x41	; 65
    1e0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e12:	dc 01       	movw	r26, r24
    1e14:	cb 01       	movw	r24, r22
    1e16:	bc 01       	movw	r22, r24
    1e18:	cd 01       	movw	r24, r26
    1e1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	98 ab       	std	Y+48, r25	; 0x30
    1e24:	8f a7       	std	Y+47, r24	; 0x2f
    1e26:	0f c0       	rjmp	.+30     	; 0x1e46 <LCD4_voidSendChar+0x13c>
    1e28:	88 ec       	ldi	r24, 0xC8	; 200
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	9e a7       	std	Y+46, r25	; 0x2e
    1e2e:	8d a7       	std	Y+45, r24	; 0x2d
    1e30:	8d a5       	ldd	r24, Y+45	; 0x2d
    1e32:	9e a5       	ldd	r25, Y+46	; 0x2e
    1e34:	01 97       	sbiw	r24, 0x01	; 1
    1e36:	f1 f7       	brne	.-4      	; 0x1e34 <LCD4_voidSendChar+0x12a>
    1e38:	9e a7       	std	Y+46, r25	; 0x2e
    1e3a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e3c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e3e:	98 a9       	ldd	r25, Y+48	; 0x30
    1e40:	01 97       	sbiw	r24, 0x01	; 1
    1e42:	98 ab       	std	Y+48, r25	; 0x30
    1e44:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e46:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e48:	98 a9       	ldd	r25, Y+48	; 0x30
    1e4a:	00 97       	sbiw	r24, 0x00	; 0
    1e4c:	69 f7       	brne	.-38     	; 0x1e28 <LCD4_voidSendChar+0x11e>
    1e4e:	14 c0       	rjmp	.+40     	; 0x1e78 <LCD4_voidSendChar+0x16e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e50:	69 a9       	ldd	r22, Y+49	; 0x31
    1e52:	7a a9       	ldd	r23, Y+50	; 0x32
    1e54:	8b a9       	ldd	r24, Y+51	; 0x33
    1e56:	9c a9       	ldd	r25, Y+52	; 0x34
    1e58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	98 ab       	std	Y+48, r25	; 0x30
    1e62:	8f a7       	std	Y+47, r24	; 0x2f
    1e64:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e66:	98 a9       	ldd	r25, Y+48	; 0x30
    1e68:	9c a7       	std	Y+44, r25	; 0x2c
    1e6a:	8b a7       	std	Y+43, r24	; 0x2b
    1e6c:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e6e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	f1 f7       	brne	.-4      	; 0x1e70 <LCD4_voidSendChar+0x166>
    1e74:	9c a7       	std	Y+44, r25	; 0x2c
    1e76:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(1);

	DIO_u8SetPinValue(LCD_PORT , 6 , DIO_PIN_LOW)  ;
    1e78:	81 e0       	ldi	r24, 0x01	; 1
    1e7a:	66 e0       	ldi	r22, 0x06	; 6
    1e7c:	40 e0       	ldi	r20, 0x00	; 0
    1e7e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    1e82:	80 e0       	ldi	r24, 0x00	; 0
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	a8 ec       	ldi	r26, 0xC8	; 200
    1e88:	b2 e4       	ldi	r27, 0x42	; 66
    1e8a:	8f a3       	std	Y+39, r24	; 0x27
    1e8c:	98 a7       	std	Y+40, r25	; 0x28
    1e8e:	a9 a7       	std	Y+41, r26	; 0x29
    1e90:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e92:	6f a1       	ldd	r22, Y+39	; 0x27
    1e94:	78 a5       	ldd	r23, Y+40	; 0x28
    1e96:	89 a5       	ldd	r24, Y+41	; 0x29
    1e98:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	4a ef       	ldi	r20, 0xFA	; 250
    1ea0:	54 e4       	ldi	r21, 0x44	; 68
    1ea2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea6:	dc 01       	movw	r26, r24
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	8b a3       	std	Y+35, r24	; 0x23
    1eac:	9c a3       	std	Y+36, r25	; 0x24
    1eae:	ad a3       	std	Y+37, r26	; 0x25
    1eb0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1eb2:	6b a1       	ldd	r22, Y+35	; 0x23
    1eb4:	7c a1       	ldd	r23, Y+36	; 0x24
    1eb6:	8d a1       	ldd	r24, Y+37	; 0x25
    1eb8:	9e a1       	ldd	r25, Y+38	; 0x26
    1eba:	20 e0       	ldi	r18, 0x00	; 0
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	40 e8       	ldi	r20, 0x80	; 128
    1ec0:	5f e3       	ldi	r21, 0x3F	; 63
    1ec2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ec6:	88 23       	and	r24, r24
    1ec8:	2c f4       	brge	.+10     	; 0x1ed4 <LCD4_voidSendChar+0x1ca>
		__ticks = 1;
    1eca:	81 e0       	ldi	r24, 0x01	; 1
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	9a a3       	std	Y+34, r25	; 0x22
    1ed0:	89 a3       	std	Y+33, r24	; 0x21
    1ed2:	3f c0       	rjmp	.+126    	; 0x1f52 <LCD4_voidSendChar+0x248>
	else if (__tmp > 65535)
    1ed4:	6b a1       	ldd	r22, Y+35	; 0x23
    1ed6:	7c a1       	ldd	r23, Y+36	; 0x24
    1ed8:	8d a1       	ldd	r24, Y+37	; 0x25
    1eda:	9e a1       	ldd	r25, Y+38	; 0x26
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	3f ef       	ldi	r19, 0xFF	; 255
    1ee0:	4f e7       	ldi	r20, 0x7F	; 127
    1ee2:	57 e4       	ldi	r21, 0x47	; 71
    1ee4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ee8:	18 16       	cp	r1, r24
    1eea:	4c f5       	brge	.+82     	; 0x1f3e <LCD4_voidSendChar+0x234>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eec:	6f a1       	ldd	r22, Y+39	; 0x27
    1eee:	78 a5       	ldd	r23, Y+40	; 0x28
    1ef0:	89 a5       	ldd	r24, Y+41	; 0x29
    1ef2:	9a a5       	ldd	r25, Y+42	; 0x2a
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	40 e2       	ldi	r20, 0x20	; 32
    1efa:	51 e4       	ldi	r21, 0x41	; 65
    1efc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f00:	dc 01       	movw	r26, r24
    1f02:	cb 01       	movw	r24, r22
    1f04:	bc 01       	movw	r22, r24
    1f06:	cd 01       	movw	r24, r26
    1f08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f0c:	dc 01       	movw	r26, r24
    1f0e:	cb 01       	movw	r24, r22
    1f10:	9a a3       	std	Y+34, r25	; 0x22
    1f12:	89 a3       	std	Y+33, r24	; 0x21
    1f14:	0f c0       	rjmp	.+30     	; 0x1f34 <LCD4_voidSendChar+0x22a>
    1f16:	88 ec       	ldi	r24, 0xC8	; 200
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	98 a3       	std	Y+32, r25	; 0x20
    1f1c:	8f 8f       	std	Y+31, r24	; 0x1f
    1f1e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f20:	98 a1       	ldd	r25, Y+32	; 0x20
    1f22:	01 97       	sbiw	r24, 0x01	; 1
    1f24:	f1 f7       	brne	.-4      	; 0x1f22 <LCD4_voidSendChar+0x218>
    1f26:	98 a3       	std	Y+32, r25	; 0x20
    1f28:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f2a:	89 a1       	ldd	r24, Y+33	; 0x21
    1f2c:	9a a1       	ldd	r25, Y+34	; 0x22
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	9a a3       	std	Y+34, r25	; 0x22
    1f32:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f34:	89 a1       	ldd	r24, Y+33	; 0x21
    1f36:	9a a1       	ldd	r25, Y+34	; 0x22
    1f38:	00 97       	sbiw	r24, 0x00	; 0
    1f3a:	69 f7       	brne	.-38     	; 0x1f16 <LCD4_voidSendChar+0x20c>
    1f3c:	14 c0       	rjmp	.+40     	; 0x1f66 <LCD4_voidSendChar+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f3e:	6b a1       	ldd	r22, Y+35	; 0x23
    1f40:	7c a1       	ldd	r23, Y+36	; 0x24
    1f42:	8d a1       	ldd	r24, Y+37	; 0x25
    1f44:	9e a1       	ldd	r25, Y+38	; 0x26
    1f46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	9a a3       	std	Y+34, r25	; 0x22
    1f50:	89 a3       	std	Y+33, r24	; 0x21
    1f52:	89 a1       	ldd	r24, Y+33	; 0x21
    1f54:	9a a1       	ldd	r25, Y+34	; 0x22
    1f56:	9e 8f       	std	Y+30, r25	; 0x1e
    1f58:	8d 8f       	std	Y+29, r24	; 0x1d
    1f5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f5c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f5e:	01 97       	sbiw	r24, 0x01	; 1
    1f60:	f1 f7       	brne	.-4      	; 0x1f5e <LCD4_voidSendChar+0x254>
    1f62:	9e 8f       	std	Y+30, r25	; 0x1e
    1f64:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(100);

	/* sending lower nibble */

	DIO_u8SetPinValue(LCD_PORT, 0,  GET_BIT(data, 0)) ;
    1f66:	89 ad       	ldd	r24, Y+57	; 0x39
    1f68:	98 2f       	mov	r25, r24
    1f6a:	91 70       	andi	r25, 0x01	; 1
    1f6c:	81 e0       	ldi	r24, 0x01	; 1
    1f6e:	60 e0       	ldi	r22, 0x00	; 0
    1f70:	49 2f       	mov	r20, r25
    1f72:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT, 1,  GET_BIT(data, 1)) ;
    1f76:	89 ad       	ldd	r24, Y+57	; 0x39
    1f78:	86 95       	lsr	r24
    1f7a:	98 2f       	mov	r25, r24
    1f7c:	91 70       	andi	r25, 0x01	; 1
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	61 e0       	ldi	r22, 0x01	; 1
    1f82:	49 2f       	mov	r20, r25
    1f84:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT, 2,  GET_BIT(data, 2)) ;
    1f88:	89 ad       	ldd	r24, Y+57	; 0x39
    1f8a:	86 95       	lsr	r24
    1f8c:	86 95       	lsr	r24
    1f8e:	98 2f       	mov	r25, r24
    1f90:	91 70       	andi	r25, 0x01	; 1
    1f92:	81 e0       	ldi	r24, 0x01	; 1
    1f94:	62 e0       	ldi	r22, 0x02	; 2
    1f96:	49 2f       	mov	r20, r25
    1f98:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_PORT, 3,  GET_BIT(data, 3)) ;
    1f9c:	89 ad       	ldd	r24, Y+57	; 0x39
    1f9e:	86 95       	lsr	r24
    1fa0:	86 95       	lsr	r24
    1fa2:	86 95       	lsr	r24
    1fa4:	98 2f       	mov	r25, r24
    1fa6:	91 70       	andi	r25, 0x01	; 1
    1fa8:	81 e0       	ldi	r24, 0x01	; 1
    1faa:	63 e0       	ldi	r22, 0x03	; 3
    1fac:	49 2f       	mov	r20, r25
    1fae:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(LCD_PORT, 6, DIO_PIN_HIGH)  ;
    1fb2:	81 e0       	ldi	r24, 0x01	; 1
    1fb4:	66 e0       	ldi	r22, 0x06	; 6
    1fb6:	41 e0       	ldi	r20, 0x01	; 1
    1fb8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    1fbc:	80 e0       	ldi	r24, 0x00	; 0
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	a0 e8       	ldi	r26, 0x80	; 128
    1fc2:	bf e3       	ldi	r27, 0x3F	; 63
    1fc4:	89 8f       	std	Y+25, r24	; 0x19
    1fc6:	9a 8f       	std	Y+26, r25	; 0x1a
    1fc8:	ab 8f       	std	Y+27, r26	; 0x1b
    1fca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fcc:	69 8d       	ldd	r22, Y+25	; 0x19
    1fce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1fd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1fd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	4a ef       	ldi	r20, 0xFA	; 250
    1fda:	54 e4       	ldi	r21, 0x44	; 68
    1fdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fe0:	dc 01       	movw	r26, r24
    1fe2:	cb 01       	movw	r24, r22
    1fe4:	8d 8b       	std	Y+21, r24	; 0x15
    1fe6:	9e 8b       	std	Y+22, r25	; 0x16
    1fe8:	af 8b       	std	Y+23, r26	; 0x17
    1fea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1fec:	6d 89       	ldd	r22, Y+21	; 0x15
    1fee:	7e 89       	ldd	r23, Y+22	; 0x16
    1ff0:	8f 89       	ldd	r24, Y+23	; 0x17
    1ff2:	98 8d       	ldd	r25, Y+24	; 0x18
    1ff4:	20 e0       	ldi	r18, 0x00	; 0
    1ff6:	30 e0       	ldi	r19, 0x00	; 0
    1ff8:	40 e8       	ldi	r20, 0x80	; 128
    1ffa:	5f e3       	ldi	r21, 0x3F	; 63
    1ffc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2000:	88 23       	and	r24, r24
    2002:	2c f4       	brge	.+10     	; 0x200e <LCD4_voidSendChar+0x304>
		__ticks = 1;
    2004:	81 e0       	ldi	r24, 0x01	; 1
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	9c 8b       	std	Y+20, r25	; 0x14
    200a:	8b 8b       	std	Y+19, r24	; 0x13
    200c:	3f c0       	rjmp	.+126    	; 0x208c <LCD4_voidSendChar+0x382>
	else if (__tmp > 65535)
    200e:	6d 89       	ldd	r22, Y+21	; 0x15
    2010:	7e 89       	ldd	r23, Y+22	; 0x16
    2012:	8f 89       	ldd	r24, Y+23	; 0x17
    2014:	98 8d       	ldd	r25, Y+24	; 0x18
    2016:	20 e0       	ldi	r18, 0x00	; 0
    2018:	3f ef       	ldi	r19, 0xFF	; 255
    201a:	4f e7       	ldi	r20, 0x7F	; 127
    201c:	57 e4       	ldi	r21, 0x47	; 71
    201e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2022:	18 16       	cp	r1, r24
    2024:	4c f5       	brge	.+82     	; 0x2078 <LCD4_voidSendChar+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2026:	69 8d       	ldd	r22, Y+25	; 0x19
    2028:	7a 8d       	ldd	r23, Y+26	; 0x1a
    202a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    202c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    202e:	20 e0       	ldi	r18, 0x00	; 0
    2030:	30 e0       	ldi	r19, 0x00	; 0
    2032:	40 e2       	ldi	r20, 0x20	; 32
    2034:	51 e4       	ldi	r21, 0x41	; 65
    2036:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    203a:	dc 01       	movw	r26, r24
    203c:	cb 01       	movw	r24, r22
    203e:	bc 01       	movw	r22, r24
    2040:	cd 01       	movw	r24, r26
    2042:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2046:	dc 01       	movw	r26, r24
    2048:	cb 01       	movw	r24, r22
    204a:	9c 8b       	std	Y+20, r25	; 0x14
    204c:	8b 8b       	std	Y+19, r24	; 0x13
    204e:	0f c0       	rjmp	.+30     	; 0x206e <LCD4_voidSendChar+0x364>
    2050:	88 ec       	ldi	r24, 0xC8	; 200
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	9a 8b       	std	Y+18, r25	; 0x12
    2056:	89 8b       	std	Y+17, r24	; 0x11
    2058:	89 89       	ldd	r24, Y+17	; 0x11
    205a:	9a 89       	ldd	r25, Y+18	; 0x12
    205c:	01 97       	sbiw	r24, 0x01	; 1
    205e:	f1 f7       	brne	.-4      	; 0x205c <LCD4_voidSendChar+0x352>
    2060:	9a 8b       	std	Y+18, r25	; 0x12
    2062:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2064:	8b 89       	ldd	r24, Y+19	; 0x13
    2066:	9c 89       	ldd	r25, Y+20	; 0x14
    2068:	01 97       	sbiw	r24, 0x01	; 1
    206a:	9c 8b       	std	Y+20, r25	; 0x14
    206c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    206e:	8b 89       	ldd	r24, Y+19	; 0x13
    2070:	9c 89       	ldd	r25, Y+20	; 0x14
    2072:	00 97       	sbiw	r24, 0x00	; 0
    2074:	69 f7       	brne	.-38     	; 0x2050 <LCD4_voidSendChar+0x346>
    2076:	14 c0       	rjmp	.+40     	; 0x20a0 <LCD4_voidSendChar+0x396>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2078:	6d 89       	ldd	r22, Y+21	; 0x15
    207a:	7e 89       	ldd	r23, Y+22	; 0x16
    207c:	8f 89       	ldd	r24, Y+23	; 0x17
    207e:	98 8d       	ldd	r25, Y+24	; 0x18
    2080:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2084:	dc 01       	movw	r26, r24
    2086:	cb 01       	movw	r24, r22
    2088:	9c 8b       	std	Y+20, r25	; 0x14
    208a:	8b 8b       	std	Y+19, r24	; 0x13
    208c:	8b 89       	ldd	r24, Y+19	; 0x13
    208e:	9c 89       	ldd	r25, Y+20	; 0x14
    2090:	98 8b       	std	Y+16, r25	; 0x10
    2092:	8f 87       	std	Y+15, r24	; 0x0f
    2094:	8f 85       	ldd	r24, Y+15	; 0x0f
    2096:	98 89       	ldd	r25, Y+16	; 0x10
    2098:	01 97       	sbiw	r24, 0x01	; 1
    209a:	f1 f7       	brne	.-4      	; 0x2098 <LCD4_voidSendChar+0x38e>
    209c:	98 8b       	std	Y+16, r25	; 0x10
    209e:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1);

	DIO_u8SetPinValue(LCD_PORT, 6, DIO_PIN_LOW)  ;
    20a0:	81 e0       	ldi	r24, 0x01	; 1
    20a2:	66 e0       	ldi	r22, 0x06	; 6
    20a4:	40 e0       	ldi	r20, 0x00	; 0
    20a6:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	a8 ec       	ldi	r26, 0xC8	; 200
    20b0:	b2 e4       	ldi	r27, 0x42	; 66
    20b2:	8b 87       	std	Y+11, r24	; 0x0b
    20b4:	9c 87       	std	Y+12, r25	; 0x0c
    20b6:	ad 87       	std	Y+13, r26	; 0x0d
    20b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    20bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    20be:	8d 85       	ldd	r24, Y+13	; 0x0d
    20c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    20c2:	20 e0       	ldi	r18, 0x00	; 0
    20c4:	30 e0       	ldi	r19, 0x00	; 0
    20c6:	4a ef       	ldi	r20, 0xFA	; 250
    20c8:	54 e4       	ldi	r21, 0x44	; 68
    20ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ce:	dc 01       	movw	r26, r24
    20d0:	cb 01       	movw	r24, r22
    20d2:	8f 83       	std	Y+7, r24	; 0x07
    20d4:	98 87       	std	Y+8, r25	; 0x08
    20d6:	a9 87       	std	Y+9, r26	; 0x09
    20d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    20da:	6f 81       	ldd	r22, Y+7	; 0x07
    20dc:	78 85       	ldd	r23, Y+8	; 0x08
    20de:	89 85       	ldd	r24, Y+9	; 0x09
    20e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    20e2:	20 e0       	ldi	r18, 0x00	; 0
    20e4:	30 e0       	ldi	r19, 0x00	; 0
    20e6:	40 e8       	ldi	r20, 0x80	; 128
    20e8:	5f e3       	ldi	r21, 0x3F	; 63
    20ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20ee:	88 23       	and	r24, r24
    20f0:	2c f4       	brge	.+10     	; 0x20fc <LCD4_voidSendChar+0x3f2>
		__ticks = 1;
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	9e 83       	std	Y+6, r25	; 0x06
    20f8:	8d 83       	std	Y+5, r24	; 0x05
    20fa:	3f c0       	rjmp	.+126    	; 0x217a <LCD4_voidSendChar+0x470>
	else if (__tmp > 65535)
    20fc:	6f 81       	ldd	r22, Y+7	; 0x07
    20fe:	78 85       	ldd	r23, Y+8	; 0x08
    2100:	89 85       	ldd	r24, Y+9	; 0x09
    2102:	9a 85       	ldd	r25, Y+10	; 0x0a
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	3f ef       	ldi	r19, 0xFF	; 255
    2108:	4f e7       	ldi	r20, 0x7F	; 127
    210a:	57 e4       	ldi	r21, 0x47	; 71
    210c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2110:	18 16       	cp	r1, r24
    2112:	4c f5       	brge	.+82     	; 0x2166 <LCD4_voidSendChar+0x45c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2114:	6b 85       	ldd	r22, Y+11	; 0x0b
    2116:	7c 85       	ldd	r23, Y+12	; 0x0c
    2118:	8d 85       	ldd	r24, Y+13	; 0x0d
    211a:	9e 85       	ldd	r25, Y+14	; 0x0e
    211c:	20 e0       	ldi	r18, 0x00	; 0
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	40 e2       	ldi	r20, 0x20	; 32
    2122:	51 e4       	ldi	r21, 0x41	; 65
    2124:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2128:	dc 01       	movw	r26, r24
    212a:	cb 01       	movw	r24, r22
    212c:	bc 01       	movw	r22, r24
    212e:	cd 01       	movw	r24, r26
    2130:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2134:	dc 01       	movw	r26, r24
    2136:	cb 01       	movw	r24, r22
    2138:	9e 83       	std	Y+6, r25	; 0x06
    213a:	8d 83       	std	Y+5, r24	; 0x05
    213c:	0f c0       	rjmp	.+30     	; 0x215c <LCD4_voidSendChar+0x452>
    213e:	88 ec       	ldi	r24, 0xC8	; 200
    2140:	90 e0       	ldi	r25, 0x00	; 0
    2142:	9c 83       	std	Y+4, r25	; 0x04
    2144:	8b 83       	std	Y+3, r24	; 0x03
    2146:	8b 81       	ldd	r24, Y+3	; 0x03
    2148:	9c 81       	ldd	r25, Y+4	; 0x04
    214a:	01 97       	sbiw	r24, 0x01	; 1
    214c:	f1 f7       	brne	.-4      	; 0x214a <LCD4_voidSendChar+0x440>
    214e:	9c 83       	std	Y+4, r25	; 0x04
    2150:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2152:	8d 81       	ldd	r24, Y+5	; 0x05
    2154:	9e 81       	ldd	r25, Y+6	; 0x06
    2156:	01 97       	sbiw	r24, 0x01	; 1
    2158:	9e 83       	std	Y+6, r25	; 0x06
    215a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    215c:	8d 81       	ldd	r24, Y+5	; 0x05
    215e:	9e 81       	ldd	r25, Y+6	; 0x06
    2160:	00 97       	sbiw	r24, 0x00	; 0
    2162:	69 f7       	brne	.-38     	; 0x213e <LCD4_voidSendChar+0x434>
    2164:	14 c0       	rjmp	.+40     	; 0x218e <LCD4_voidSendChar+0x484>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2166:	6f 81       	ldd	r22, Y+7	; 0x07
    2168:	78 85       	ldd	r23, Y+8	; 0x08
    216a:	89 85       	ldd	r24, Y+9	; 0x09
    216c:	9a 85       	ldd	r25, Y+10	; 0x0a
    216e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2172:	dc 01       	movw	r26, r24
    2174:	cb 01       	movw	r24, r22
    2176:	9e 83       	std	Y+6, r25	; 0x06
    2178:	8d 83       	std	Y+5, r24	; 0x05
    217a:	8d 81       	ldd	r24, Y+5	; 0x05
    217c:	9e 81       	ldd	r25, Y+6	; 0x06
    217e:	9a 83       	std	Y+2, r25	; 0x02
    2180:	89 83       	std	Y+1, r24	; 0x01
    2182:	89 81       	ldd	r24, Y+1	; 0x01
    2184:	9a 81       	ldd	r25, Y+2	; 0x02
    2186:	01 97       	sbiw	r24, 0x01	; 1
    2188:	f1 f7       	brne	.-4      	; 0x2186 <LCD4_voidSendChar+0x47c>
    218a:	9a 83       	std	Y+2, r25	; 0x02
    218c:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(100);



}
    218e:	e9 96       	adiw	r28, 0x39	; 57
    2190:	0f b6       	in	r0, 0x3f	; 63
    2192:	f8 94       	cli
    2194:	de bf       	out	0x3e, r29	; 62
    2196:	0f be       	out	0x3f, r0	; 63
    2198:	cd bf       	out	0x3d, r28	; 61
    219a:	cf 91       	pop	r28
    219c:	df 91       	pop	r29
    219e:	08 95       	ret

000021a0 <LCD4_voidSendString>:
 * Output: void
 */

void LCD4_voidSendString (u8 * u8Str)

{
    21a0:	df 93       	push	r29
    21a2:	cf 93       	push	r28
    21a4:	00 d0       	rcall	.+0      	; 0x21a6 <LCD4_voidSendString+0x6>
    21a6:	0f 92       	push	r0
    21a8:	cd b7       	in	r28, 0x3d	; 61
    21aa:	de b7       	in	r29, 0x3e	; 62
    21ac:	9b 83       	std	Y+3, r25	; 0x03
    21ae:	8a 83       	std	Y+2, r24	; 0x02
	u8 i =0 ;
    21b0:	19 82       	std	Y+1, r1	; 0x01
    21b2:	0e c0       	rjmp	.+28     	; 0x21d0 <LCD4_voidSendString+0x30>

	while (u8Str[i] != '\0')
	{
		LCD4_voidSendChar(u8Str[i])  ;
    21b4:	89 81       	ldd	r24, Y+1	; 0x01
    21b6:	28 2f       	mov	r18, r24
    21b8:	30 e0       	ldi	r19, 0x00	; 0
    21ba:	8a 81       	ldd	r24, Y+2	; 0x02
    21bc:	9b 81       	ldd	r25, Y+3	; 0x03
    21be:	fc 01       	movw	r30, r24
    21c0:	e2 0f       	add	r30, r18
    21c2:	f3 1f       	adc	r31, r19
    21c4:	80 81       	ld	r24, Z
    21c6:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <LCD4_voidSendChar>

		i++ ;
    21ca:	89 81       	ldd	r24, Y+1	; 0x01
    21cc:	8f 5f       	subi	r24, 0xFF	; 255
    21ce:	89 83       	std	Y+1, r24	; 0x01
void LCD4_voidSendString (u8 * u8Str)

{
	u8 i =0 ;

	while (u8Str[i] != '\0')
    21d0:	89 81       	ldd	r24, Y+1	; 0x01
    21d2:	28 2f       	mov	r18, r24
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	8a 81       	ldd	r24, Y+2	; 0x02
    21d8:	9b 81       	ldd	r25, Y+3	; 0x03
    21da:	fc 01       	movw	r30, r24
    21dc:	e2 0f       	add	r30, r18
    21de:	f3 1f       	adc	r31, r19
    21e0:	80 81       	ld	r24, Z
    21e2:	88 23       	and	r24, r24
    21e4:	39 f7       	brne	.-50     	; 0x21b4 <LCD4_voidSendString+0x14>
	{
		LCD4_voidSendChar(u8Str[i])  ;

		i++ ;
	}
}
    21e6:	0f 90       	pop	r0
    21e8:	0f 90       	pop	r0
    21ea:	0f 90       	pop	r0
    21ec:	cf 91       	pop	r28
    21ee:	df 91       	pop	r29
    21f0:	08 95       	ret

000021f2 <STEPPER_voidInit>:

 void STEPPER_voidRunAnticlockw() ;


void STEPPER_voidInit(void)
{
    21f2:	df 93       	push	r29
    21f4:	cf 93       	push	r28
    21f6:	cd b7       	in	r28, 0x3d	; 61
    21f8:	de b7       	in	r29, 0x3e	; 62

	DIO_u8SetPortDirection(STEPPER_PORT , DIO_PORT_OUTPUT) ;
    21fa:	82 e0       	ldi	r24, 0x02	; 2
    21fc:	6f ef       	ldi	r22, 0xFF	; 255
    21fe:	0e 94 67 06 	call	0xcce	; 0xcce <DIO_u8SetPortDirection>


}
    2202:	cf 91       	pop	r28
    2204:	df 91       	pop	r29
    2206:	08 95       	ret

00002208 <STEPPER_voidStop>:

void STEPPER_voidStop(void)
{
    2208:	df 93       	push	r29
    220a:	cf 93       	push	r28
    220c:	cd b7       	in	r28, 0x3d	; 61
    220e:	de b7       	in	r29, 0x3e	; 62

	DIO_u8SetPortValue(STEPPER_PORT , DIO_PORT_LOW) ;
    2210:	82 e0       	ldi	r24, 0x02	; 2
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	0e 94 81 07 	call	0xf02	; 0xf02 <DIO_u8SetPortValue>


}
    2218:	cf 91       	pop	r28
    221a:	df 91       	pop	r29
    221c:	08 95       	ret

0000221e <STEPPER_voidRunclockw>:


void STEPPER_voidRunclockw(void)
{
    221e:	df 93       	push	r29
    2220:	cf 93       	push	r28
    2222:	cd b7       	in	r28, 0x3d	; 61
    2224:	de b7       	in	r29, 0x3e	; 62
    2226:	e8 97       	sbiw	r28, 0x38	; 56
    2228:	0f b6       	in	r0, 0x3f	; 63
    222a:	f8 94       	cli
    222c:	de bf       	out	0x3e, r29	; 62
    222e:	0f be       	out	0x3f, r0	; 63
    2230:	cd bf       	out	0x3d, r28	; 61

		DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    2232:	82 e0       	ldi	r24, 0x02	; 2
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	40 e0       	ldi	r20, 0x00	; 0
    2238:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    223c:	82 e0       	ldi	r24, 0x02	; 2
    223e:	61 e0       	ldi	r22, 0x01	; 1
    2240:	40 e0       	ldi	r20, 0x00	; 0
    2242:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    2246:	82 e0       	ldi	r24, 0x02	; 2
    2248:	62 e0       	ldi	r22, 0x02	; 2
    224a:	40 e0       	ldi	r20, 0x00	; 0
    224c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_HIGH) ;
    2250:	82 e0       	ldi	r24, 0x02	; 2
    2252:	63 e0       	ldi	r22, 0x03	; 3
    2254:	41 e0       	ldi	r20, 0x01	; 1
    2256:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    225a:	80 e0       	ldi	r24, 0x00	; 0
    225c:	90 e0       	ldi	r25, 0x00	; 0
    225e:	a0 e2       	ldi	r26, 0x20	; 32
    2260:	b1 e4       	ldi	r27, 0x41	; 65
    2262:	8d ab       	std	Y+53, r24	; 0x35
    2264:	9e ab       	std	Y+54, r25	; 0x36
    2266:	af ab       	std	Y+55, r26	; 0x37
    2268:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    226a:	6d a9       	ldd	r22, Y+53	; 0x35
    226c:	7e a9       	ldd	r23, Y+54	; 0x36
    226e:	8f a9       	ldd	r24, Y+55	; 0x37
    2270:	98 ad       	ldd	r25, Y+56	; 0x38
    2272:	20 e0       	ldi	r18, 0x00	; 0
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	4a ef       	ldi	r20, 0xFA	; 250
    2278:	54 e4       	ldi	r21, 0x44	; 68
    227a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    227e:	dc 01       	movw	r26, r24
    2280:	cb 01       	movw	r24, r22
    2282:	89 ab       	std	Y+49, r24	; 0x31
    2284:	9a ab       	std	Y+50, r25	; 0x32
    2286:	ab ab       	std	Y+51, r26	; 0x33
    2288:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    228a:	69 a9       	ldd	r22, Y+49	; 0x31
    228c:	7a a9       	ldd	r23, Y+50	; 0x32
    228e:	8b a9       	ldd	r24, Y+51	; 0x33
    2290:	9c a9       	ldd	r25, Y+52	; 0x34
    2292:	20 e0       	ldi	r18, 0x00	; 0
    2294:	30 e0       	ldi	r19, 0x00	; 0
    2296:	40 e8       	ldi	r20, 0x80	; 128
    2298:	5f e3       	ldi	r21, 0x3F	; 63
    229a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    229e:	88 23       	and	r24, r24
    22a0:	2c f4       	brge	.+10     	; 0x22ac <STEPPER_voidRunclockw+0x8e>
		__ticks = 1;
    22a2:	81 e0       	ldi	r24, 0x01	; 1
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	98 ab       	std	Y+48, r25	; 0x30
    22a8:	8f a7       	std	Y+47, r24	; 0x2f
    22aa:	3f c0       	rjmp	.+126    	; 0x232a <STEPPER_voidRunclockw+0x10c>
	else if (__tmp > 65535)
    22ac:	69 a9       	ldd	r22, Y+49	; 0x31
    22ae:	7a a9       	ldd	r23, Y+50	; 0x32
    22b0:	8b a9       	ldd	r24, Y+51	; 0x33
    22b2:	9c a9       	ldd	r25, Y+52	; 0x34
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	3f ef       	ldi	r19, 0xFF	; 255
    22b8:	4f e7       	ldi	r20, 0x7F	; 127
    22ba:	57 e4       	ldi	r21, 0x47	; 71
    22bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22c0:	18 16       	cp	r1, r24
    22c2:	4c f5       	brge	.+82     	; 0x2316 <STEPPER_voidRunclockw+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22c4:	6d a9       	ldd	r22, Y+53	; 0x35
    22c6:	7e a9       	ldd	r23, Y+54	; 0x36
    22c8:	8f a9       	ldd	r24, Y+55	; 0x37
    22ca:	98 ad       	ldd	r25, Y+56	; 0x38
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	40 e2       	ldi	r20, 0x20	; 32
    22d2:	51 e4       	ldi	r21, 0x41	; 65
    22d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22d8:	dc 01       	movw	r26, r24
    22da:	cb 01       	movw	r24, r22
    22dc:	bc 01       	movw	r22, r24
    22de:	cd 01       	movw	r24, r26
    22e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22e4:	dc 01       	movw	r26, r24
    22e6:	cb 01       	movw	r24, r22
    22e8:	98 ab       	std	Y+48, r25	; 0x30
    22ea:	8f a7       	std	Y+47, r24	; 0x2f
    22ec:	0f c0       	rjmp	.+30     	; 0x230c <STEPPER_voidRunclockw+0xee>
    22ee:	88 ec       	ldi	r24, 0xC8	; 200
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	9e a7       	std	Y+46, r25	; 0x2e
    22f4:	8d a7       	std	Y+45, r24	; 0x2d
    22f6:	8d a5       	ldd	r24, Y+45	; 0x2d
    22f8:	9e a5       	ldd	r25, Y+46	; 0x2e
    22fa:	01 97       	sbiw	r24, 0x01	; 1
    22fc:	f1 f7       	brne	.-4      	; 0x22fa <STEPPER_voidRunclockw+0xdc>
    22fe:	9e a7       	std	Y+46, r25	; 0x2e
    2300:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2302:	8f a5       	ldd	r24, Y+47	; 0x2f
    2304:	98 a9       	ldd	r25, Y+48	; 0x30
    2306:	01 97       	sbiw	r24, 0x01	; 1
    2308:	98 ab       	std	Y+48, r25	; 0x30
    230a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    230c:	8f a5       	ldd	r24, Y+47	; 0x2f
    230e:	98 a9       	ldd	r25, Y+48	; 0x30
    2310:	00 97       	sbiw	r24, 0x00	; 0
    2312:	69 f7       	brne	.-38     	; 0x22ee <STEPPER_voidRunclockw+0xd0>
    2314:	14 c0       	rjmp	.+40     	; 0x233e <STEPPER_voidRunclockw+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2316:	69 a9       	ldd	r22, Y+49	; 0x31
    2318:	7a a9       	ldd	r23, Y+50	; 0x32
    231a:	8b a9       	ldd	r24, Y+51	; 0x33
    231c:	9c a9       	ldd	r25, Y+52	; 0x34
    231e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2322:	dc 01       	movw	r26, r24
    2324:	cb 01       	movw	r24, r22
    2326:	98 ab       	std	Y+48, r25	; 0x30
    2328:	8f a7       	std	Y+47, r24	; 0x2f
    232a:	8f a5       	ldd	r24, Y+47	; 0x2f
    232c:	98 a9       	ldd	r25, Y+48	; 0x30
    232e:	9c a7       	std	Y+44, r25	; 0x2c
    2330:	8b a7       	std	Y+43, r24	; 0x2b
    2332:	8b a5       	ldd	r24, Y+43	; 0x2b
    2334:	9c a5       	ldd	r25, Y+44	; 0x2c
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	f1 f7       	brne	.-4      	; 0x2336 <STEPPER_voidRunclockw+0x118>
    233a:	9c a7       	std	Y+44, r25	; 0x2c
    233c:	8b a7       	std	Y+43, r24	; 0x2b

		_delay_ms(10) ;

		DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    233e:	82 e0       	ldi	r24, 0x02	; 2
    2340:	60 e0       	ldi	r22, 0x00	; 0
    2342:	40 e0       	ldi	r20, 0x00	; 0
    2344:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    2348:	82 e0       	ldi	r24, 0x02	; 2
    234a:	61 e0       	ldi	r22, 0x01	; 1
    234c:	40 e0       	ldi	r20, 0x00	; 0
    234e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_HIGH) ;
    2352:	82 e0       	ldi	r24, 0x02	; 2
    2354:	62 e0       	ldi	r22, 0x02	; 2
    2356:	41 e0       	ldi	r20, 0x01	; 1
    2358:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    235c:	82 e0       	ldi	r24, 0x02	; 2
    235e:	63 e0       	ldi	r22, 0x03	; 3
    2360:	40 e0       	ldi	r20, 0x00	; 0
    2362:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    2366:	80 e0       	ldi	r24, 0x00	; 0
    2368:	90 e0       	ldi	r25, 0x00	; 0
    236a:	a0 e2       	ldi	r26, 0x20	; 32
    236c:	b1 e4       	ldi	r27, 0x41	; 65
    236e:	8f a3       	std	Y+39, r24	; 0x27
    2370:	98 a7       	std	Y+40, r25	; 0x28
    2372:	a9 a7       	std	Y+41, r26	; 0x29
    2374:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2376:	6f a1       	ldd	r22, Y+39	; 0x27
    2378:	78 a5       	ldd	r23, Y+40	; 0x28
    237a:	89 a5       	ldd	r24, Y+41	; 0x29
    237c:	9a a5       	ldd	r25, Y+42	; 0x2a
    237e:	20 e0       	ldi	r18, 0x00	; 0
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	4a ef       	ldi	r20, 0xFA	; 250
    2384:	54 e4       	ldi	r21, 0x44	; 68
    2386:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    238a:	dc 01       	movw	r26, r24
    238c:	cb 01       	movw	r24, r22
    238e:	8b a3       	std	Y+35, r24	; 0x23
    2390:	9c a3       	std	Y+36, r25	; 0x24
    2392:	ad a3       	std	Y+37, r26	; 0x25
    2394:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2396:	6b a1       	ldd	r22, Y+35	; 0x23
    2398:	7c a1       	ldd	r23, Y+36	; 0x24
    239a:	8d a1       	ldd	r24, Y+37	; 0x25
    239c:	9e a1       	ldd	r25, Y+38	; 0x26
    239e:	20 e0       	ldi	r18, 0x00	; 0
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	40 e8       	ldi	r20, 0x80	; 128
    23a4:	5f e3       	ldi	r21, 0x3F	; 63
    23a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23aa:	88 23       	and	r24, r24
    23ac:	2c f4       	brge	.+10     	; 0x23b8 <STEPPER_voidRunclockw+0x19a>
		__ticks = 1;
    23ae:	81 e0       	ldi	r24, 0x01	; 1
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	9a a3       	std	Y+34, r25	; 0x22
    23b4:	89 a3       	std	Y+33, r24	; 0x21
    23b6:	3f c0       	rjmp	.+126    	; 0x2436 <STEPPER_voidRunclockw+0x218>
	else if (__tmp > 65535)
    23b8:	6b a1       	ldd	r22, Y+35	; 0x23
    23ba:	7c a1       	ldd	r23, Y+36	; 0x24
    23bc:	8d a1       	ldd	r24, Y+37	; 0x25
    23be:	9e a1       	ldd	r25, Y+38	; 0x26
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	3f ef       	ldi	r19, 0xFF	; 255
    23c4:	4f e7       	ldi	r20, 0x7F	; 127
    23c6:	57 e4       	ldi	r21, 0x47	; 71
    23c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23cc:	18 16       	cp	r1, r24
    23ce:	4c f5       	brge	.+82     	; 0x2422 <STEPPER_voidRunclockw+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23d0:	6f a1       	ldd	r22, Y+39	; 0x27
    23d2:	78 a5       	ldd	r23, Y+40	; 0x28
    23d4:	89 a5       	ldd	r24, Y+41	; 0x29
    23d6:	9a a5       	ldd	r25, Y+42	; 0x2a
    23d8:	20 e0       	ldi	r18, 0x00	; 0
    23da:	30 e0       	ldi	r19, 0x00	; 0
    23dc:	40 e2       	ldi	r20, 0x20	; 32
    23de:	51 e4       	ldi	r21, 0x41	; 65
    23e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23e4:	dc 01       	movw	r26, r24
    23e6:	cb 01       	movw	r24, r22
    23e8:	bc 01       	movw	r22, r24
    23ea:	cd 01       	movw	r24, r26
    23ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23f0:	dc 01       	movw	r26, r24
    23f2:	cb 01       	movw	r24, r22
    23f4:	9a a3       	std	Y+34, r25	; 0x22
    23f6:	89 a3       	std	Y+33, r24	; 0x21
    23f8:	0f c0       	rjmp	.+30     	; 0x2418 <STEPPER_voidRunclockw+0x1fa>
    23fa:	88 ec       	ldi	r24, 0xC8	; 200
    23fc:	90 e0       	ldi	r25, 0x00	; 0
    23fe:	98 a3       	std	Y+32, r25	; 0x20
    2400:	8f 8f       	std	Y+31, r24	; 0x1f
    2402:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2404:	98 a1       	ldd	r25, Y+32	; 0x20
    2406:	01 97       	sbiw	r24, 0x01	; 1
    2408:	f1 f7       	brne	.-4      	; 0x2406 <STEPPER_voidRunclockw+0x1e8>
    240a:	98 a3       	std	Y+32, r25	; 0x20
    240c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    240e:	89 a1       	ldd	r24, Y+33	; 0x21
    2410:	9a a1       	ldd	r25, Y+34	; 0x22
    2412:	01 97       	sbiw	r24, 0x01	; 1
    2414:	9a a3       	std	Y+34, r25	; 0x22
    2416:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2418:	89 a1       	ldd	r24, Y+33	; 0x21
    241a:	9a a1       	ldd	r25, Y+34	; 0x22
    241c:	00 97       	sbiw	r24, 0x00	; 0
    241e:	69 f7       	brne	.-38     	; 0x23fa <STEPPER_voidRunclockw+0x1dc>
    2420:	14 c0       	rjmp	.+40     	; 0x244a <STEPPER_voidRunclockw+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2422:	6b a1       	ldd	r22, Y+35	; 0x23
    2424:	7c a1       	ldd	r23, Y+36	; 0x24
    2426:	8d a1       	ldd	r24, Y+37	; 0x25
    2428:	9e a1       	ldd	r25, Y+38	; 0x26
    242a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    242e:	dc 01       	movw	r26, r24
    2430:	cb 01       	movw	r24, r22
    2432:	9a a3       	std	Y+34, r25	; 0x22
    2434:	89 a3       	std	Y+33, r24	; 0x21
    2436:	89 a1       	ldd	r24, Y+33	; 0x21
    2438:	9a a1       	ldd	r25, Y+34	; 0x22
    243a:	9e 8f       	std	Y+30, r25	; 0x1e
    243c:	8d 8f       	std	Y+29, r24	; 0x1d
    243e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2440:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2442:	01 97       	sbiw	r24, 0x01	; 1
    2444:	f1 f7       	brne	.-4      	; 0x2442 <STEPPER_voidRunclockw+0x224>
    2446:	9e 8f       	std	Y+30, r25	; 0x1e
    2448:	8d 8f       	std	Y+29, r24	; 0x1d

		_delay_ms(10) ;

		DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    244a:	82 e0       	ldi	r24, 0x02	; 2
    244c:	60 e0       	ldi	r22, 0x00	; 0
    244e:	40 e0       	ldi	r20, 0x00	; 0
    2450:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_HIGH) ;
    2454:	82 e0       	ldi	r24, 0x02	; 2
    2456:	61 e0       	ldi	r22, 0x01	; 1
    2458:	41 e0       	ldi	r20, 0x01	; 1
    245a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    245e:	82 e0       	ldi	r24, 0x02	; 2
    2460:	62 e0       	ldi	r22, 0x02	; 2
    2462:	40 e0       	ldi	r20, 0x00	; 0
    2464:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    2468:	82 e0       	ldi	r24, 0x02	; 2
    246a:	63 e0       	ldi	r22, 0x03	; 3
    246c:	40 e0       	ldi	r20, 0x00	; 0
    246e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    2472:	80 e0       	ldi	r24, 0x00	; 0
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	a0 e2       	ldi	r26, 0x20	; 32
    2478:	b1 e4       	ldi	r27, 0x41	; 65
    247a:	89 8f       	std	Y+25, r24	; 0x19
    247c:	9a 8f       	std	Y+26, r25	; 0x1a
    247e:	ab 8f       	std	Y+27, r26	; 0x1b
    2480:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2482:	69 8d       	ldd	r22, Y+25	; 0x19
    2484:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2486:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2488:	9c 8d       	ldd	r25, Y+28	; 0x1c
    248a:	20 e0       	ldi	r18, 0x00	; 0
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	4a ef       	ldi	r20, 0xFA	; 250
    2490:	54 e4       	ldi	r21, 0x44	; 68
    2492:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2496:	dc 01       	movw	r26, r24
    2498:	cb 01       	movw	r24, r22
    249a:	8d 8b       	std	Y+21, r24	; 0x15
    249c:	9e 8b       	std	Y+22, r25	; 0x16
    249e:	af 8b       	std	Y+23, r26	; 0x17
    24a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    24a2:	6d 89       	ldd	r22, Y+21	; 0x15
    24a4:	7e 89       	ldd	r23, Y+22	; 0x16
    24a6:	8f 89       	ldd	r24, Y+23	; 0x17
    24a8:	98 8d       	ldd	r25, Y+24	; 0x18
    24aa:	20 e0       	ldi	r18, 0x00	; 0
    24ac:	30 e0       	ldi	r19, 0x00	; 0
    24ae:	40 e8       	ldi	r20, 0x80	; 128
    24b0:	5f e3       	ldi	r21, 0x3F	; 63
    24b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24b6:	88 23       	and	r24, r24
    24b8:	2c f4       	brge	.+10     	; 0x24c4 <STEPPER_voidRunclockw+0x2a6>
		__ticks = 1;
    24ba:	81 e0       	ldi	r24, 0x01	; 1
    24bc:	90 e0       	ldi	r25, 0x00	; 0
    24be:	9c 8b       	std	Y+20, r25	; 0x14
    24c0:	8b 8b       	std	Y+19, r24	; 0x13
    24c2:	3f c0       	rjmp	.+126    	; 0x2542 <STEPPER_voidRunclockw+0x324>
	else if (__tmp > 65535)
    24c4:	6d 89       	ldd	r22, Y+21	; 0x15
    24c6:	7e 89       	ldd	r23, Y+22	; 0x16
    24c8:	8f 89       	ldd	r24, Y+23	; 0x17
    24ca:	98 8d       	ldd	r25, Y+24	; 0x18
    24cc:	20 e0       	ldi	r18, 0x00	; 0
    24ce:	3f ef       	ldi	r19, 0xFF	; 255
    24d0:	4f e7       	ldi	r20, 0x7F	; 127
    24d2:	57 e4       	ldi	r21, 0x47	; 71
    24d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24d8:	18 16       	cp	r1, r24
    24da:	4c f5       	brge	.+82     	; 0x252e <STEPPER_voidRunclockw+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24dc:	69 8d       	ldd	r22, Y+25	; 0x19
    24de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    24e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    24e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    24e4:	20 e0       	ldi	r18, 0x00	; 0
    24e6:	30 e0       	ldi	r19, 0x00	; 0
    24e8:	40 e2       	ldi	r20, 0x20	; 32
    24ea:	51 e4       	ldi	r21, 0x41	; 65
    24ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	bc 01       	movw	r22, r24
    24f6:	cd 01       	movw	r24, r26
    24f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24fc:	dc 01       	movw	r26, r24
    24fe:	cb 01       	movw	r24, r22
    2500:	9c 8b       	std	Y+20, r25	; 0x14
    2502:	8b 8b       	std	Y+19, r24	; 0x13
    2504:	0f c0       	rjmp	.+30     	; 0x2524 <STEPPER_voidRunclockw+0x306>
    2506:	88 ec       	ldi	r24, 0xC8	; 200
    2508:	90 e0       	ldi	r25, 0x00	; 0
    250a:	9a 8b       	std	Y+18, r25	; 0x12
    250c:	89 8b       	std	Y+17, r24	; 0x11
    250e:	89 89       	ldd	r24, Y+17	; 0x11
    2510:	9a 89       	ldd	r25, Y+18	; 0x12
    2512:	01 97       	sbiw	r24, 0x01	; 1
    2514:	f1 f7       	brne	.-4      	; 0x2512 <STEPPER_voidRunclockw+0x2f4>
    2516:	9a 8b       	std	Y+18, r25	; 0x12
    2518:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    251a:	8b 89       	ldd	r24, Y+19	; 0x13
    251c:	9c 89       	ldd	r25, Y+20	; 0x14
    251e:	01 97       	sbiw	r24, 0x01	; 1
    2520:	9c 8b       	std	Y+20, r25	; 0x14
    2522:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2524:	8b 89       	ldd	r24, Y+19	; 0x13
    2526:	9c 89       	ldd	r25, Y+20	; 0x14
    2528:	00 97       	sbiw	r24, 0x00	; 0
    252a:	69 f7       	brne	.-38     	; 0x2506 <STEPPER_voidRunclockw+0x2e8>
    252c:	14 c0       	rjmp	.+40     	; 0x2556 <STEPPER_voidRunclockw+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    252e:	6d 89       	ldd	r22, Y+21	; 0x15
    2530:	7e 89       	ldd	r23, Y+22	; 0x16
    2532:	8f 89       	ldd	r24, Y+23	; 0x17
    2534:	98 8d       	ldd	r25, Y+24	; 0x18
    2536:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	9c 8b       	std	Y+20, r25	; 0x14
    2540:	8b 8b       	std	Y+19, r24	; 0x13
    2542:	8b 89       	ldd	r24, Y+19	; 0x13
    2544:	9c 89       	ldd	r25, Y+20	; 0x14
    2546:	98 8b       	std	Y+16, r25	; 0x10
    2548:	8f 87       	std	Y+15, r24	; 0x0f
    254a:	8f 85       	ldd	r24, Y+15	; 0x0f
    254c:	98 89       	ldd	r25, Y+16	; 0x10
    254e:	01 97       	sbiw	r24, 0x01	; 1
    2550:	f1 f7       	brne	.-4      	; 0x254e <STEPPER_voidRunclockw+0x330>
    2552:	98 8b       	std	Y+16, r25	; 0x10
    2554:	8f 87       	std	Y+15, r24	; 0x0f

		_delay_ms(10) ;

		DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_HIGH) ;
    2556:	82 e0       	ldi	r24, 0x02	; 2
    2558:	60 e0       	ldi	r22, 0x00	; 0
    255a:	41 e0       	ldi	r20, 0x01	; 1
    255c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    2560:	82 e0       	ldi	r24, 0x02	; 2
    2562:	61 e0       	ldi	r22, 0x01	; 1
    2564:	40 e0       	ldi	r20, 0x00	; 0
    2566:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    256a:	82 e0       	ldi	r24, 0x02	; 2
    256c:	62 e0       	ldi	r22, 0x02	; 2
    256e:	40 e0       	ldi	r20, 0x00	; 0
    2570:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    2574:	82 e0       	ldi	r24, 0x02	; 2
    2576:	63 e0       	ldi	r22, 0x03	; 3
    2578:	40 e0       	ldi	r20, 0x00	; 0
    257a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	a0 e2       	ldi	r26, 0x20	; 32
    2584:	b1 e4       	ldi	r27, 0x41	; 65
    2586:	8b 87       	std	Y+11, r24	; 0x0b
    2588:	9c 87       	std	Y+12, r25	; 0x0c
    258a:	ad 87       	std	Y+13, r26	; 0x0d
    258c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    258e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2590:	7c 85       	ldd	r23, Y+12	; 0x0c
    2592:	8d 85       	ldd	r24, Y+13	; 0x0d
    2594:	9e 85       	ldd	r25, Y+14	; 0x0e
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	30 e0       	ldi	r19, 0x00	; 0
    259a:	4a ef       	ldi	r20, 0xFA	; 250
    259c:	54 e4       	ldi	r21, 0x44	; 68
    259e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25a2:	dc 01       	movw	r26, r24
    25a4:	cb 01       	movw	r24, r22
    25a6:	8f 83       	std	Y+7, r24	; 0x07
    25a8:	98 87       	std	Y+8, r25	; 0x08
    25aa:	a9 87       	std	Y+9, r26	; 0x09
    25ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    25ae:	6f 81       	ldd	r22, Y+7	; 0x07
    25b0:	78 85       	ldd	r23, Y+8	; 0x08
    25b2:	89 85       	ldd	r24, Y+9	; 0x09
    25b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    25b6:	20 e0       	ldi	r18, 0x00	; 0
    25b8:	30 e0       	ldi	r19, 0x00	; 0
    25ba:	40 e8       	ldi	r20, 0x80	; 128
    25bc:	5f e3       	ldi	r21, 0x3F	; 63
    25be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25c2:	88 23       	and	r24, r24
    25c4:	2c f4       	brge	.+10     	; 0x25d0 <STEPPER_voidRunclockw+0x3b2>
		__ticks = 1;
    25c6:	81 e0       	ldi	r24, 0x01	; 1
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	9e 83       	std	Y+6, r25	; 0x06
    25cc:	8d 83       	std	Y+5, r24	; 0x05
    25ce:	3f c0       	rjmp	.+126    	; 0x264e <STEPPER_voidRunclockw+0x430>
	else if (__tmp > 65535)
    25d0:	6f 81       	ldd	r22, Y+7	; 0x07
    25d2:	78 85       	ldd	r23, Y+8	; 0x08
    25d4:	89 85       	ldd	r24, Y+9	; 0x09
    25d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	3f ef       	ldi	r19, 0xFF	; 255
    25dc:	4f e7       	ldi	r20, 0x7F	; 127
    25de:	57 e4       	ldi	r21, 0x47	; 71
    25e0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25e4:	18 16       	cp	r1, r24
    25e6:	4c f5       	brge	.+82     	; 0x263a <STEPPER_voidRunclockw+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    25ea:	7c 85       	ldd	r23, Y+12	; 0x0c
    25ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    25ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    25f0:	20 e0       	ldi	r18, 0x00	; 0
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	40 e2       	ldi	r20, 0x20	; 32
    25f6:	51 e4       	ldi	r21, 0x41	; 65
    25f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25fc:	dc 01       	movw	r26, r24
    25fe:	cb 01       	movw	r24, r22
    2600:	bc 01       	movw	r22, r24
    2602:	cd 01       	movw	r24, r26
    2604:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2608:	dc 01       	movw	r26, r24
    260a:	cb 01       	movw	r24, r22
    260c:	9e 83       	std	Y+6, r25	; 0x06
    260e:	8d 83       	std	Y+5, r24	; 0x05
    2610:	0f c0       	rjmp	.+30     	; 0x2630 <STEPPER_voidRunclockw+0x412>
    2612:	88 ec       	ldi	r24, 0xC8	; 200
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	9c 83       	std	Y+4, r25	; 0x04
    2618:	8b 83       	std	Y+3, r24	; 0x03
    261a:	8b 81       	ldd	r24, Y+3	; 0x03
    261c:	9c 81       	ldd	r25, Y+4	; 0x04
    261e:	01 97       	sbiw	r24, 0x01	; 1
    2620:	f1 f7       	brne	.-4      	; 0x261e <STEPPER_voidRunclockw+0x400>
    2622:	9c 83       	std	Y+4, r25	; 0x04
    2624:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2626:	8d 81       	ldd	r24, Y+5	; 0x05
    2628:	9e 81       	ldd	r25, Y+6	; 0x06
    262a:	01 97       	sbiw	r24, 0x01	; 1
    262c:	9e 83       	std	Y+6, r25	; 0x06
    262e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2630:	8d 81       	ldd	r24, Y+5	; 0x05
    2632:	9e 81       	ldd	r25, Y+6	; 0x06
    2634:	00 97       	sbiw	r24, 0x00	; 0
    2636:	69 f7       	brne	.-38     	; 0x2612 <STEPPER_voidRunclockw+0x3f4>
    2638:	14 c0       	rjmp	.+40     	; 0x2662 <STEPPER_voidRunclockw+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    263a:	6f 81       	ldd	r22, Y+7	; 0x07
    263c:	78 85       	ldd	r23, Y+8	; 0x08
    263e:	89 85       	ldd	r24, Y+9	; 0x09
    2640:	9a 85       	ldd	r25, Y+10	; 0x0a
    2642:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2646:	dc 01       	movw	r26, r24
    2648:	cb 01       	movw	r24, r22
    264a:	9e 83       	std	Y+6, r25	; 0x06
    264c:	8d 83       	std	Y+5, r24	; 0x05
    264e:	8d 81       	ldd	r24, Y+5	; 0x05
    2650:	9e 81       	ldd	r25, Y+6	; 0x06
    2652:	9a 83       	std	Y+2, r25	; 0x02
    2654:	89 83       	std	Y+1, r24	; 0x01
    2656:	89 81       	ldd	r24, Y+1	; 0x01
    2658:	9a 81       	ldd	r25, Y+2	; 0x02
    265a:	01 97       	sbiw	r24, 0x01	; 1
    265c:	f1 f7       	brne	.-4      	; 0x265a <STEPPER_voidRunclockw+0x43c>
    265e:	9a 83       	std	Y+2, r25	; 0x02
    2660:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(10) ;




}
    2662:	e8 96       	adiw	r28, 0x38	; 56
    2664:	0f b6       	in	r0, 0x3f	; 63
    2666:	f8 94       	cli
    2668:	de bf       	out	0x3e, r29	; 62
    266a:	0f be       	out	0x3f, r0	; 63
    266c:	cd bf       	out	0x3d, r28	; 61
    266e:	cf 91       	pop	r28
    2670:	df 91       	pop	r29
    2672:	08 95       	ret

00002674 <STEPPER_voidRunAnticlockw>:



void STEPPER_voidRunAnticlockw(void)
{
    2674:	df 93       	push	r29
    2676:	cf 93       	push	r28
    2678:	cd b7       	in	r28, 0x3d	; 61
    267a:	de b7       	in	r29, 0x3e	; 62
    267c:	e8 97       	sbiw	r28, 0x38	; 56
    267e:	0f b6       	in	r0, 0x3f	; 63
    2680:	f8 94       	cli
    2682:	de bf       	out	0x3e, r29	; 62
    2684:	0f be       	out	0x3f, r0	; 63
    2686:	cd bf       	out	0x3d, r28	; 61




						DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    2688:	82 e0       	ldi	r24, 0x02	; 2
    268a:	60 e0       	ldi	r22, 0x00	; 0
    268c:	40 e0       	ldi	r20, 0x00	; 0
    268e:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    2692:	82 e0       	ldi	r24, 0x02	; 2
    2694:	61 e0       	ldi	r22, 0x01	; 1
    2696:	40 e0       	ldi	r20, 0x00	; 0
    2698:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    269c:	82 e0       	ldi	r24, 0x02	; 2
    269e:	62 e0       	ldi	r22, 0x02	; 2
    26a0:	40 e0       	ldi	r20, 0x00	; 0
    26a2:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_HIGH) ;
    26a6:	82 e0       	ldi	r24, 0x02	; 2
    26a8:	63 e0       	ldi	r22, 0x03	; 3
    26aa:	41 e0       	ldi	r20, 0x01	; 1
    26ac:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    26b0:	80 e0       	ldi	r24, 0x00	; 0
    26b2:	90 e0       	ldi	r25, 0x00	; 0
    26b4:	a0 e4       	ldi	r26, 0x40	; 64
    26b6:	b0 e4       	ldi	r27, 0x40	; 64
    26b8:	8d ab       	std	Y+53, r24	; 0x35
    26ba:	9e ab       	std	Y+54, r25	; 0x36
    26bc:	af ab       	std	Y+55, r26	; 0x37
    26be:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26c0:	6d a9       	ldd	r22, Y+53	; 0x35
    26c2:	7e a9       	ldd	r23, Y+54	; 0x36
    26c4:	8f a9       	ldd	r24, Y+55	; 0x37
    26c6:	98 ad       	ldd	r25, Y+56	; 0x38
    26c8:	20 e0       	ldi	r18, 0x00	; 0
    26ca:	30 e0       	ldi	r19, 0x00	; 0
    26cc:	4a ef       	ldi	r20, 0xFA	; 250
    26ce:	54 e4       	ldi	r21, 0x44	; 68
    26d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26d4:	dc 01       	movw	r26, r24
    26d6:	cb 01       	movw	r24, r22
    26d8:	89 ab       	std	Y+49, r24	; 0x31
    26da:	9a ab       	std	Y+50, r25	; 0x32
    26dc:	ab ab       	std	Y+51, r26	; 0x33
    26de:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    26e0:	69 a9       	ldd	r22, Y+49	; 0x31
    26e2:	7a a9       	ldd	r23, Y+50	; 0x32
    26e4:	8b a9       	ldd	r24, Y+51	; 0x33
    26e6:	9c a9       	ldd	r25, Y+52	; 0x34
    26e8:	20 e0       	ldi	r18, 0x00	; 0
    26ea:	30 e0       	ldi	r19, 0x00	; 0
    26ec:	40 e8       	ldi	r20, 0x80	; 128
    26ee:	5f e3       	ldi	r21, 0x3F	; 63
    26f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26f4:	88 23       	and	r24, r24
    26f6:	2c f4       	brge	.+10     	; 0x2702 <STEPPER_voidRunAnticlockw+0x8e>
		__ticks = 1;
    26f8:	81 e0       	ldi	r24, 0x01	; 1
    26fa:	90 e0       	ldi	r25, 0x00	; 0
    26fc:	98 ab       	std	Y+48, r25	; 0x30
    26fe:	8f a7       	std	Y+47, r24	; 0x2f
    2700:	3f c0       	rjmp	.+126    	; 0x2780 <STEPPER_voidRunAnticlockw+0x10c>
	else if (__tmp > 65535)
    2702:	69 a9       	ldd	r22, Y+49	; 0x31
    2704:	7a a9       	ldd	r23, Y+50	; 0x32
    2706:	8b a9       	ldd	r24, Y+51	; 0x33
    2708:	9c a9       	ldd	r25, Y+52	; 0x34
    270a:	20 e0       	ldi	r18, 0x00	; 0
    270c:	3f ef       	ldi	r19, 0xFF	; 255
    270e:	4f e7       	ldi	r20, 0x7F	; 127
    2710:	57 e4       	ldi	r21, 0x47	; 71
    2712:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2716:	18 16       	cp	r1, r24
    2718:	4c f5       	brge	.+82     	; 0x276c <STEPPER_voidRunAnticlockw+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    271a:	6d a9       	ldd	r22, Y+53	; 0x35
    271c:	7e a9       	ldd	r23, Y+54	; 0x36
    271e:	8f a9       	ldd	r24, Y+55	; 0x37
    2720:	98 ad       	ldd	r25, Y+56	; 0x38
    2722:	20 e0       	ldi	r18, 0x00	; 0
    2724:	30 e0       	ldi	r19, 0x00	; 0
    2726:	40 e2       	ldi	r20, 0x20	; 32
    2728:	51 e4       	ldi	r21, 0x41	; 65
    272a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    272e:	dc 01       	movw	r26, r24
    2730:	cb 01       	movw	r24, r22
    2732:	bc 01       	movw	r22, r24
    2734:	cd 01       	movw	r24, r26
    2736:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    273a:	dc 01       	movw	r26, r24
    273c:	cb 01       	movw	r24, r22
    273e:	98 ab       	std	Y+48, r25	; 0x30
    2740:	8f a7       	std	Y+47, r24	; 0x2f
    2742:	0f c0       	rjmp	.+30     	; 0x2762 <STEPPER_voidRunAnticlockw+0xee>
    2744:	88 ec       	ldi	r24, 0xC8	; 200
    2746:	90 e0       	ldi	r25, 0x00	; 0
    2748:	9e a7       	std	Y+46, r25	; 0x2e
    274a:	8d a7       	std	Y+45, r24	; 0x2d
    274c:	8d a5       	ldd	r24, Y+45	; 0x2d
    274e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2750:	01 97       	sbiw	r24, 0x01	; 1
    2752:	f1 f7       	brne	.-4      	; 0x2750 <STEPPER_voidRunAnticlockw+0xdc>
    2754:	9e a7       	std	Y+46, r25	; 0x2e
    2756:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2758:	8f a5       	ldd	r24, Y+47	; 0x2f
    275a:	98 a9       	ldd	r25, Y+48	; 0x30
    275c:	01 97       	sbiw	r24, 0x01	; 1
    275e:	98 ab       	std	Y+48, r25	; 0x30
    2760:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2762:	8f a5       	ldd	r24, Y+47	; 0x2f
    2764:	98 a9       	ldd	r25, Y+48	; 0x30
    2766:	00 97       	sbiw	r24, 0x00	; 0
    2768:	69 f7       	brne	.-38     	; 0x2744 <STEPPER_voidRunAnticlockw+0xd0>
    276a:	14 c0       	rjmp	.+40     	; 0x2794 <STEPPER_voidRunAnticlockw+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    276c:	69 a9       	ldd	r22, Y+49	; 0x31
    276e:	7a a9       	ldd	r23, Y+50	; 0x32
    2770:	8b a9       	ldd	r24, Y+51	; 0x33
    2772:	9c a9       	ldd	r25, Y+52	; 0x34
    2774:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2778:	dc 01       	movw	r26, r24
    277a:	cb 01       	movw	r24, r22
    277c:	98 ab       	std	Y+48, r25	; 0x30
    277e:	8f a7       	std	Y+47, r24	; 0x2f
    2780:	8f a5       	ldd	r24, Y+47	; 0x2f
    2782:	98 a9       	ldd	r25, Y+48	; 0x30
    2784:	9c a7       	std	Y+44, r25	; 0x2c
    2786:	8b a7       	std	Y+43, r24	; 0x2b
    2788:	8b a5       	ldd	r24, Y+43	; 0x2b
    278a:	9c a5       	ldd	r25, Y+44	; 0x2c
    278c:	01 97       	sbiw	r24, 0x01	; 1
    278e:	f1 f7       	brne	.-4      	; 0x278c <STEPPER_voidRunAnticlockw+0x118>
    2790:	9c a7       	std	Y+44, r25	; 0x2c
    2792:	8b a7       	std	Y+43, r24	; 0x2b

						_delay_ms(3) ;

						DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_HIGH) ;
    2794:	82 e0       	ldi	r24, 0x02	; 2
    2796:	60 e0       	ldi	r22, 0x00	; 0
    2798:	41 e0       	ldi	r20, 0x01	; 1
    279a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    279e:	82 e0       	ldi	r24, 0x02	; 2
    27a0:	61 e0       	ldi	r22, 0x01	; 1
    27a2:	40 e0       	ldi	r20, 0x00	; 0
    27a4:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    27a8:	82 e0       	ldi	r24, 0x02	; 2
    27aa:	62 e0       	ldi	r22, 0x02	; 2
    27ac:	40 e0       	ldi	r20, 0x00	; 0
    27ae:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    27b2:	82 e0       	ldi	r24, 0x02	; 2
    27b4:	63 e0       	ldi	r22, 0x03	; 3
    27b6:	40 e0       	ldi	r20, 0x00	; 0
    27b8:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	90 e0       	ldi	r25, 0x00	; 0
    27c0:	a0 e4       	ldi	r26, 0x40	; 64
    27c2:	b0 e4       	ldi	r27, 0x40	; 64
    27c4:	8f a3       	std	Y+39, r24	; 0x27
    27c6:	98 a7       	std	Y+40, r25	; 0x28
    27c8:	a9 a7       	std	Y+41, r26	; 0x29
    27ca:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27cc:	6f a1       	ldd	r22, Y+39	; 0x27
    27ce:	78 a5       	ldd	r23, Y+40	; 0x28
    27d0:	89 a5       	ldd	r24, Y+41	; 0x29
    27d2:	9a a5       	ldd	r25, Y+42	; 0x2a
    27d4:	20 e0       	ldi	r18, 0x00	; 0
    27d6:	30 e0       	ldi	r19, 0x00	; 0
    27d8:	4a ef       	ldi	r20, 0xFA	; 250
    27da:	54 e4       	ldi	r21, 0x44	; 68
    27dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27e0:	dc 01       	movw	r26, r24
    27e2:	cb 01       	movw	r24, r22
    27e4:	8b a3       	std	Y+35, r24	; 0x23
    27e6:	9c a3       	std	Y+36, r25	; 0x24
    27e8:	ad a3       	std	Y+37, r26	; 0x25
    27ea:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    27ec:	6b a1       	ldd	r22, Y+35	; 0x23
    27ee:	7c a1       	ldd	r23, Y+36	; 0x24
    27f0:	8d a1       	ldd	r24, Y+37	; 0x25
    27f2:	9e a1       	ldd	r25, Y+38	; 0x26
    27f4:	20 e0       	ldi	r18, 0x00	; 0
    27f6:	30 e0       	ldi	r19, 0x00	; 0
    27f8:	40 e8       	ldi	r20, 0x80	; 128
    27fa:	5f e3       	ldi	r21, 0x3F	; 63
    27fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2800:	88 23       	and	r24, r24
    2802:	2c f4       	brge	.+10     	; 0x280e <STEPPER_voidRunAnticlockw+0x19a>
		__ticks = 1;
    2804:	81 e0       	ldi	r24, 0x01	; 1
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	9a a3       	std	Y+34, r25	; 0x22
    280a:	89 a3       	std	Y+33, r24	; 0x21
    280c:	3f c0       	rjmp	.+126    	; 0x288c <STEPPER_voidRunAnticlockw+0x218>
	else if (__tmp > 65535)
    280e:	6b a1       	ldd	r22, Y+35	; 0x23
    2810:	7c a1       	ldd	r23, Y+36	; 0x24
    2812:	8d a1       	ldd	r24, Y+37	; 0x25
    2814:	9e a1       	ldd	r25, Y+38	; 0x26
    2816:	20 e0       	ldi	r18, 0x00	; 0
    2818:	3f ef       	ldi	r19, 0xFF	; 255
    281a:	4f e7       	ldi	r20, 0x7F	; 127
    281c:	57 e4       	ldi	r21, 0x47	; 71
    281e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2822:	18 16       	cp	r1, r24
    2824:	4c f5       	brge	.+82     	; 0x2878 <STEPPER_voidRunAnticlockw+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2826:	6f a1       	ldd	r22, Y+39	; 0x27
    2828:	78 a5       	ldd	r23, Y+40	; 0x28
    282a:	89 a5       	ldd	r24, Y+41	; 0x29
    282c:	9a a5       	ldd	r25, Y+42	; 0x2a
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	30 e0       	ldi	r19, 0x00	; 0
    2832:	40 e2       	ldi	r20, 0x20	; 32
    2834:	51 e4       	ldi	r21, 0x41	; 65
    2836:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    283a:	dc 01       	movw	r26, r24
    283c:	cb 01       	movw	r24, r22
    283e:	bc 01       	movw	r22, r24
    2840:	cd 01       	movw	r24, r26
    2842:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2846:	dc 01       	movw	r26, r24
    2848:	cb 01       	movw	r24, r22
    284a:	9a a3       	std	Y+34, r25	; 0x22
    284c:	89 a3       	std	Y+33, r24	; 0x21
    284e:	0f c0       	rjmp	.+30     	; 0x286e <STEPPER_voidRunAnticlockw+0x1fa>
    2850:	88 ec       	ldi	r24, 0xC8	; 200
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	98 a3       	std	Y+32, r25	; 0x20
    2856:	8f 8f       	std	Y+31, r24	; 0x1f
    2858:	8f 8d       	ldd	r24, Y+31	; 0x1f
    285a:	98 a1       	ldd	r25, Y+32	; 0x20
    285c:	01 97       	sbiw	r24, 0x01	; 1
    285e:	f1 f7       	brne	.-4      	; 0x285c <STEPPER_voidRunAnticlockw+0x1e8>
    2860:	98 a3       	std	Y+32, r25	; 0x20
    2862:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2864:	89 a1       	ldd	r24, Y+33	; 0x21
    2866:	9a a1       	ldd	r25, Y+34	; 0x22
    2868:	01 97       	sbiw	r24, 0x01	; 1
    286a:	9a a3       	std	Y+34, r25	; 0x22
    286c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    286e:	89 a1       	ldd	r24, Y+33	; 0x21
    2870:	9a a1       	ldd	r25, Y+34	; 0x22
    2872:	00 97       	sbiw	r24, 0x00	; 0
    2874:	69 f7       	brne	.-38     	; 0x2850 <STEPPER_voidRunAnticlockw+0x1dc>
    2876:	14 c0       	rjmp	.+40     	; 0x28a0 <STEPPER_voidRunAnticlockw+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2878:	6b a1       	ldd	r22, Y+35	; 0x23
    287a:	7c a1       	ldd	r23, Y+36	; 0x24
    287c:	8d a1       	ldd	r24, Y+37	; 0x25
    287e:	9e a1       	ldd	r25, Y+38	; 0x26
    2880:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2884:	dc 01       	movw	r26, r24
    2886:	cb 01       	movw	r24, r22
    2888:	9a a3       	std	Y+34, r25	; 0x22
    288a:	89 a3       	std	Y+33, r24	; 0x21
    288c:	89 a1       	ldd	r24, Y+33	; 0x21
    288e:	9a a1       	ldd	r25, Y+34	; 0x22
    2890:	9e 8f       	std	Y+30, r25	; 0x1e
    2892:	8d 8f       	std	Y+29, r24	; 0x1d
    2894:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2896:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2898:	01 97       	sbiw	r24, 0x01	; 1
    289a:	f1 f7       	brne	.-4      	; 0x2898 <STEPPER_voidRunAnticlockw+0x224>
    289c:	9e 8f       	std	Y+30, r25	; 0x1e
    289e:	8d 8f       	std	Y+29, r24	; 0x1d

						_delay_ms(3) ;
						DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    28a0:	82 e0       	ldi	r24, 0x02	; 2
    28a2:	60 e0       	ldi	r22, 0x00	; 0
    28a4:	40 e0       	ldi	r20, 0x00	; 0
    28a6:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_HIGH) ;
    28aa:	82 e0       	ldi	r24, 0x02	; 2
    28ac:	61 e0       	ldi	r22, 0x01	; 1
    28ae:	41 e0       	ldi	r20, 0x01	; 1
    28b0:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
						DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_LOW) ;
    28b4:	82 e0       	ldi	r24, 0x02	; 2
    28b6:	62 e0       	ldi	r22, 0x02	; 2
    28b8:	40 e0       	ldi	r20, 0x00	; 0
    28ba:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
				        DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    28be:	82 e0       	ldi	r24, 0x02	; 2
    28c0:	63 e0       	ldi	r22, 0x03	; 3
    28c2:	40 e0       	ldi	r20, 0x00	; 0
    28c4:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    28c8:	80 e0       	ldi	r24, 0x00	; 0
    28ca:	90 e0       	ldi	r25, 0x00	; 0
    28cc:	a0 e4       	ldi	r26, 0x40	; 64
    28ce:	b0 e4       	ldi	r27, 0x40	; 64
    28d0:	89 8f       	std	Y+25, r24	; 0x19
    28d2:	9a 8f       	std	Y+26, r25	; 0x1a
    28d4:	ab 8f       	std	Y+27, r26	; 0x1b
    28d6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28d8:	69 8d       	ldd	r22, Y+25	; 0x19
    28da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    28dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    28de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    28e0:	20 e0       	ldi	r18, 0x00	; 0
    28e2:	30 e0       	ldi	r19, 0x00	; 0
    28e4:	4a ef       	ldi	r20, 0xFA	; 250
    28e6:	54 e4       	ldi	r21, 0x44	; 68
    28e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28ec:	dc 01       	movw	r26, r24
    28ee:	cb 01       	movw	r24, r22
    28f0:	8d 8b       	std	Y+21, r24	; 0x15
    28f2:	9e 8b       	std	Y+22, r25	; 0x16
    28f4:	af 8b       	std	Y+23, r26	; 0x17
    28f6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    28f8:	6d 89       	ldd	r22, Y+21	; 0x15
    28fa:	7e 89       	ldd	r23, Y+22	; 0x16
    28fc:	8f 89       	ldd	r24, Y+23	; 0x17
    28fe:	98 8d       	ldd	r25, Y+24	; 0x18
    2900:	20 e0       	ldi	r18, 0x00	; 0
    2902:	30 e0       	ldi	r19, 0x00	; 0
    2904:	40 e8       	ldi	r20, 0x80	; 128
    2906:	5f e3       	ldi	r21, 0x3F	; 63
    2908:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    290c:	88 23       	and	r24, r24
    290e:	2c f4       	brge	.+10     	; 0x291a <STEPPER_voidRunAnticlockw+0x2a6>
		__ticks = 1;
    2910:	81 e0       	ldi	r24, 0x01	; 1
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	9c 8b       	std	Y+20, r25	; 0x14
    2916:	8b 8b       	std	Y+19, r24	; 0x13
    2918:	3f c0       	rjmp	.+126    	; 0x2998 <STEPPER_voidRunAnticlockw+0x324>
	else if (__tmp > 65535)
    291a:	6d 89       	ldd	r22, Y+21	; 0x15
    291c:	7e 89       	ldd	r23, Y+22	; 0x16
    291e:	8f 89       	ldd	r24, Y+23	; 0x17
    2920:	98 8d       	ldd	r25, Y+24	; 0x18
    2922:	20 e0       	ldi	r18, 0x00	; 0
    2924:	3f ef       	ldi	r19, 0xFF	; 255
    2926:	4f e7       	ldi	r20, 0x7F	; 127
    2928:	57 e4       	ldi	r21, 0x47	; 71
    292a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    292e:	18 16       	cp	r1, r24
    2930:	4c f5       	brge	.+82     	; 0x2984 <STEPPER_voidRunAnticlockw+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2932:	69 8d       	ldd	r22, Y+25	; 0x19
    2934:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2936:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2938:	9c 8d       	ldd	r25, Y+28	; 0x1c
    293a:	20 e0       	ldi	r18, 0x00	; 0
    293c:	30 e0       	ldi	r19, 0x00	; 0
    293e:	40 e2       	ldi	r20, 0x20	; 32
    2940:	51 e4       	ldi	r21, 0x41	; 65
    2942:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2946:	dc 01       	movw	r26, r24
    2948:	cb 01       	movw	r24, r22
    294a:	bc 01       	movw	r22, r24
    294c:	cd 01       	movw	r24, r26
    294e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2952:	dc 01       	movw	r26, r24
    2954:	cb 01       	movw	r24, r22
    2956:	9c 8b       	std	Y+20, r25	; 0x14
    2958:	8b 8b       	std	Y+19, r24	; 0x13
    295a:	0f c0       	rjmp	.+30     	; 0x297a <STEPPER_voidRunAnticlockw+0x306>
    295c:	88 ec       	ldi	r24, 0xC8	; 200
    295e:	90 e0       	ldi	r25, 0x00	; 0
    2960:	9a 8b       	std	Y+18, r25	; 0x12
    2962:	89 8b       	std	Y+17, r24	; 0x11
    2964:	89 89       	ldd	r24, Y+17	; 0x11
    2966:	9a 89       	ldd	r25, Y+18	; 0x12
    2968:	01 97       	sbiw	r24, 0x01	; 1
    296a:	f1 f7       	brne	.-4      	; 0x2968 <STEPPER_voidRunAnticlockw+0x2f4>
    296c:	9a 8b       	std	Y+18, r25	; 0x12
    296e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2970:	8b 89       	ldd	r24, Y+19	; 0x13
    2972:	9c 89       	ldd	r25, Y+20	; 0x14
    2974:	01 97       	sbiw	r24, 0x01	; 1
    2976:	9c 8b       	std	Y+20, r25	; 0x14
    2978:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    297a:	8b 89       	ldd	r24, Y+19	; 0x13
    297c:	9c 89       	ldd	r25, Y+20	; 0x14
    297e:	00 97       	sbiw	r24, 0x00	; 0
    2980:	69 f7       	brne	.-38     	; 0x295c <STEPPER_voidRunAnticlockw+0x2e8>
    2982:	14 c0       	rjmp	.+40     	; 0x29ac <STEPPER_voidRunAnticlockw+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2984:	6d 89       	ldd	r22, Y+21	; 0x15
    2986:	7e 89       	ldd	r23, Y+22	; 0x16
    2988:	8f 89       	ldd	r24, Y+23	; 0x17
    298a:	98 8d       	ldd	r25, Y+24	; 0x18
    298c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2990:	dc 01       	movw	r26, r24
    2992:	cb 01       	movw	r24, r22
    2994:	9c 8b       	std	Y+20, r25	; 0x14
    2996:	8b 8b       	std	Y+19, r24	; 0x13
    2998:	8b 89       	ldd	r24, Y+19	; 0x13
    299a:	9c 89       	ldd	r25, Y+20	; 0x14
    299c:	98 8b       	std	Y+16, r25	; 0x10
    299e:	8f 87       	std	Y+15, r24	; 0x0f
    29a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    29a2:	98 89       	ldd	r25, Y+16	; 0x10
    29a4:	01 97       	sbiw	r24, 0x01	; 1
    29a6:	f1 f7       	brne	.-4      	; 0x29a4 <STEPPER_voidRunAnticlockw+0x330>
    29a8:	98 8b       	std	Y+16, r25	; 0x10
    29aa:	8f 87       	std	Y+15, r24	; 0x0f

						_delay_ms(3) ;
						DIO_u8SetPinValue(STEPPER_PORT , 0 , DIO_PIN_LOW) ;
    29ac:	82 e0       	ldi	r24, 0x02	; 2
    29ae:	60 e0       	ldi	r22, 0x00	; 0
    29b0:	40 e0       	ldi	r20, 0x00	; 0
    29b2:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
												DIO_u8SetPinValue(STEPPER_PORT , 1 , DIO_PIN_LOW) ;
    29b6:	82 e0       	ldi	r24, 0x02	; 2
    29b8:	61 e0       	ldi	r22, 0x01	; 1
    29ba:	40 e0       	ldi	r20, 0x00	; 0
    29bc:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
												DIO_u8SetPinValue(STEPPER_PORT , 2 , DIO_PIN_HIGH) ;
    29c0:	82 e0       	ldi	r24, 0x02	; 2
    29c2:	62 e0       	ldi	r22, 0x02	; 2
    29c4:	41 e0       	ldi	r20, 0x01	; 1
    29c6:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
												DIO_u8SetPinValue(STEPPER_PORT , 3 , DIO_PIN_LOW) ;
    29ca:	82 e0       	ldi	r24, 0x02	; 2
    29cc:	63 e0       	ldi	r22, 0x03	; 3
    29ce:	40 e0       	ldi	r20, 0x00	; 0
    29d0:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>
    29d4:	80 e0       	ldi	r24, 0x00	; 0
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	a0 e4       	ldi	r26, 0x40	; 64
    29da:	b0 e4       	ldi	r27, 0x40	; 64
    29dc:	8b 87       	std	Y+11, r24	; 0x0b
    29de:	9c 87       	std	Y+12, r25	; 0x0c
    29e0:	ad 87       	std	Y+13, r26	; 0x0d
    29e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    29e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    29e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    29ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    29ec:	20 e0       	ldi	r18, 0x00	; 0
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	4a ef       	ldi	r20, 0xFA	; 250
    29f2:	54 e4       	ldi	r21, 0x44	; 68
    29f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29f8:	dc 01       	movw	r26, r24
    29fa:	cb 01       	movw	r24, r22
    29fc:	8f 83       	std	Y+7, r24	; 0x07
    29fe:	98 87       	std	Y+8, r25	; 0x08
    2a00:	a9 87       	std	Y+9, r26	; 0x09
    2a02:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2a04:	6f 81       	ldd	r22, Y+7	; 0x07
    2a06:	78 85       	ldd	r23, Y+8	; 0x08
    2a08:	89 85       	ldd	r24, Y+9	; 0x09
    2a0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a0c:	20 e0       	ldi	r18, 0x00	; 0
    2a0e:	30 e0       	ldi	r19, 0x00	; 0
    2a10:	40 e8       	ldi	r20, 0x80	; 128
    2a12:	5f e3       	ldi	r21, 0x3F	; 63
    2a14:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a18:	88 23       	and	r24, r24
    2a1a:	2c f4       	brge	.+10     	; 0x2a26 <STEPPER_voidRunAnticlockw+0x3b2>
		__ticks = 1;
    2a1c:	81 e0       	ldi	r24, 0x01	; 1
    2a1e:	90 e0       	ldi	r25, 0x00	; 0
    2a20:	9e 83       	std	Y+6, r25	; 0x06
    2a22:	8d 83       	std	Y+5, r24	; 0x05
    2a24:	3f c0       	rjmp	.+126    	; 0x2aa4 <STEPPER_voidRunAnticlockw+0x430>
	else if (__tmp > 65535)
    2a26:	6f 81       	ldd	r22, Y+7	; 0x07
    2a28:	78 85       	ldd	r23, Y+8	; 0x08
    2a2a:	89 85       	ldd	r24, Y+9	; 0x09
    2a2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a2e:	20 e0       	ldi	r18, 0x00	; 0
    2a30:	3f ef       	ldi	r19, 0xFF	; 255
    2a32:	4f e7       	ldi	r20, 0x7F	; 127
    2a34:	57 e4       	ldi	r21, 0x47	; 71
    2a36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a3a:	18 16       	cp	r1, r24
    2a3c:	4c f5       	brge	.+82     	; 0x2a90 <STEPPER_voidRunAnticlockw+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a40:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a42:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a44:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a46:	20 e0       	ldi	r18, 0x00	; 0
    2a48:	30 e0       	ldi	r19, 0x00	; 0
    2a4a:	40 e2       	ldi	r20, 0x20	; 32
    2a4c:	51 e4       	ldi	r21, 0x41	; 65
    2a4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a52:	dc 01       	movw	r26, r24
    2a54:	cb 01       	movw	r24, r22
    2a56:	bc 01       	movw	r22, r24
    2a58:	cd 01       	movw	r24, r26
    2a5a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a5e:	dc 01       	movw	r26, r24
    2a60:	cb 01       	movw	r24, r22
    2a62:	9e 83       	std	Y+6, r25	; 0x06
    2a64:	8d 83       	std	Y+5, r24	; 0x05
    2a66:	0f c0       	rjmp	.+30     	; 0x2a86 <STEPPER_voidRunAnticlockw+0x412>
    2a68:	88 ec       	ldi	r24, 0xC8	; 200
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	9c 83       	std	Y+4, r25	; 0x04
    2a6e:	8b 83       	std	Y+3, r24	; 0x03
    2a70:	8b 81       	ldd	r24, Y+3	; 0x03
    2a72:	9c 81       	ldd	r25, Y+4	; 0x04
    2a74:	01 97       	sbiw	r24, 0x01	; 1
    2a76:	f1 f7       	brne	.-4      	; 0x2a74 <STEPPER_voidRunAnticlockw+0x400>
    2a78:	9c 83       	std	Y+4, r25	; 0x04
    2a7a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a7c:	8d 81       	ldd	r24, Y+5	; 0x05
    2a7e:	9e 81       	ldd	r25, Y+6	; 0x06
    2a80:	01 97       	sbiw	r24, 0x01	; 1
    2a82:	9e 83       	std	Y+6, r25	; 0x06
    2a84:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a86:	8d 81       	ldd	r24, Y+5	; 0x05
    2a88:	9e 81       	ldd	r25, Y+6	; 0x06
    2a8a:	00 97       	sbiw	r24, 0x00	; 0
    2a8c:	69 f7       	brne	.-38     	; 0x2a68 <STEPPER_voidRunAnticlockw+0x3f4>
    2a8e:	14 c0       	rjmp	.+40     	; 0x2ab8 <STEPPER_voidRunAnticlockw+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a90:	6f 81       	ldd	r22, Y+7	; 0x07
    2a92:	78 85       	ldd	r23, Y+8	; 0x08
    2a94:	89 85       	ldd	r24, Y+9	; 0x09
    2a96:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a9c:	dc 01       	movw	r26, r24
    2a9e:	cb 01       	movw	r24, r22
    2aa0:	9e 83       	std	Y+6, r25	; 0x06
    2aa2:	8d 83       	std	Y+5, r24	; 0x05
    2aa4:	8d 81       	ldd	r24, Y+5	; 0x05
    2aa6:	9e 81       	ldd	r25, Y+6	; 0x06
    2aa8:	9a 83       	std	Y+2, r25	; 0x02
    2aaa:	89 83       	std	Y+1, r24	; 0x01
    2aac:	89 81       	ldd	r24, Y+1	; 0x01
    2aae:	9a 81       	ldd	r25, Y+2	; 0x02
    2ab0:	01 97       	sbiw	r24, 0x01	; 1
    2ab2:	f1 f7       	brne	.-4      	; 0x2ab0 <STEPPER_voidRunAnticlockw+0x43c>
    2ab4:	9a 83       	std	Y+2, r25	; 0x02
    2ab6:	89 83       	std	Y+1, r24	; 0x01

												_delay_ms(3) ;


}
    2ab8:	e8 96       	adiw	r28, 0x38	; 56
    2aba:	0f b6       	in	r0, 0x3f	; 63
    2abc:	f8 94       	cli
    2abe:	de bf       	out	0x3e, r29	; 62
    2ac0:	0f be       	out	0x3f, r0	; 63
    2ac2:	cd bf       	out	0x3d, r28	; 61
    2ac4:	cf 91       	pop	r28
    2ac6:	df 91       	pop	r29
    2ac8:	08 95       	ret

00002aca <main>:

#include"STEPPER_int.h"


int main(void)
{
    2aca:	0f 93       	push	r16
    2acc:	1f 93       	push	r17
    2ace:	df 93       	push	r29
    2ad0:	cf 93       	push	r28
    2ad2:	cd b7       	in	r28, 0x3d	; 61
    2ad4:	de b7       	in	r29, 0x3e	; 62
    2ad6:	c6 5c       	subi	r28, 0xC6	; 198
    2ad8:	d1 40       	sbci	r29, 0x01	; 1
    2ada:	0f b6       	in	r0, 0x3f	; 63
    2adc:	f8 94       	cli
    2ade:	de bf       	out	0x3e, r29	; 62
    2ae0:	0f be       	out	0x3f, r0	; 63
    2ae2:	cd bf       	out	0x3d, r28	; 61
	u8 x = 0;
    2ae4:	fe 01       	movw	r30, r28
    2ae6:	e7 53       	subi	r30, 0x37	; 55
    2ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aea:	10 82       	st	Z, r1

	u8 chary = 0;
    2aec:	fe 01       	movw	r30, r28
    2aee:	e6 53       	subi	r30, 0x36	; 54
    2af0:	ff 4f       	sbci	r31, 0xFF	; 255
    2af2:	10 82       	st	Z, r1

	u8 chary1 = 0 ;
    2af4:	fe 01       	movw	r30, r28
    2af6:	e5 53       	subi	r30, 0x35	; 53
    2af8:	ff 4f       	sbci	r31, 0xFF	; 255
    2afa:	10 82       	st	Z, r1

	u8 counter = 0 ;
    2afc:	fe 01       	movw	r30, r28
    2afe:	e8 53       	subi	r30, 0x38	; 56
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	10 82       	st	Z, r1

	u8 counter1 = 0 ;
    2b04:	fe 01       	movw	r30, r28
    2b06:	e9 53       	subi	r30, 0x39	; 57
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	10 82       	st	Z, r1

	u8 counter3 = 0 ;
    2b0c:	fe 01       	movw	r30, r28
    2b0e:	ea 53       	subi	r30, 0x3A	; 58
    2b10:	ff 4f       	sbci	r31, 0xFF	; 255
    2b12:	10 82       	st	Z, r1

	u8 counter4 = 0 ;
    2b14:	fe 01       	movw	r30, r28
    2b16:	eb 53       	subi	r30, 0x3B	; 59
    2b18:	ff 4f       	sbci	r31, 0xFF	; 255
    2b1a:	10 82       	st	Z, r1

	u8 mes1[] = "Motor Dashboard" ;
    2b1c:	ce 01       	movw	r24, r28
    2b1e:	84 53       	subi	r24, 0x34	; 52
    2b20:	9f 4f       	sbci	r25, 0xFF	; 255
    2b22:	c4 58       	subi	r28, 0x84	; 132
    2b24:	de 4f       	sbci	r29, 0xFE	; 254
    2b26:	99 83       	std	Y+1, r25	; 0x01
    2b28:	88 83       	st	Y, r24
    2b2a:	cc 57       	subi	r28, 0x7C	; 124
    2b2c:	d1 40       	sbci	r29, 0x01	; 1
    2b2e:	80 e6       	ldi	r24, 0x60	; 96
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	c2 58       	subi	r28, 0x82	; 130
    2b34:	de 4f       	sbci	r29, 0xFE	; 254
    2b36:	99 83       	std	Y+1, r25	; 0x01
    2b38:	88 83       	st	Y, r24
    2b3a:	ce 57       	subi	r28, 0x7E	; 126
    2b3c:	d1 40       	sbci	r29, 0x01	; 1
    2b3e:	90 e1       	ldi	r25, 0x10	; 16
    2b40:	c0 58       	subi	r28, 0x80	; 128
    2b42:	de 4f       	sbci	r29, 0xFE	; 254
    2b44:	98 83       	st	Y, r25
    2b46:	c0 58       	subi	r28, 0x80	; 128
    2b48:	d1 40       	sbci	r29, 0x01	; 1
    2b4a:	c2 58       	subi	r28, 0x82	; 130
    2b4c:	de 4f       	sbci	r29, 0xFE	; 254
    2b4e:	e8 81       	ld	r30, Y
    2b50:	f9 81       	ldd	r31, Y+1	; 0x01
    2b52:	ce 57       	subi	r28, 0x7E	; 126
    2b54:	d1 40       	sbci	r29, 0x01	; 1
    2b56:	00 80       	ld	r0, Z
    2b58:	c2 58       	subi	r28, 0x82	; 130
    2b5a:	de 4f       	sbci	r29, 0xFE	; 254
    2b5c:	88 81       	ld	r24, Y
    2b5e:	99 81       	ldd	r25, Y+1	; 0x01
    2b60:	ce 57       	subi	r28, 0x7E	; 126
    2b62:	d1 40       	sbci	r29, 0x01	; 1
    2b64:	01 96       	adiw	r24, 0x01	; 1
    2b66:	c2 58       	subi	r28, 0x82	; 130
    2b68:	de 4f       	sbci	r29, 0xFE	; 254
    2b6a:	99 83       	std	Y+1, r25	; 0x01
    2b6c:	88 83       	st	Y, r24
    2b6e:	ce 57       	subi	r28, 0x7E	; 126
    2b70:	d1 40       	sbci	r29, 0x01	; 1
    2b72:	c4 58       	subi	r28, 0x84	; 132
    2b74:	de 4f       	sbci	r29, 0xFE	; 254
    2b76:	e8 81       	ld	r30, Y
    2b78:	f9 81       	ldd	r31, Y+1	; 0x01
    2b7a:	cc 57       	subi	r28, 0x7C	; 124
    2b7c:	d1 40       	sbci	r29, 0x01	; 1
    2b7e:	00 82       	st	Z, r0
    2b80:	c4 58       	subi	r28, 0x84	; 132
    2b82:	de 4f       	sbci	r29, 0xFE	; 254
    2b84:	88 81       	ld	r24, Y
    2b86:	99 81       	ldd	r25, Y+1	; 0x01
    2b88:	cc 57       	subi	r28, 0x7C	; 124
    2b8a:	d1 40       	sbci	r29, 0x01	; 1
    2b8c:	01 96       	adiw	r24, 0x01	; 1
    2b8e:	c4 58       	subi	r28, 0x84	; 132
    2b90:	de 4f       	sbci	r29, 0xFE	; 254
    2b92:	99 83       	std	Y+1, r25	; 0x01
    2b94:	88 83       	st	Y, r24
    2b96:	cc 57       	subi	r28, 0x7C	; 124
    2b98:	d1 40       	sbci	r29, 0x01	; 1
    2b9a:	c0 58       	subi	r28, 0x80	; 128
    2b9c:	de 4f       	sbci	r29, 0xFE	; 254
    2b9e:	98 81       	ld	r25, Y
    2ba0:	c0 58       	subi	r28, 0x80	; 128
    2ba2:	d1 40       	sbci	r29, 0x01	; 1
    2ba4:	91 50       	subi	r25, 0x01	; 1
    2ba6:	c0 58       	subi	r28, 0x80	; 128
    2ba8:	de 4f       	sbci	r29, 0xFE	; 254
    2baa:	98 83       	st	Y, r25
    2bac:	c0 58       	subi	r28, 0x80	; 128
    2bae:	d1 40       	sbci	r29, 0x01	; 1
    2bb0:	c0 58       	subi	r28, 0x80	; 128
    2bb2:	de 4f       	sbci	r29, 0xFE	; 254
    2bb4:	e8 81       	ld	r30, Y
    2bb6:	c0 58       	subi	r28, 0x80	; 128
    2bb8:	d1 40       	sbci	r29, 0x01	; 1
    2bba:	ee 23       	and	r30, r30
    2bbc:	31 f6       	brne	.-116    	; 0x2b4a <main+0x80>

	u8 mes2[] = "1- Stepper Motor" ;
    2bbe:	ce 01       	movw	r24, r28
    2bc0:	84 52       	subi	r24, 0x24	; 36
    2bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    2bc4:	cf 57       	subi	r28, 0x7F	; 127
    2bc6:	de 4f       	sbci	r29, 0xFE	; 254
    2bc8:	99 83       	std	Y+1, r25	; 0x01
    2bca:	88 83       	st	Y, r24
    2bcc:	c1 58       	subi	r28, 0x81	; 129
    2bce:	d1 40       	sbci	r29, 0x01	; 1
    2bd0:	80 e7       	ldi	r24, 0x70	; 112
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	cd 57       	subi	r28, 0x7D	; 125
    2bd6:	de 4f       	sbci	r29, 0xFE	; 254
    2bd8:	99 83       	std	Y+1, r25	; 0x01
    2bda:	88 83       	st	Y, r24
    2bdc:	c3 58       	subi	r28, 0x83	; 131
    2bde:	d1 40       	sbci	r29, 0x01	; 1
    2be0:	91 e1       	ldi	r25, 0x11	; 17
    2be2:	cb 57       	subi	r28, 0x7B	; 123
    2be4:	de 4f       	sbci	r29, 0xFE	; 254
    2be6:	98 83       	st	Y, r25
    2be8:	c5 58       	subi	r28, 0x85	; 133
    2bea:	d1 40       	sbci	r29, 0x01	; 1
    2bec:	cd 57       	subi	r28, 0x7D	; 125
    2bee:	de 4f       	sbci	r29, 0xFE	; 254
    2bf0:	e8 81       	ld	r30, Y
    2bf2:	f9 81       	ldd	r31, Y+1	; 0x01
    2bf4:	c3 58       	subi	r28, 0x83	; 131
    2bf6:	d1 40       	sbci	r29, 0x01	; 1
    2bf8:	00 80       	ld	r0, Z
    2bfa:	cd 57       	subi	r28, 0x7D	; 125
    2bfc:	de 4f       	sbci	r29, 0xFE	; 254
    2bfe:	88 81       	ld	r24, Y
    2c00:	99 81       	ldd	r25, Y+1	; 0x01
    2c02:	c3 58       	subi	r28, 0x83	; 131
    2c04:	d1 40       	sbci	r29, 0x01	; 1
    2c06:	01 96       	adiw	r24, 0x01	; 1
    2c08:	cd 57       	subi	r28, 0x7D	; 125
    2c0a:	de 4f       	sbci	r29, 0xFE	; 254
    2c0c:	99 83       	std	Y+1, r25	; 0x01
    2c0e:	88 83       	st	Y, r24
    2c10:	c3 58       	subi	r28, 0x83	; 131
    2c12:	d1 40       	sbci	r29, 0x01	; 1
    2c14:	cf 57       	subi	r28, 0x7F	; 127
    2c16:	de 4f       	sbci	r29, 0xFE	; 254
    2c18:	e8 81       	ld	r30, Y
    2c1a:	f9 81       	ldd	r31, Y+1	; 0x01
    2c1c:	c1 58       	subi	r28, 0x81	; 129
    2c1e:	d1 40       	sbci	r29, 0x01	; 1
    2c20:	00 82       	st	Z, r0
    2c22:	cf 57       	subi	r28, 0x7F	; 127
    2c24:	de 4f       	sbci	r29, 0xFE	; 254
    2c26:	88 81       	ld	r24, Y
    2c28:	99 81       	ldd	r25, Y+1	; 0x01
    2c2a:	c1 58       	subi	r28, 0x81	; 129
    2c2c:	d1 40       	sbci	r29, 0x01	; 1
    2c2e:	01 96       	adiw	r24, 0x01	; 1
    2c30:	cf 57       	subi	r28, 0x7F	; 127
    2c32:	de 4f       	sbci	r29, 0xFE	; 254
    2c34:	99 83       	std	Y+1, r25	; 0x01
    2c36:	88 83       	st	Y, r24
    2c38:	c1 58       	subi	r28, 0x81	; 129
    2c3a:	d1 40       	sbci	r29, 0x01	; 1
    2c3c:	cb 57       	subi	r28, 0x7B	; 123
    2c3e:	de 4f       	sbci	r29, 0xFE	; 254
    2c40:	98 81       	ld	r25, Y
    2c42:	c5 58       	subi	r28, 0x85	; 133
    2c44:	d1 40       	sbci	r29, 0x01	; 1
    2c46:	91 50       	subi	r25, 0x01	; 1
    2c48:	cb 57       	subi	r28, 0x7B	; 123
    2c4a:	de 4f       	sbci	r29, 0xFE	; 254
    2c4c:	98 83       	st	Y, r25
    2c4e:	c5 58       	subi	r28, 0x85	; 133
    2c50:	d1 40       	sbci	r29, 0x01	; 1
    2c52:	cb 57       	subi	r28, 0x7B	; 123
    2c54:	de 4f       	sbci	r29, 0xFE	; 254
    2c56:	e8 81       	ld	r30, Y
    2c58:	c5 58       	subi	r28, 0x85	; 133
    2c5a:	d1 40       	sbci	r29, 0x01	; 1
    2c5c:	ee 23       	and	r30, r30
    2c5e:	31 f6       	brne	.-116    	; 0x2bec <main+0x122>

	u8 mes3[] = "2- DC Motor" ;
    2c60:	ce 01       	movw	r24, r28
    2c62:	83 51       	subi	r24, 0x13	; 19
    2c64:	9f 4f       	sbci	r25, 0xFF	; 255
    2c66:	ca 57       	subi	r28, 0x7A	; 122
    2c68:	de 4f       	sbci	r29, 0xFE	; 254
    2c6a:	99 83       	std	Y+1, r25	; 0x01
    2c6c:	88 83       	st	Y, r24
    2c6e:	c6 58       	subi	r28, 0x86	; 134
    2c70:	d1 40       	sbci	r29, 0x01	; 1
    2c72:	81 e8       	ldi	r24, 0x81	; 129
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	c8 57       	subi	r28, 0x78	; 120
    2c78:	de 4f       	sbci	r29, 0xFE	; 254
    2c7a:	99 83       	std	Y+1, r25	; 0x01
    2c7c:	88 83       	st	Y, r24
    2c7e:	c8 58       	subi	r28, 0x88	; 136
    2c80:	d1 40       	sbci	r29, 0x01	; 1
    2c82:	9c e0       	ldi	r25, 0x0C	; 12
    2c84:	c6 57       	subi	r28, 0x76	; 118
    2c86:	de 4f       	sbci	r29, 0xFE	; 254
    2c88:	98 83       	st	Y, r25
    2c8a:	ca 58       	subi	r28, 0x8A	; 138
    2c8c:	d1 40       	sbci	r29, 0x01	; 1
    2c8e:	c8 57       	subi	r28, 0x78	; 120
    2c90:	de 4f       	sbci	r29, 0xFE	; 254
    2c92:	e8 81       	ld	r30, Y
    2c94:	f9 81       	ldd	r31, Y+1	; 0x01
    2c96:	c8 58       	subi	r28, 0x88	; 136
    2c98:	d1 40       	sbci	r29, 0x01	; 1
    2c9a:	00 80       	ld	r0, Z
    2c9c:	c8 57       	subi	r28, 0x78	; 120
    2c9e:	de 4f       	sbci	r29, 0xFE	; 254
    2ca0:	88 81       	ld	r24, Y
    2ca2:	99 81       	ldd	r25, Y+1	; 0x01
    2ca4:	c8 58       	subi	r28, 0x88	; 136
    2ca6:	d1 40       	sbci	r29, 0x01	; 1
    2ca8:	01 96       	adiw	r24, 0x01	; 1
    2caa:	c8 57       	subi	r28, 0x78	; 120
    2cac:	de 4f       	sbci	r29, 0xFE	; 254
    2cae:	99 83       	std	Y+1, r25	; 0x01
    2cb0:	88 83       	st	Y, r24
    2cb2:	c8 58       	subi	r28, 0x88	; 136
    2cb4:	d1 40       	sbci	r29, 0x01	; 1
    2cb6:	ca 57       	subi	r28, 0x7A	; 122
    2cb8:	de 4f       	sbci	r29, 0xFE	; 254
    2cba:	e8 81       	ld	r30, Y
    2cbc:	f9 81       	ldd	r31, Y+1	; 0x01
    2cbe:	c6 58       	subi	r28, 0x86	; 134
    2cc0:	d1 40       	sbci	r29, 0x01	; 1
    2cc2:	00 82       	st	Z, r0
    2cc4:	ca 57       	subi	r28, 0x7A	; 122
    2cc6:	de 4f       	sbci	r29, 0xFE	; 254
    2cc8:	88 81       	ld	r24, Y
    2cca:	99 81       	ldd	r25, Y+1	; 0x01
    2ccc:	c6 58       	subi	r28, 0x86	; 134
    2cce:	d1 40       	sbci	r29, 0x01	; 1
    2cd0:	01 96       	adiw	r24, 0x01	; 1
    2cd2:	ca 57       	subi	r28, 0x7A	; 122
    2cd4:	de 4f       	sbci	r29, 0xFE	; 254
    2cd6:	99 83       	std	Y+1, r25	; 0x01
    2cd8:	88 83       	st	Y, r24
    2cda:	c6 58       	subi	r28, 0x86	; 134
    2cdc:	d1 40       	sbci	r29, 0x01	; 1
    2cde:	c6 57       	subi	r28, 0x76	; 118
    2ce0:	de 4f       	sbci	r29, 0xFE	; 254
    2ce2:	98 81       	ld	r25, Y
    2ce4:	ca 58       	subi	r28, 0x8A	; 138
    2ce6:	d1 40       	sbci	r29, 0x01	; 1
    2ce8:	91 50       	subi	r25, 0x01	; 1
    2cea:	c6 57       	subi	r28, 0x76	; 118
    2cec:	de 4f       	sbci	r29, 0xFE	; 254
    2cee:	98 83       	st	Y, r25
    2cf0:	ca 58       	subi	r28, 0x8A	; 138
    2cf2:	d1 40       	sbci	r29, 0x01	; 1
    2cf4:	c6 57       	subi	r28, 0x76	; 118
    2cf6:	de 4f       	sbci	r29, 0xFE	; 254
    2cf8:	e8 81       	ld	r30, Y
    2cfa:	ca 58       	subi	r28, 0x8A	; 138
    2cfc:	d1 40       	sbci	r29, 0x01	; 1
    2cfe:	ee 23       	and	r30, r30
    2d00:	31 f6       	brne	.-116    	; 0x2c8e <main+0x1c4>

	u8 mes4[] = "1- Stepper CW" ;
    2d02:	ce 01       	movw	r24, r28
    2d04:	87 50       	subi	r24, 0x07	; 7
    2d06:	9f 4f       	sbci	r25, 0xFF	; 255
    2d08:	c5 57       	subi	r28, 0x75	; 117
    2d0a:	de 4f       	sbci	r29, 0xFE	; 254
    2d0c:	99 83       	std	Y+1, r25	; 0x01
    2d0e:	88 83       	st	Y, r24
    2d10:	cb 58       	subi	r28, 0x8B	; 139
    2d12:	d1 40       	sbci	r29, 0x01	; 1
    2d14:	8d e8       	ldi	r24, 0x8D	; 141
    2d16:	90 e0       	ldi	r25, 0x00	; 0
    2d18:	c3 57       	subi	r28, 0x73	; 115
    2d1a:	de 4f       	sbci	r29, 0xFE	; 254
    2d1c:	99 83       	std	Y+1, r25	; 0x01
    2d1e:	88 83       	st	Y, r24
    2d20:	cd 58       	subi	r28, 0x8D	; 141
    2d22:	d1 40       	sbci	r29, 0x01	; 1
    2d24:	9e e0       	ldi	r25, 0x0E	; 14
    2d26:	c1 57       	subi	r28, 0x71	; 113
    2d28:	de 4f       	sbci	r29, 0xFE	; 254
    2d2a:	98 83       	st	Y, r25
    2d2c:	cf 58       	subi	r28, 0x8F	; 143
    2d2e:	d1 40       	sbci	r29, 0x01	; 1
    2d30:	c3 57       	subi	r28, 0x73	; 115
    2d32:	de 4f       	sbci	r29, 0xFE	; 254
    2d34:	e8 81       	ld	r30, Y
    2d36:	f9 81       	ldd	r31, Y+1	; 0x01
    2d38:	cd 58       	subi	r28, 0x8D	; 141
    2d3a:	d1 40       	sbci	r29, 0x01	; 1
    2d3c:	00 80       	ld	r0, Z
    2d3e:	c3 57       	subi	r28, 0x73	; 115
    2d40:	de 4f       	sbci	r29, 0xFE	; 254
    2d42:	88 81       	ld	r24, Y
    2d44:	99 81       	ldd	r25, Y+1	; 0x01
    2d46:	cd 58       	subi	r28, 0x8D	; 141
    2d48:	d1 40       	sbci	r29, 0x01	; 1
    2d4a:	01 96       	adiw	r24, 0x01	; 1
    2d4c:	c3 57       	subi	r28, 0x73	; 115
    2d4e:	de 4f       	sbci	r29, 0xFE	; 254
    2d50:	99 83       	std	Y+1, r25	; 0x01
    2d52:	88 83       	st	Y, r24
    2d54:	cd 58       	subi	r28, 0x8D	; 141
    2d56:	d1 40       	sbci	r29, 0x01	; 1
    2d58:	c5 57       	subi	r28, 0x75	; 117
    2d5a:	de 4f       	sbci	r29, 0xFE	; 254
    2d5c:	e8 81       	ld	r30, Y
    2d5e:	f9 81       	ldd	r31, Y+1	; 0x01
    2d60:	cb 58       	subi	r28, 0x8B	; 139
    2d62:	d1 40       	sbci	r29, 0x01	; 1
    2d64:	00 82       	st	Z, r0
    2d66:	c5 57       	subi	r28, 0x75	; 117
    2d68:	de 4f       	sbci	r29, 0xFE	; 254
    2d6a:	88 81       	ld	r24, Y
    2d6c:	99 81       	ldd	r25, Y+1	; 0x01
    2d6e:	cb 58       	subi	r28, 0x8B	; 139
    2d70:	d1 40       	sbci	r29, 0x01	; 1
    2d72:	01 96       	adiw	r24, 0x01	; 1
    2d74:	c5 57       	subi	r28, 0x75	; 117
    2d76:	de 4f       	sbci	r29, 0xFE	; 254
    2d78:	99 83       	std	Y+1, r25	; 0x01
    2d7a:	88 83       	st	Y, r24
    2d7c:	cb 58       	subi	r28, 0x8B	; 139
    2d7e:	d1 40       	sbci	r29, 0x01	; 1
    2d80:	c1 57       	subi	r28, 0x71	; 113
    2d82:	de 4f       	sbci	r29, 0xFE	; 254
    2d84:	98 81       	ld	r25, Y
    2d86:	cf 58       	subi	r28, 0x8F	; 143
    2d88:	d1 40       	sbci	r29, 0x01	; 1
    2d8a:	91 50       	subi	r25, 0x01	; 1
    2d8c:	c1 57       	subi	r28, 0x71	; 113
    2d8e:	de 4f       	sbci	r29, 0xFE	; 254
    2d90:	98 83       	st	Y, r25
    2d92:	cf 58       	subi	r28, 0x8F	; 143
    2d94:	d1 40       	sbci	r29, 0x01	; 1
    2d96:	c1 57       	subi	r28, 0x71	; 113
    2d98:	de 4f       	sbci	r29, 0xFE	; 254
    2d9a:	e8 81       	ld	r30, Y
    2d9c:	cf 58       	subi	r28, 0x8F	; 143
    2d9e:	d1 40       	sbci	r29, 0x01	; 1
    2da0:	ee 23       	and	r30, r30
    2da2:	31 f6       	brne	.-116    	; 0x2d30 <main+0x266>

	u8 mes5[] = "2- Stepper ACW" ;
    2da4:	ce 01       	movw	r24, r28
    2da6:	89 5f       	subi	r24, 0xF9	; 249
    2da8:	9e 4f       	sbci	r25, 0xFE	; 254
    2daa:	c0 57       	subi	r28, 0x70	; 112
    2dac:	de 4f       	sbci	r29, 0xFE	; 254
    2dae:	99 83       	std	Y+1, r25	; 0x01
    2db0:	88 83       	st	Y, r24
    2db2:	c0 59       	subi	r28, 0x90	; 144
    2db4:	d1 40       	sbci	r29, 0x01	; 1
    2db6:	8b e9       	ldi	r24, 0x9B	; 155
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	ce 56       	subi	r28, 0x6E	; 110
    2dbc:	de 4f       	sbci	r29, 0xFE	; 254
    2dbe:	99 83       	std	Y+1, r25	; 0x01
    2dc0:	88 83       	st	Y, r24
    2dc2:	c2 59       	subi	r28, 0x92	; 146
    2dc4:	d1 40       	sbci	r29, 0x01	; 1
    2dc6:	9f e0       	ldi	r25, 0x0F	; 15
    2dc8:	cc 56       	subi	r28, 0x6C	; 108
    2dca:	de 4f       	sbci	r29, 0xFE	; 254
    2dcc:	98 83       	st	Y, r25
    2dce:	c4 59       	subi	r28, 0x94	; 148
    2dd0:	d1 40       	sbci	r29, 0x01	; 1
    2dd2:	ce 56       	subi	r28, 0x6E	; 110
    2dd4:	de 4f       	sbci	r29, 0xFE	; 254
    2dd6:	e8 81       	ld	r30, Y
    2dd8:	f9 81       	ldd	r31, Y+1	; 0x01
    2dda:	c2 59       	subi	r28, 0x92	; 146
    2ddc:	d1 40       	sbci	r29, 0x01	; 1
    2dde:	00 80       	ld	r0, Z
    2de0:	ce 56       	subi	r28, 0x6E	; 110
    2de2:	de 4f       	sbci	r29, 0xFE	; 254
    2de4:	88 81       	ld	r24, Y
    2de6:	99 81       	ldd	r25, Y+1	; 0x01
    2de8:	c2 59       	subi	r28, 0x92	; 146
    2dea:	d1 40       	sbci	r29, 0x01	; 1
    2dec:	01 96       	adiw	r24, 0x01	; 1
    2dee:	ce 56       	subi	r28, 0x6E	; 110
    2df0:	de 4f       	sbci	r29, 0xFE	; 254
    2df2:	99 83       	std	Y+1, r25	; 0x01
    2df4:	88 83       	st	Y, r24
    2df6:	c2 59       	subi	r28, 0x92	; 146
    2df8:	d1 40       	sbci	r29, 0x01	; 1
    2dfa:	c0 57       	subi	r28, 0x70	; 112
    2dfc:	de 4f       	sbci	r29, 0xFE	; 254
    2dfe:	e8 81       	ld	r30, Y
    2e00:	f9 81       	ldd	r31, Y+1	; 0x01
    2e02:	c0 59       	subi	r28, 0x90	; 144
    2e04:	d1 40       	sbci	r29, 0x01	; 1
    2e06:	00 82       	st	Z, r0
    2e08:	c0 57       	subi	r28, 0x70	; 112
    2e0a:	de 4f       	sbci	r29, 0xFE	; 254
    2e0c:	88 81       	ld	r24, Y
    2e0e:	99 81       	ldd	r25, Y+1	; 0x01
    2e10:	c0 59       	subi	r28, 0x90	; 144
    2e12:	d1 40       	sbci	r29, 0x01	; 1
    2e14:	01 96       	adiw	r24, 0x01	; 1
    2e16:	c0 57       	subi	r28, 0x70	; 112
    2e18:	de 4f       	sbci	r29, 0xFE	; 254
    2e1a:	99 83       	std	Y+1, r25	; 0x01
    2e1c:	88 83       	st	Y, r24
    2e1e:	c0 59       	subi	r28, 0x90	; 144
    2e20:	d1 40       	sbci	r29, 0x01	; 1
    2e22:	cc 56       	subi	r28, 0x6C	; 108
    2e24:	de 4f       	sbci	r29, 0xFE	; 254
    2e26:	98 81       	ld	r25, Y
    2e28:	c4 59       	subi	r28, 0x94	; 148
    2e2a:	d1 40       	sbci	r29, 0x01	; 1
    2e2c:	91 50       	subi	r25, 0x01	; 1
    2e2e:	cc 56       	subi	r28, 0x6C	; 108
    2e30:	de 4f       	sbci	r29, 0xFE	; 254
    2e32:	98 83       	st	Y, r25
    2e34:	c4 59       	subi	r28, 0x94	; 148
    2e36:	d1 40       	sbci	r29, 0x01	; 1
    2e38:	cc 56       	subi	r28, 0x6C	; 108
    2e3a:	de 4f       	sbci	r29, 0xFE	; 254
    2e3c:	e8 81       	ld	r30, Y
    2e3e:	c4 59       	subi	r28, 0x94	; 148
    2e40:	d1 40       	sbci	r29, 0x01	; 1
    2e42:	ee 23       	and	r30, r30
    2e44:	31 f6       	brne	.-116    	; 0x2dd2 <main+0x308>

	u8 mes6[] = "1- DC CW" ;
    2e46:	ce 01       	movw	r24, r28
    2e48:	8a 5e       	subi	r24, 0xEA	; 234
    2e4a:	9e 4f       	sbci	r25, 0xFE	; 254
    2e4c:	cb 56       	subi	r28, 0x6B	; 107
    2e4e:	de 4f       	sbci	r29, 0xFE	; 254
    2e50:	99 83       	std	Y+1, r25	; 0x01
    2e52:	88 83       	st	Y, r24
    2e54:	c5 59       	subi	r28, 0x95	; 149
    2e56:	d1 40       	sbci	r29, 0x01	; 1
    2e58:	8a ea       	ldi	r24, 0xAA	; 170
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	c9 56       	subi	r28, 0x69	; 105
    2e5e:	de 4f       	sbci	r29, 0xFE	; 254
    2e60:	99 83       	std	Y+1, r25	; 0x01
    2e62:	88 83       	st	Y, r24
    2e64:	c7 59       	subi	r28, 0x97	; 151
    2e66:	d1 40       	sbci	r29, 0x01	; 1
    2e68:	99 e0       	ldi	r25, 0x09	; 9
    2e6a:	c7 56       	subi	r28, 0x67	; 103
    2e6c:	de 4f       	sbci	r29, 0xFE	; 254
    2e6e:	98 83       	st	Y, r25
    2e70:	c9 59       	subi	r28, 0x99	; 153
    2e72:	d1 40       	sbci	r29, 0x01	; 1
    2e74:	c9 56       	subi	r28, 0x69	; 105
    2e76:	de 4f       	sbci	r29, 0xFE	; 254
    2e78:	e8 81       	ld	r30, Y
    2e7a:	f9 81       	ldd	r31, Y+1	; 0x01
    2e7c:	c7 59       	subi	r28, 0x97	; 151
    2e7e:	d1 40       	sbci	r29, 0x01	; 1
    2e80:	00 80       	ld	r0, Z
    2e82:	c9 56       	subi	r28, 0x69	; 105
    2e84:	de 4f       	sbci	r29, 0xFE	; 254
    2e86:	88 81       	ld	r24, Y
    2e88:	99 81       	ldd	r25, Y+1	; 0x01
    2e8a:	c7 59       	subi	r28, 0x97	; 151
    2e8c:	d1 40       	sbci	r29, 0x01	; 1
    2e8e:	01 96       	adiw	r24, 0x01	; 1
    2e90:	c9 56       	subi	r28, 0x69	; 105
    2e92:	de 4f       	sbci	r29, 0xFE	; 254
    2e94:	99 83       	std	Y+1, r25	; 0x01
    2e96:	88 83       	st	Y, r24
    2e98:	c7 59       	subi	r28, 0x97	; 151
    2e9a:	d1 40       	sbci	r29, 0x01	; 1
    2e9c:	cb 56       	subi	r28, 0x6B	; 107
    2e9e:	de 4f       	sbci	r29, 0xFE	; 254
    2ea0:	e8 81       	ld	r30, Y
    2ea2:	f9 81       	ldd	r31, Y+1	; 0x01
    2ea4:	c5 59       	subi	r28, 0x95	; 149
    2ea6:	d1 40       	sbci	r29, 0x01	; 1
    2ea8:	00 82       	st	Z, r0
    2eaa:	cb 56       	subi	r28, 0x6B	; 107
    2eac:	de 4f       	sbci	r29, 0xFE	; 254
    2eae:	88 81       	ld	r24, Y
    2eb0:	99 81       	ldd	r25, Y+1	; 0x01
    2eb2:	c5 59       	subi	r28, 0x95	; 149
    2eb4:	d1 40       	sbci	r29, 0x01	; 1
    2eb6:	01 96       	adiw	r24, 0x01	; 1
    2eb8:	cb 56       	subi	r28, 0x6B	; 107
    2eba:	de 4f       	sbci	r29, 0xFE	; 254
    2ebc:	99 83       	std	Y+1, r25	; 0x01
    2ebe:	88 83       	st	Y, r24
    2ec0:	c5 59       	subi	r28, 0x95	; 149
    2ec2:	d1 40       	sbci	r29, 0x01	; 1
    2ec4:	c7 56       	subi	r28, 0x67	; 103
    2ec6:	de 4f       	sbci	r29, 0xFE	; 254
    2ec8:	98 81       	ld	r25, Y
    2eca:	c9 59       	subi	r28, 0x99	; 153
    2ecc:	d1 40       	sbci	r29, 0x01	; 1
    2ece:	91 50       	subi	r25, 0x01	; 1
    2ed0:	c7 56       	subi	r28, 0x67	; 103
    2ed2:	de 4f       	sbci	r29, 0xFE	; 254
    2ed4:	98 83       	st	Y, r25
    2ed6:	c9 59       	subi	r28, 0x99	; 153
    2ed8:	d1 40       	sbci	r29, 0x01	; 1
    2eda:	c7 56       	subi	r28, 0x67	; 103
    2edc:	de 4f       	sbci	r29, 0xFE	; 254
    2ede:	e8 81       	ld	r30, Y
    2ee0:	c9 59       	subi	r28, 0x99	; 153
    2ee2:	d1 40       	sbci	r29, 0x01	; 1
    2ee4:	ee 23       	and	r30, r30
    2ee6:	31 f6       	brne	.-116    	; 0x2e74 <main+0x3aa>

	u8 mes7[] = "2- DC ACW" ;
    2ee8:	ce 01       	movw	r24, r28
    2eea:	81 5e       	subi	r24, 0xE1	; 225
    2eec:	9e 4f       	sbci	r25, 0xFE	; 254
    2eee:	c6 56       	subi	r28, 0x66	; 102
    2ef0:	de 4f       	sbci	r29, 0xFE	; 254
    2ef2:	99 83       	std	Y+1, r25	; 0x01
    2ef4:	88 83       	st	Y, r24
    2ef6:	ca 59       	subi	r28, 0x9A	; 154
    2ef8:	d1 40       	sbci	r29, 0x01	; 1
    2efa:	83 eb       	ldi	r24, 0xB3	; 179
    2efc:	90 e0       	ldi	r25, 0x00	; 0
    2efe:	c4 56       	subi	r28, 0x64	; 100
    2f00:	de 4f       	sbci	r29, 0xFE	; 254
    2f02:	99 83       	std	Y+1, r25	; 0x01
    2f04:	88 83       	st	Y, r24
    2f06:	cc 59       	subi	r28, 0x9C	; 156
    2f08:	d1 40       	sbci	r29, 0x01	; 1
    2f0a:	9a e0       	ldi	r25, 0x0A	; 10
    2f0c:	c2 56       	subi	r28, 0x62	; 98
    2f0e:	de 4f       	sbci	r29, 0xFE	; 254
    2f10:	98 83       	st	Y, r25
    2f12:	ce 59       	subi	r28, 0x9E	; 158
    2f14:	d1 40       	sbci	r29, 0x01	; 1
    2f16:	c4 56       	subi	r28, 0x64	; 100
    2f18:	de 4f       	sbci	r29, 0xFE	; 254
    2f1a:	e8 81       	ld	r30, Y
    2f1c:	f9 81       	ldd	r31, Y+1	; 0x01
    2f1e:	cc 59       	subi	r28, 0x9C	; 156
    2f20:	d1 40       	sbci	r29, 0x01	; 1
    2f22:	00 80       	ld	r0, Z
    2f24:	c4 56       	subi	r28, 0x64	; 100
    2f26:	de 4f       	sbci	r29, 0xFE	; 254
    2f28:	88 81       	ld	r24, Y
    2f2a:	99 81       	ldd	r25, Y+1	; 0x01
    2f2c:	cc 59       	subi	r28, 0x9C	; 156
    2f2e:	d1 40       	sbci	r29, 0x01	; 1
    2f30:	01 96       	adiw	r24, 0x01	; 1
    2f32:	c4 56       	subi	r28, 0x64	; 100
    2f34:	de 4f       	sbci	r29, 0xFE	; 254
    2f36:	99 83       	std	Y+1, r25	; 0x01
    2f38:	88 83       	st	Y, r24
    2f3a:	cc 59       	subi	r28, 0x9C	; 156
    2f3c:	d1 40       	sbci	r29, 0x01	; 1
    2f3e:	c6 56       	subi	r28, 0x66	; 102
    2f40:	de 4f       	sbci	r29, 0xFE	; 254
    2f42:	e8 81       	ld	r30, Y
    2f44:	f9 81       	ldd	r31, Y+1	; 0x01
    2f46:	ca 59       	subi	r28, 0x9A	; 154
    2f48:	d1 40       	sbci	r29, 0x01	; 1
    2f4a:	00 82       	st	Z, r0
    2f4c:	c6 56       	subi	r28, 0x66	; 102
    2f4e:	de 4f       	sbci	r29, 0xFE	; 254
    2f50:	88 81       	ld	r24, Y
    2f52:	99 81       	ldd	r25, Y+1	; 0x01
    2f54:	ca 59       	subi	r28, 0x9A	; 154
    2f56:	d1 40       	sbci	r29, 0x01	; 1
    2f58:	01 96       	adiw	r24, 0x01	; 1
    2f5a:	c6 56       	subi	r28, 0x66	; 102
    2f5c:	de 4f       	sbci	r29, 0xFE	; 254
    2f5e:	99 83       	std	Y+1, r25	; 0x01
    2f60:	88 83       	st	Y, r24
    2f62:	ca 59       	subi	r28, 0x9A	; 154
    2f64:	d1 40       	sbci	r29, 0x01	; 1
    2f66:	c2 56       	subi	r28, 0x62	; 98
    2f68:	de 4f       	sbci	r29, 0xFE	; 254
    2f6a:	98 81       	ld	r25, Y
    2f6c:	ce 59       	subi	r28, 0x9E	; 158
    2f6e:	d1 40       	sbci	r29, 0x01	; 1
    2f70:	91 50       	subi	r25, 0x01	; 1
    2f72:	c2 56       	subi	r28, 0x62	; 98
    2f74:	de 4f       	sbci	r29, 0xFE	; 254
    2f76:	98 83       	st	Y, r25
    2f78:	ce 59       	subi	r28, 0x9E	; 158
    2f7a:	d1 40       	sbci	r29, 0x01	; 1
    2f7c:	c2 56       	subi	r28, 0x62	; 98
    2f7e:	de 4f       	sbci	r29, 0xFE	; 254
    2f80:	e8 81       	ld	r30, Y
    2f82:	ce 59       	subi	r28, 0x9E	; 158
    2f84:	d1 40       	sbci	r29, 0x01	; 1
    2f86:	ee 23       	and	r30, r30
    2f88:	31 f6       	brne	.-116    	; 0x2f16 <main+0x44c>

	u8 mes8[] = "Motor Loading " ;
    2f8a:	ce 01       	movw	r24, r28
    2f8c:	87 5d       	subi	r24, 0xD7	; 215
    2f8e:	9e 4f       	sbci	r25, 0xFE	; 254
    2f90:	c1 56       	subi	r28, 0x61	; 97
    2f92:	de 4f       	sbci	r29, 0xFE	; 254
    2f94:	99 83       	std	Y+1, r25	; 0x01
    2f96:	88 83       	st	Y, r24
    2f98:	cf 59       	subi	r28, 0x9F	; 159
    2f9a:	d1 40       	sbci	r29, 0x01	; 1
    2f9c:	8d eb       	ldi	r24, 0xBD	; 189
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	cf 55       	subi	r28, 0x5F	; 95
    2fa2:	de 4f       	sbci	r29, 0xFE	; 254
    2fa4:	99 83       	std	Y+1, r25	; 0x01
    2fa6:	88 83       	st	Y, r24
    2fa8:	c1 5a       	subi	r28, 0xA1	; 161
    2faa:	d1 40       	sbci	r29, 0x01	; 1
    2fac:	9f e0       	ldi	r25, 0x0F	; 15
    2fae:	cd 55       	subi	r28, 0x5D	; 93
    2fb0:	de 4f       	sbci	r29, 0xFE	; 254
    2fb2:	98 83       	st	Y, r25
    2fb4:	c3 5a       	subi	r28, 0xA3	; 163
    2fb6:	d1 40       	sbci	r29, 0x01	; 1
    2fb8:	cf 55       	subi	r28, 0x5F	; 95
    2fba:	de 4f       	sbci	r29, 0xFE	; 254
    2fbc:	e8 81       	ld	r30, Y
    2fbe:	f9 81       	ldd	r31, Y+1	; 0x01
    2fc0:	c1 5a       	subi	r28, 0xA1	; 161
    2fc2:	d1 40       	sbci	r29, 0x01	; 1
    2fc4:	00 80       	ld	r0, Z
    2fc6:	cf 55       	subi	r28, 0x5F	; 95
    2fc8:	de 4f       	sbci	r29, 0xFE	; 254
    2fca:	88 81       	ld	r24, Y
    2fcc:	99 81       	ldd	r25, Y+1	; 0x01
    2fce:	c1 5a       	subi	r28, 0xA1	; 161
    2fd0:	d1 40       	sbci	r29, 0x01	; 1
    2fd2:	01 96       	adiw	r24, 0x01	; 1
    2fd4:	cf 55       	subi	r28, 0x5F	; 95
    2fd6:	de 4f       	sbci	r29, 0xFE	; 254
    2fd8:	99 83       	std	Y+1, r25	; 0x01
    2fda:	88 83       	st	Y, r24
    2fdc:	c1 5a       	subi	r28, 0xA1	; 161
    2fde:	d1 40       	sbci	r29, 0x01	; 1
    2fe0:	c1 56       	subi	r28, 0x61	; 97
    2fe2:	de 4f       	sbci	r29, 0xFE	; 254
    2fe4:	e8 81       	ld	r30, Y
    2fe6:	f9 81       	ldd	r31, Y+1	; 0x01
    2fe8:	cf 59       	subi	r28, 0x9F	; 159
    2fea:	d1 40       	sbci	r29, 0x01	; 1
    2fec:	00 82       	st	Z, r0
    2fee:	c1 56       	subi	r28, 0x61	; 97
    2ff0:	de 4f       	sbci	r29, 0xFE	; 254
    2ff2:	88 81       	ld	r24, Y
    2ff4:	99 81       	ldd	r25, Y+1	; 0x01
    2ff6:	cf 59       	subi	r28, 0x9F	; 159
    2ff8:	d1 40       	sbci	r29, 0x01	; 1
    2ffa:	01 96       	adiw	r24, 0x01	; 1
    2ffc:	c1 56       	subi	r28, 0x61	; 97
    2ffe:	de 4f       	sbci	r29, 0xFE	; 254
    3000:	99 83       	std	Y+1, r25	; 0x01
    3002:	88 83       	st	Y, r24
    3004:	cf 59       	subi	r28, 0x9F	; 159
    3006:	d1 40       	sbci	r29, 0x01	; 1
    3008:	cd 55       	subi	r28, 0x5D	; 93
    300a:	de 4f       	sbci	r29, 0xFE	; 254
    300c:	98 81       	ld	r25, Y
    300e:	c3 5a       	subi	r28, 0xA3	; 163
    3010:	d1 40       	sbci	r29, 0x01	; 1
    3012:	91 50       	subi	r25, 0x01	; 1
    3014:	cd 55       	subi	r28, 0x5D	; 93
    3016:	de 4f       	sbci	r29, 0xFE	; 254
    3018:	98 83       	st	Y, r25
    301a:	c3 5a       	subi	r28, 0xA3	; 163
    301c:	d1 40       	sbci	r29, 0x01	; 1
    301e:	cd 55       	subi	r28, 0x5D	; 93
    3020:	de 4f       	sbci	r29, 0xFE	; 254
    3022:	e8 81       	ld	r30, Y
    3024:	c3 5a       	subi	r28, 0xA3	; 163
    3026:	d1 40       	sbci	r29, 0x01	; 1
    3028:	ee 23       	and	r30, r30
    302a:	31 f6       	brne	.-116    	; 0x2fb8 <main+0x4ee>

	u8 mes10[] = "Motor stop" ;
    302c:	ce 01       	movw	r24, r28
    302e:	88 5c       	subi	r24, 0xC8	; 200
    3030:	9e 4f       	sbci	r25, 0xFE	; 254
    3032:	cc 55       	subi	r28, 0x5C	; 92
    3034:	de 4f       	sbci	r29, 0xFE	; 254
    3036:	99 83       	std	Y+1, r25	; 0x01
    3038:	88 83       	st	Y, r24
    303a:	c4 5a       	subi	r28, 0xA4	; 164
    303c:	d1 40       	sbci	r29, 0x01	; 1
    303e:	8c ec       	ldi	r24, 0xCC	; 204
    3040:	90 e0       	ldi	r25, 0x00	; 0
    3042:	ca 55       	subi	r28, 0x5A	; 90
    3044:	de 4f       	sbci	r29, 0xFE	; 254
    3046:	99 83       	std	Y+1, r25	; 0x01
    3048:	88 83       	st	Y, r24
    304a:	c6 5a       	subi	r28, 0xA6	; 166
    304c:	d1 40       	sbci	r29, 0x01	; 1
    304e:	9b e0       	ldi	r25, 0x0B	; 11
    3050:	c8 55       	subi	r28, 0x58	; 88
    3052:	de 4f       	sbci	r29, 0xFE	; 254
    3054:	98 83       	st	Y, r25
    3056:	c8 5a       	subi	r28, 0xA8	; 168
    3058:	d1 40       	sbci	r29, 0x01	; 1
    305a:	ca 55       	subi	r28, 0x5A	; 90
    305c:	de 4f       	sbci	r29, 0xFE	; 254
    305e:	e8 81       	ld	r30, Y
    3060:	f9 81       	ldd	r31, Y+1	; 0x01
    3062:	c6 5a       	subi	r28, 0xA6	; 166
    3064:	d1 40       	sbci	r29, 0x01	; 1
    3066:	00 80       	ld	r0, Z
    3068:	ca 55       	subi	r28, 0x5A	; 90
    306a:	de 4f       	sbci	r29, 0xFE	; 254
    306c:	88 81       	ld	r24, Y
    306e:	99 81       	ldd	r25, Y+1	; 0x01
    3070:	c6 5a       	subi	r28, 0xA6	; 166
    3072:	d1 40       	sbci	r29, 0x01	; 1
    3074:	01 96       	adiw	r24, 0x01	; 1
    3076:	ca 55       	subi	r28, 0x5A	; 90
    3078:	de 4f       	sbci	r29, 0xFE	; 254
    307a:	99 83       	std	Y+1, r25	; 0x01
    307c:	88 83       	st	Y, r24
    307e:	c6 5a       	subi	r28, 0xA6	; 166
    3080:	d1 40       	sbci	r29, 0x01	; 1
    3082:	cc 55       	subi	r28, 0x5C	; 92
    3084:	de 4f       	sbci	r29, 0xFE	; 254
    3086:	e8 81       	ld	r30, Y
    3088:	f9 81       	ldd	r31, Y+1	; 0x01
    308a:	c4 5a       	subi	r28, 0xA4	; 164
    308c:	d1 40       	sbci	r29, 0x01	; 1
    308e:	00 82       	st	Z, r0
    3090:	cc 55       	subi	r28, 0x5C	; 92
    3092:	de 4f       	sbci	r29, 0xFE	; 254
    3094:	88 81       	ld	r24, Y
    3096:	99 81       	ldd	r25, Y+1	; 0x01
    3098:	c4 5a       	subi	r28, 0xA4	; 164
    309a:	d1 40       	sbci	r29, 0x01	; 1
    309c:	01 96       	adiw	r24, 0x01	; 1
    309e:	cc 55       	subi	r28, 0x5C	; 92
    30a0:	de 4f       	sbci	r29, 0xFE	; 254
    30a2:	99 83       	std	Y+1, r25	; 0x01
    30a4:	88 83       	st	Y, r24
    30a6:	c4 5a       	subi	r28, 0xA4	; 164
    30a8:	d1 40       	sbci	r29, 0x01	; 1
    30aa:	c8 55       	subi	r28, 0x58	; 88
    30ac:	de 4f       	sbci	r29, 0xFE	; 254
    30ae:	98 81       	ld	r25, Y
    30b0:	c8 5a       	subi	r28, 0xA8	; 168
    30b2:	d1 40       	sbci	r29, 0x01	; 1
    30b4:	91 50       	subi	r25, 0x01	; 1
    30b6:	c8 55       	subi	r28, 0x58	; 88
    30b8:	de 4f       	sbci	r29, 0xFE	; 254
    30ba:	98 83       	st	Y, r25
    30bc:	c8 5a       	subi	r28, 0xA8	; 168
    30be:	d1 40       	sbci	r29, 0x01	; 1
    30c0:	c8 55       	subi	r28, 0x58	; 88
    30c2:	de 4f       	sbci	r29, 0xFE	; 254
    30c4:	e8 81       	ld	r30, Y
    30c6:	c8 5a       	subi	r28, 0xA8	; 168
    30c8:	d1 40       	sbci	r29, 0x01	; 1
    30ca:	ee 23       	and	r30, r30
    30cc:	31 f6       	brne	.-116    	; 0x305a <main+0x590>

	u8 mes9[] = "Ahmed Azab" ;
    30ce:	ce 01       	movw	r24, r28
    30d0:	8d 5b       	subi	r24, 0xBD	; 189
    30d2:	9e 4f       	sbci	r25, 0xFE	; 254
    30d4:	c7 55       	subi	r28, 0x57	; 87
    30d6:	de 4f       	sbci	r29, 0xFE	; 254
    30d8:	99 83       	std	Y+1, r25	; 0x01
    30da:	88 83       	st	Y, r24
    30dc:	c9 5a       	subi	r28, 0xA9	; 169
    30de:	d1 40       	sbci	r29, 0x01	; 1
    30e0:	87 ed       	ldi	r24, 0xD7	; 215
    30e2:	90 e0       	ldi	r25, 0x00	; 0
    30e4:	c5 55       	subi	r28, 0x55	; 85
    30e6:	de 4f       	sbci	r29, 0xFE	; 254
    30e8:	99 83       	std	Y+1, r25	; 0x01
    30ea:	88 83       	st	Y, r24
    30ec:	cb 5a       	subi	r28, 0xAB	; 171
    30ee:	d1 40       	sbci	r29, 0x01	; 1
    30f0:	9b e0       	ldi	r25, 0x0B	; 11
    30f2:	c3 55       	subi	r28, 0x53	; 83
    30f4:	de 4f       	sbci	r29, 0xFE	; 254
    30f6:	98 83       	st	Y, r25
    30f8:	cd 5a       	subi	r28, 0xAD	; 173
    30fa:	d1 40       	sbci	r29, 0x01	; 1
    30fc:	c5 55       	subi	r28, 0x55	; 85
    30fe:	de 4f       	sbci	r29, 0xFE	; 254
    3100:	e8 81       	ld	r30, Y
    3102:	f9 81       	ldd	r31, Y+1	; 0x01
    3104:	cb 5a       	subi	r28, 0xAB	; 171
    3106:	d1 40       	sbci	r29, 0x01	; 1
    3108:	00 80       	ld	r0, Z
    310a:	c5 55       	subi	r28, 0x55	; 85
    310c:	de 4f       	sbci	r29, 0xFE	; 254
    310e:	88 81       	ld	r24, Y
    3110:	99 81       	ldd	r25, Y+1	; 0x01
    3112:	cb 5a       	subi	r28, 0xAB	; 171
    3114:	d1 40       	sbci	r29, 0x01	; 1
    3116:	01 96       	adiw	r24, 0x01	; 1
    3118:	c5 55       	subi	r28, 0x55	; 85
    311a:	de 4f       	sbci	r29, 0xFE	; 254
    311c:	99 83       	std	Y+1, r25	; 0x01
    311e:	88 83       	st	Y, r24
    3120:	cb 5a       	subi	r28, 0xAB	; 171
    3122:	d1 40       	sbci	r29, 0x01	; 1
    3124:	c7 55       	subi	r28, 0x57	; 87
    3126:	de 4f       	sbci	r29, 0xFE	; 254
    3128:	e8 81       	ld	r30, Y
    312a:	f9 81       	ldd	r31, Y+1	; 0x01
    312c:	c9 5a       	subi	r28, 0xA9	; 169
    312e:	d1 40       	sbci	r29, 0x01	; 1
    3130:	00 82       	st	Z, r0
    3132:	c7 55       	subi	r28, 0x57	; 87
    3134:	de 4f       	sbci	r29, 0xFE	; 254
    3136:	88 81       	ld	r24, Y
    3138:	99 81       	ldd	r25, Y+1	; 0x01
    313a:	c9 5a       	subi	r28, 0xA9	; 169
    313c:	d1 40       	sbci	r29, 0x01	; 1
    313e:	01 96       	adiw	r24, 0x01	; 1
    3140:	c7 55       	subi	r28, 0x57	; 87
    3142:	de 4f       	sbci	r29, 0xFE	; 254
    3144:	99 83       	std	Y+1, r25	; 0x01
    3146:	88 83       	st	Y, r24
    3148:	c9 5a       	subi	r28, 0xA9	; 169
    314a:	d1 40       	sbci	r29, 0x01	; 1
    314c:	c3 55       	subi	r28, 0x53	; 83
    314e:	de 4f       	sbci	r29, 0xFE	; 254
    3150:	98 81       	ld	r25, Y
    3152:	cd 5a       	subi	r28, 0xAD	; 173
    3154:	d1 40       	sbci	r29, 0x01	; 1
    3156:	91 50       	subi	r25, 0x01	; 1
    3158:	c3 55       	subi	r28, 0x53	; 83
    315a:	de 4f       	sbci	r29, 0xFE	; 254
    315c:	98 83       	st	Y, r25
    315e:	cd 5a       	subi	r28, 0xAD	; 173
    3160:	d1 40       	sbci	r29, 0x01	; 1
    3162:	c3 55       	subi	r28, 0x53	; 83
    3164:	de 4f       	sbci	r29, 0xFE	; 254
    3166:	e8 81       	ld	r30, Y
    3168:	cd 5a       	subi	r28, 0xAD	; 173
    316a:	d1 40       	sbci	r29, 0x01	; 1
    316c:	ee 23       	and	r30, r30
    316e:	31 f6       	brne	.-116    	; 0x30fc <main+0x632>

	u8 mes11[] = "Stepper CW" ;
    3170:	ce 01       	movw	r24, r28
    3172:	82 5b       	subi	r24, 0xB2	; 178
    3174:	9e 4f       	sbci	r25, 0xFE	; 254
    3176:	c2 55       	subi	r28, 0x52	; 82
    3178:	de 4f       	sbci	r29, 0xFE	; 254
    317a:	99 83       	std	Y+1, r25	; 0x01
    317c:	88 83       	st	Y, r24
    317e:	ce 5a       	subi	r28, 0xAE	; 174
    3180:	d1 40       	sbci	r29, 0x01	; 1
    3182:	82 ee       	ldi	r24, 0xE2	; 226
    3184:	90 e0       	ldi	r25, 0x00	; 0
    3186:	c0 55       	subi	r28, 0x50	; 80
    3188:	de 4f       	sbci	r29, 0xFE	; 254
    318a:	99 83       	std	Y+1, r25	; 0x01
    318c:	88 83       	st	Y, r24
    318e:	c0 5b       	subi	r28, 0xB0	; 176
    3190:	d1 40       	sbci	r29, 0x01	; 1
    3192:	9b e0       	ldi	r25, 0x0B	; 11
    3194:	ce 54       	subi	r28, 0x4E	; 78
    3196:	de 4f       	sbci	r29, 0xFE	; 254
    3198:	98 83       	st	Y, r25
    319a:	c2 5b       	subi	r28, 0xB2	; 178
    319c:	d1 40       	sbci	r29, 0x01	; 1
    319e:	c0 55       	subi	r28, 0x50	; 80
    31a0:	de 4f       	sbci	r29, 0xFE	; 254
    31a2:	e8 81       	ld	r30, Y
    31a4:	f9 81       	ldd	r31, Y+1	; 0x01
    31a6:	c0 5b       	subi	r28, 0xB0	; 176
    31a8:	d1 40       	sbci	r29, 0x01	; 1
    31aa:	00 80       	ld	r0, Z
    31ac:	c0 55       	subi	r28, 0x50	; 80
    31ae:	de 4f       	sbci	r29, 0xFE	; 254
    31b0:	88 81       	ld	r24, Y
    31b2:	99 81       	ldd	r25, Y+1	; 0x01
    31b4:	c0 5b       	subi	r28, 0xB0	; 176
    31b6:	d1 40       	sbci	r29, 0x01	; 1
    31b8:	01 96       	adiw	r24, 0x01	; 1
    31ba:	c0 55       	subi	r28, 0x50	; 80
    31bc:	de 4f       	sbci	r29, 0xFE	; 254
    31be:	99 83       	std	Y+1, r25	; 0x01
    31c0:	88 83       	st	Y, r24
    31c2:	c0 5b       	subi	r28, 0xB0	; 176
    31c4:	d1 40       	sbci	r29, 0x01	; 1
    31c6:	c2 55       	subi	r28, 0x52	; 82
    31c8:	de 4f       	sbci	r29, 0xFE	; 254
    31ca:	e8 81       	ld	r30, Y
    31cc:	f9 81       	ldd	r31, Y+1	; 0x01
    31ce:	ce 5a       	subi	r28, 0xAE	; 174
    31d0:	d1 40       	sbci	r29, 0x01	; 1
    31d2:	00 82       	st	Z, r0
    31d4:	c2 55       	subi	r28, 0x52	; 82
    31d6:	de 4f       	sbci	r29, 0xFE	; 254
    31d8:	88 81       	ld	r24, Y
    31da:	99 81       	ldd	r25, Y+1	; 0x01
    31dc:	ce 5a       	subi	r28, 0xAE	; 174
    31de:	d1 40       	sbci	r29, 0x01	; 1
    31e0:	01 96       	adiw	r24, 0x01	; 1
    31e2:	c2 55       	subi	r28, 0x52	; 82
    31e4:	de 4f       	sbci	r29, 0xFE	; 254
    31e6:	99 83       	std	Y+1, r25	; 0x01
    31e8:	88 83       	st	Y, r24
    31ea:	ce 5a       	subi	r28, 0xAE	; 174
    31ec:	d1 40       	sbci	r29, 0x01	; 1
    31ee:	ce 54       	subi	r28, 0x4E	; 78
    31f0:	de 4f       	sbci	r29, 0xFE	; 254
    31f2:	98 81       	ld	r25, Y
    31f4:	c2 5b       	subi	r28, 0xB2	; 178
    31f6:	d1 40       	sbci	r29, 0x01	; 1
    31f8:	91 50       	subi	r25, 0x01	; 1
    31fa:	ce 54       	subi	r28, 0x4E	; 78
    31fc:	de 4f       	sbci	r29, 0xFE	; 254
    31fe:	98 83       	st	Y, r25
    3200:	c2 5b       	subi	r28, 0xB2	; 178
    3202:	d1 40       	sbci	r29, 0x01	; 1
    3204:	ce 54       	subi	r28, 0x4E	; 78
    3206:	de 4f       	sbci	r29, 0xFE	; 254
    3208:	e8 81       	ld	r30, Y
    320a:	c2 5b       	subi	r28, 0xB2	; 178
    320c:	d1 40       	sbci	r29, 0x01	; 1
    320e:	ee 23       	and	r30, r30
    3210:	31 f6       	brne	.-116    	; 0x319e <main+0x6d4>

	u8 mes12[] = "Stepper ACW" ;
    3212:	ce 01       	movw	r24, r28
    3214:	87 5a       	subi	r24, 0xA7	; 167
    3216:	9e 4f       	sbci	r25, 0xFE	; 254
    3218:	cd 54       	subi	r28, 0x4D	; 77
    321a:	de 4f       	sbci	r29, 0xFE	; 254
    321c:	99 83       	std	Y+1, r25	; 0x01
    321e:	88 83       	st	Y, r24
    3220:	c3 5b       	subi	r28, 0xB3	; 179
    3222:	d1 40       	sbci	r29, 0x01	; 1
    3224:	8d ee       	ldi	r24, 0xED	; 237
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	cb 54       	subi	r28, 0x4B	; 75
    322a:	de 4f       	sbci	r29, 0xFE	; 254
    322c:	99 83       	std	Y+1, r25	; 0x01
    322e:	88 83       	st	Y, r24
    3230:	c5 5b       	subi	r28, 0xB5	; 181
    3232:	d1 40       	sbci	r29, 0x01	; 1
    3234:	9c e0       	ldi	r25, 0x0C	; 12
    3236:	c9 54       	subi	r28, 0x49	; 73
    3238:	de 4f       	sbci	r29, 0xFE	; 254
    323a:	98 83       	st	Y, r25
    323c:	c7 5b       	subi	r28, 0xB7	; 183
    323e:	d1 40       	sbci	r29, 0x01	; 1
    3240:	cb 54       	subi	r28, 0x4B	; 75
    3242:	de 4f       	sbci	r29, 0xFE	; 254
    3244:	e8 81       	ld	r30, Y
    3246:	f9 81       	ldd	r31, Y+1	; 0x01
    3248:	c5 5b       	subi	r28, 0xB5	; 181
    324a:	d1 40       	sbci	r29, 0x01	; 1
    324c:	00 80       	ld	r0, Z
    324e:	cb 54       	subi	r28, 0x4B	; 75
    3250:	de 4f       	sbci	r29, 0xFE	; 254
    3252:	88 81       	ld	r24, Y
    3254:	99 81       	ldd	r25, Y+1	; 0x01
    3256:	c5 5b       	subi	r28, 0xB5	; 181
    3258:	d1 40       	sbci	r29, 0x01	; 1
    325a:	01 96       	adiw	r24, 0x01	; 1
    325c:	cb 54       	subi	r28, 0x4B	; 75
    325e:	de 4f       	sbci	r29, 0xFE	; 254
    3260:	99 83       	std	Y+1, r25	; 0x01
    3262:	88 83       	st	Y, r24
    3264:	c5 5b       	subi	r28, 0xB5	; 181
    3266:	d1 40       	sbci	r29, 0x01	; 1
    3268:	cd 54       	subi	r28, 0x4D	; 77
    326a:	de 4f       	sbci	r29, 0xFE	; 254
    326c:	e8 81       	ld	r30, Y
    326e:	f9 81       	ldd	r31, Y+1	; 0x01
    3270:	c3 5b       	subi	r28, 0xB3	; 179
    3272:	d1 40       	sbci	r29, 0x01	; 1
    3274:	00 82       	st	Z, r0
    3276:	cd 54       	subi	r28, 0x4D	; 77
    3278:	de 4f       	sbci	r29, 0xFE	; 254
    327a:	88 81       	ld	r24, Y
    327c:	99 81       	ldd	r25, Y+1	; 0x01
    327e:	c3 5b       	subi	r28, 0xB3	; 179
    3280:	d1 40       	sbci	r29, 0x01	; 1
    3282:	01 96       	adiw	r24, 0x01	; 1
    3284:	cd 54       	subi	r28, 0x4D	; 77
    3286:	de 4f       	sbci	r29, 0xFE	; 254
    3288:	99 83       	std	Y+1, r25	; 0x01
    328a:	88 83       	st	Y, r24
    328c:	c3 5b       	subi	r28, 0xB3	; 179
    328e:	d1 40       	sbci	r29, 0x01	; 1
    3290:	c9 54       	subi	r28, 0x49	; 73
    3292:	de 4f       	sbci	r29, 0xFE	; 254
    3294:	98 81       	ld	r25, Y
    3296:	c7 5b       	subi	r28, 0xB7	; 183
    3298:	d1 40       	sbci	r29, 0x01	; 1
    329a:	91 50       	subi	r25, 0x01	; 1
    329c:	c9 54       	subi	r28, 0x49	; 73
    329e:	de 4f       	sbci	r29, 0xFE	; 254
    32a0:	98 83       	st	Y, r25
    32a2:	c7 5b       	subi	r28, 0xB7	; 183
    32a4:	d1 40       	sbci	r29, 0x01	; 1
    32a6:	c9 54       	subi	r28, 0x49	; 73
    32a8:	de 4f       	sbci	r29, 0xFE	; 254
    32aa:	e8 81       	ld	r30, Y
    32ac:	c7 5b       	subi	r28, 0xB7	; 183
    32ae:	d1 40       	sbci	r29, 0x01	; 1
    32b0:	ee 23       	and	r30, r30
    32b2:	31 f6       	brne	.-116    	; 0x3240 <main+0x776>

	u8 mes13[] = "DC CW" ;
    32b4:	ce 01       	movw	r24, r28
    32b6:	8b 59       	subi	r24, 0x9B	; 155
    32b8:	9e 4f       	sbci	r25, 0xFE	; 254
    32ba:	c8 54       	subi	r28, 0x48	; 72
    32bc:	de 4f       	sbci	r29, 0xFE	; 254
    32be:	99 83       	std	Y+1, r25	; 0x01
    32c0:	88 83       	st	Y, r24
    32c2:	c8 5b       	subi	r28, 0xB8	; 184
    32c4:	d1 40       	sbci	r29, 0x01	; 1
    32c6:	89 ef       	ldi	r24, 0xF9	; 249
    32c8:	90 e0       	ldi	r25, 0x00	; 0
    32ca:	c6 54       	subi	r28, 0x46	; 70
    32cc:	de 4f       	sbci	r29, 0xFE	; 254
    32ce:	99 83       	std	Y+1, r25	; 0x01
    32d0:	88 83       	st	Y, r24
    32d2:	ca 5b       	subi	r28, 0xBA	; 186
    32d4:	d1 40       	sbci	r29, 0x01	; 1
    32d6:	96 e0       	ldi	r25, 0x06	; 6
    32d8:	c4 54       	subi	r28, 0x44	; 68
    32da:	de 4f       	sbci	r29, 0xFE	; 254
    32dc:	98 83       	st	Y, r25
    32de:	cc 5b       	subi	r28, 0xBC	; 188
    32e0:	d1 40       	sbci	r29, 0x01	; 1
    32e2:	c6 54       	subi	r28, 0x46	; 70
    32e4:	de 4f       	sbci	r29, 0xFE	; 254
    32e6:	e8 81       	ld	r30, Y
    32e8:	f9 81       	ldd	r31, Y+1	; 0x01
    32ea:	ca 5b       	subi	r28, 0xBA	; 186
    32ec:	d1 40       	sbci	r29, 0x01	; 1
    32ee:	00 80       	ld	r0, Z
    32f0:	c6 54       	subi	r28, 0x46	; 70
    32f2:	de 4f       	sbci	r29, 0xFE	; 254
    32f4:	88 81       	ld	r24, Y
    32f6:	99 81       	ldd	r25, Y+1	; 0x01
    32f8:	ca 5b       	subi	r28, 0xBA	; 186
    32fa:	d1 40       	sbci	r29, 0x01	; 1
    32fc:	01 96       	adiw	r24, 0x01	; 1
    32fe:	c6 54       	subi	r28, 0x46	; 70
    3300:	de 4f       	sbci	r29, 0xFE	; 254
    3302:	99 83       	std	Y+1, r25	; 0x01
    3304:	88 83       	st	Y, r24
    3306:	ca 5b       	subi	r28, 0xBA	; 186
    3308:	d1 40       	sbci	r29, 0x01	; 1
    330a:	c8 54       	subi	r28, 0x48	; 72
    330c:	de 4f       	sbci	r29, 0xFE	; 254
    330e:	e8 81       	ld	r30, Y
    3310:	f9 81       	ldd	r31, Y+1	; 0x01
    3312:	c8 5b       	subi	r28, 0xB8	; 184
    3314:	d1 40       	sbci	r29, 0x01	; 1
    3316:	00 82       	st	Z, r0
    3318:	c8 54       	subi	r28, 0x48	; 72
    331a:	de 4f       	sbci	r29, 0xFE	; 254
    331c:	88 81       	ld	r24, Y
    331e:	99 81       	ldd	r25, Y+1	; 0x01
    3320:	c8 5b       	subi	r28, 0xB8	; 184
    3322:	d1 40       	sbci	r29, 0x01	; 1
    3324:	01 96       	adiw	r24, 0x01	; 1
    3326:	c8 54       	subi	r28, 0x48	; 72
    3328:	de 4f       	sbci	r29, 0xFE	; 254
    332a:	99 83       	std	Y+1, r25	; 0x01
    332c:	88 83       	st	Y, r24
    332e:	c8 5b       	subi	r28, 0xB8	; 184
    3330:	d1 40       	sbci	r29, 0x01	; 1
    3332:	c4 54       	subi	r28, 0x44	; 68
    3334:	de 4f       	sbci	r29, 0xFE	; 254
    3336:	98 81       	ld	r25, Y
    3338:	cc 5b       	subi	r28, 0xBC	; 188
    333a:	d1 40       	sbci	r29, 0x01	; 1
    333c:	91 50       	subi	r25, 0x01	; 1
    333e:	c4 54       	subi	r28, 0x44	; 68
    3340:	de 4f       	sbci	r29, 0xFE	; 254
    3342:	98 83       	st	Y, r25
    3344:	cc 5b       	subi	r28, 0xBC	; 188
    3346:	d1 40       	sbci	r29, 0x01	; 1
    3348:	c4 54       	subi	r28, 0x44	; 68
    334a:	de 4f       	sbci	r29, 0xFE	; 254
    334c:	e8 81       	ld	r30, Y
    334e:	cc 5b       	subi	r28, 0xBC	; 188
    3350:	d1 40       	sbci	r29, 0x01	; 1
    3352:	ee 23       	and	r30, r30
    3354:	31 f6       	brne	.-116    	; 0x32e2 <main+0x818>

	u8 mes14[] = "DC ACW" ;
    3356:	ce 01       	movw	r24, r28
    3358:	85 59       	subi	r24, 0x95	; 149
    335a:	9e 4f       	sbci	r25, 0xFE	; 254
    335c:	c3 54       	subi	r28, 0x43	; 67
    335e:	de 4f       	sbci	r29, 0xFE	; 254
    3360:	99 83       	std	Y+1, r25	; 0x01
    3362:	88 83       	st	Y, r24
    3364:	cd 5b       	subi	r28, 0xBD	; 189
    3366:	d1 40       	sbci	r29, 0x01	; 1
    3368:	8f ef       	ldi	r24, 0xFF	; 255
    336a:	90 e0       	ldi	r25, 0x00	; 0
    336c:	c1 54       	subi	r28, 0x41	; 65
    336e:	de 4f       	sbci	r29, 0xFE	; 254
    3370:	99 83       	std	Y+1, r25	; 0x01
    3372:	88 83       	st	Y, r24
    3374:	cf 5b       	subi	r28, 0xBF	; 191
    3376:	d1 40       	sbci	r29, 0x01	; 1
    3378:	97 e0       	ldi	r25, 0x07	; 7
    337a:	cf 53       	subi	r28, 0x3F	; 63
    337c:	de 4f       	sbci	r29, 0xFE	; 254
    337e:	98 83       	st	Y, r25
    3380:	c1 5c       	subi	r28, 0xC1	; 193
    3382:	d1 40       	sbci	r29, 0x01	; 1
    3384:	c1 54       	subi	r28, 0x41	; 65
    3386:	de 4f       	sbci	r29, 0xFE	; 254
    3388:	e8 81       	ld	r30, Y
    338a:	f9 81       	ldd	r31, Y+1	; 0x01
    338c:	cf 5b       	subi	r28, 0xBF	; 191
    338e:	d1 40       	sbci	r29, 0x01	; 1
    3390:	00 80       	ld	r0, Z
    3392:	c1 54       	subi	r28, 0x41	; 65
    3394:	de 4f       	sbci	r29, 0xFE	; 254
    3396:	88 81       	ld	r24, Y
    3398:	99 81       	ldd	r25, Y+1	; 0x01
    339a:	cf 5b       	subi	r28, 0xBF	; 191
    339c:	d1 40       	sbci	r29, 0x01	; 1
    339e:	01 96       	adiw	r24, 0x01	; 1
    33a0:	c1 54       	subi	r28, 0x41	; 65
    33a2:	de 4f       	sbci	r29, 0xFE	; 254
    33a4:	99 83       	std	Y+1, r25	; 0x01
    33a6:	88 83       	st	Y, r24
    33a8:	cf 5b       	subi	r28, 0xBF	; 191
    33aa:	d1 40       	sbci	r29, 0x01	; 1
    33ac:	c3 54       	subi	r28, 0x43	; 67
    33ae:	de 4f       	sbci	r29, 0xFE	; 254
    33b0:	e8 81       	ld	r30, Y
    33b2:	f9 81       	ldd	r31, Y+1	; 0x01
    33b4:	cd 5b       	subi	r28, 0xBD	; 189
    33b6:	d1 40       	sbci	r29, 0x01	; 1
    33b8:	00 82       	st	Z, r0
    33ba:	c3 54       	subi	r28, 0x43	; 67
    33bc:	de 4f       	sbci	r29, 0xFE	; 254
    33be:	88 81       	ld	r24, Y
    33c0:	99 81       	ldd	r25, Y+1	; 0x01
    33c2:	cd 5b       	subi	r28, 0xBD	; 189
    33c4:	d1 40       	sbci	r29, 0x01	; 1
    33c6:	01 96       	adiw	r24, 0x01	; 1
    33c8:	c3 54       	subi	r28, 0x43	; 67
    33ca:	de 4f       	sbci	r29, 0xFE	; 254
    33cc:	99 83       	std	Y+1, r25	; 0x01
    33ce:	88 83       	st	Y, r24
    33d0:	cd 5b       	subi	r28, 0xBD	; 189
    33d2:	d1 40       	sbci	r29, 0x01	; 1
    33d4:	cf 53       	subi	r28, 0x3F	; 63
    33d6:	de 4f       	sbci	r29, 0xFE	; 254
    33d8:	98 81       	ld	r25, Y
    33da:	c1 5c       	subi	r28, 0xC1	; 193
    33dc:	d1 40       	sbci	r29, 0x01	; 1
    33de:	91 50       	subi	r25, 0x01	; 1
    33e0:	cf 53       	subi	r28, 0x3F	; 63
    33e2:	de 4f       	sbci	r29, 0xFE	; 254
    33e4:	98 83       	st	Y, r25
    33e6:	c1 5c       	subi	r28, 0xC1	; 193
    33e8:	d1 40       	sbci	r29, 0x01	; 1
    33ea:	cf 53       	subi	r28, 0x3F	; 63
    33ec:	de 4f       	sbci	r29, 0xFE	; 254
    33ee:	e8 81       	ld	r30, Y
    33f0:	c1 5c       	subi	r28, 0xC1	; 193
    33f2:	d1 40       	sbci	r29, 0x01	; 1
    33f4:	ee 23       	and	r30, r30
    33f6:	31 f6       	brne	.-116    	; 0x3384 <main+0x8ba>

	u8 mes15[] = "Dr Ashraf" ;
    33f8:	ce 01       	movw	r24, r28
    33fa:	8e 58       	subi	r24, 0x8E	; 142
    33fc:	9e 4f       	sbci	r25, 0xFE	; 254
    33fe:	ce 53       	subi	r28, 0x3E	; 62
    3400:	de 4f       	sbci	r29, 0xFE	; 254
    3402:	99 83       	std	Y+1, r25	; 0x01
    3404:	88 83       	st	Y, r24
    3406:	c2 5c       	subi	r28, 0xC2	; 194
    3408:	d1 40       	sbci	r29, 0x01	; 1
    340a:	86 e0       	ldi	r24, 0x06	; 6
    340c:	91 e0       	ldi	r25, 0x01	; 1
    340e:	cc 53       	subi	r28, 0x3C	; 60
    3410:	de 4f       	sbci	r29, 0xFE	; 254
    3412:	99 83       	std	Y+1, r25	; 0x01
    3414:	88 83       	st	Y, r24
    3416:	c4 5c       	subi	r28, 0xC4	; 196
    3418:	d1 40       	sbci	r29, 0x01	; 1
    341a:	9a e0       	ldi	r25, 0x0A	; 10
    341c:	ca 53       	subi	r28, 0x3A	; 58
    341e:	de 4f       	sbci	r29, 0xFE	; 254
    3420:	98 83       	st	Y, r25
    3422:	c6 5c       	subi	r28, 0xC6	; 198
    3424:	d1 40       	sbci	r29, 0x01	; 1
    3426:	cc 53       	subi	r28, 0x3C	; 60
    3428:	de 4f       	sbci	r29, 0xFE	; 254
    342a:	e8 81       	ld	r30, Y
    342c:	f9 81       	ldd	r31, Y+1	; 0x01
    342e:	c4 5c       	subi	r28, 0xC4	; 196
    3430:	d1 40       	sbci	r29, 0x01	; 1
    3432:	00 80       	ld	r0, Z
    3434:	cc 53       	subi	r28, 0x3C	; 60
    3436:	de 4f       	sbci	r29, 0xFE	; 254
    3438:	88 81       	ld	r24, Y
    343a:	99 81       	ldd	r25, Y+1	; 0x01
    343c:	c4 5c       	subi	r28, 0xC4	; 196
    343e:	d1 40       	sbci	r29, 0x01	; 1
    3440:	01 96       	adiw	r24, 0x01	; 1
    3442:	cc 53       	subi	r28, 0x3C	; 60
    3444:	de 4f       	sbci	r29, 0xFE	; 254
    3446:	99 83       	std	Y+1, r25	; 0x01
    3448:	88 83       	st	Y, r24
    344a:	c4 5c       	subi	r28, 0xC4	; 196
    344c:	d1 40       	sbci	r29, 0x01	; 1
    344e:	ce 53       	subi	r28, 0x3E	; 62
    3450:	de 4f       	sbci	r29, 0xFE	; 254
    3452:	e8 81       	ld	r30, Y
    3454:	f9 81       	ldd	r31, Y+1	; 0x01
    3456:	c2 5c       	subi	r28, 0xC2	; 194
    3458:	d1 40       	sbci	r29, 0x01	; 1
    345a:	00 82       	st	Z, r0
    345c:	ce 53       	subi	r28, 0x3E	; 62
    345e:	de 4f       	sbci	r29, 0xFE	; 254
    3460:	88 81       	ld	r24, Y
    3462:	99 81       	ldd	r25, Y+1	; 0x01
    3464:	c2 5c       	subi	r28, 0xC2	; 194
    3466:	d1 40       	sbci	r29, 0x01	; 1
    3468:	01 96       	adiw	r24, 0x01	; 1
    346a:	ce 53       	subi	r28, 0x3E	; 62
    346c:	de 4f       	sbci	r29, 0xFE	; 254
    346e:	99 83       	std	Y+1, r25	; 0x01
    3470:	88 83       	st	Y, r24
    3472:	c2 5c       	subi	r28, 0xC2	; 194
    3474:	d1 40       	sbci	r29, 0x01	; 1
    3476:	ca 53       	subi	r28, 0x3A	; 58
    3478:	de 4f       	sbci	r29, 0xFE	; 254
    347a:	98 81       	ld	r25, Y
    347c:	c6 5c       	subi	r28, 0xC6	; 198
    347e:	d1 40       	sbci	r29, 0x01	; 1
    3480:	91 50       	subi	r25, 0x01	; 1
    3482:	ca 53       	subi	r28, 0x3A	; 58
    3484:	de 4f       	sbci	r29, 0xFE	; 254
    3486:	98 83       	st	Y, r25
    3488:	c6 5c       	subi	r28, 0xC6	; 198
    348a:	d1 40       	sbci	r29, 0x01	; 1
    348c:	ca 53       	subi	r28, 0x3A	; 58
    348e:	de 4f       	sbci	r29, 0xFE	; 254
    3490:	e8 81       	ld	r30, Y
    3492:	c6 5c       	subi	r28, 0xC6	; 198
    3494:	d1 40       	sbci	r29, 0x01	; 1
    3496:	ee 23       	and	r30, r30
    3498:	31 f6       	brne	.-116    	; 0x3426 <main+0x95c>

	 LCD4_voidInit();
    349a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <LCD4_voidInit>

	 KeyBad_voidInit();
    349e:	0e 94 bf 08 	call	0x117e	; 0x117e <KeyBad_voidInit>

	 STEPPER_voidInit();
    34a2:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <STEPPER_voidInit>

	 DIO_u8SetPortDirection(DIO_PORT_A , DIO_PORT_OUTPUT) ;
    34a6:	80 e0       	ldi	r24, 0x00	; 0
    34a8:	6f ef       	ldi	r22, 0xFF	; 255
    34aa:	0e 94 67 06 	call	0xcce	; 0xcce <DIO_u8SetPortDirection>


	 LCD4_voidSendString(mes1) ;
    34ae:	ce 01       	movw	r24, r28
    34b0:	84 53       	subi	r24, 0x34	; 52
    34b2:	9f 4f       	sbci	r25, 0xFF	; 255
    34b4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

	 LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    34b8:	80 ec       	ldi	r24, 0xC0	; 192
    34ba:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	 LCD4_voidSendString(mes9) ;
    34be:	ce 01       	movw	r24, r28
    34c0:	8d 5b       	subi	r24, 0xBD	; 189
    34c2:	9e 4f       	sbci	r25, 0xFE	; 254
    34c4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

	 LCD4_voidSendCmd(LCD_CLEAR);
    34c8:	81 e0       	ldi	r24, 0x01	; 1
    34ca:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    34ce:	fe 01       	movw	r30, r28
    34d0:	ef 53       	subi	r30, 0x3F	; 63
    34d2:	ff 4f       	sbci	r31, 0xFF	; 255
    34d4:	80 e0       	ldi	r24, 0x00	; 0
    34d6:	90 e0       	ldi	r25, 0x00	; 0
    34d8:	a0 e2       	ldi	r26, 0x20	; 32
    34da:	b1 e4       	ldi	r27, 0x41	; 65
    34dc:	80 83       	st	Z, r24
    34de:	91 83       	std	Z+1, r25	; 0x01
    34e0:	a2 83       	std	Z+2, r26	; 0x02
    34e2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    34e4:	8e 01       	movw	r16, r28
    34e6:	03 54       	subi	r16, 0x43	; 67
    34e8:	1f 4f       	sbci	r17, 0xFF	; 255
    34ea:	fe 01       	movw	r30, r28
    34ec:	ef 53       	subi	r30, 0x3F	; 63
    34ee:	ff 4f       	sbci	r31, 0xFF	; 255
    34f0:	60 81       	ld	r22, Z
    34f2:	71 81       	ldd	r23, Z+1	; 0x01
    34f4:	82 81       	ldd	r24, Z+2	; 0x02
    34f6:	93 81       	ldd	r25, Z+3	; 0x03
    34f8:	20 e0       	ldi	r18, 0x00	; 0
    34fa:	30 e0       	ldi	r19, 0x00	; 0
    34fc:	4a ef       	ldi	r20, 0xFA	; 250
    34fe:	54 e4       	ldi	r21, 0x44	; 68
    3500:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3504:	dc 01       	movw	r26, r24
    3506:	cb 01       	movw	r24, r22
    3508:	f8 01       	movw	r30, r16
    350a:	80 83       	st	Z, r24
    350c:	91 83       	std	Z+1, r25	; 0x01
    350e:	a2 83       	std	Z+2, r26	; 0x02
    3510:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3512:	fe 01       	movw	r30, r28
    3514:	e3 54       	subi	r30, 0x43	; 67
    3516:	ff 4f       	sbci	r31, 0xFF	; 255
    3518:	60 81       	ld	r22, Z
    351a:	71 81       	ldd	r23, Z+1	; 0x01
    351c:	82 81       	ldd	r24, Z+2	; 0x02
    351e:	93 81       	ldd	r25, Z+3	; 0x03
    3520:	20 e0       	ldi	r18, 0x00	; 0
    3522:	30 e0       	ldi	r19, 0x00	; 0
    3524:	40 e8       	ldi	r20, 0x80	; 128
    3526:	5f e3       	ldi	r21, 0x3F	; 63
    3528:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    352c:	88 23       	and	r24, r24
    352e:	44 f4       	brge	.+16     	; 0x3540 <main+0xa76>
		__ticks = 1;
    3530:	fe 01       	movw	r30, r28
    3532:	e5 54       	subi	r30, 0x45	; 69
    3534:	ff 4f       	sbci	r31, 0xFF	; 255
    3536:	81 e0       	ldi	r24, 0x01	; 1
    3538:	90 e0       	ldi	r25, 0x00	; 0
    353a:	91 83       	std	Z+1, r25	; 0x01
    353c:	80 83       	st	Z, r24
    353e:	64 c0       	rjmp	.+200    	; 0x3608 <main+0xb3e>
	else if (__tmp > 65535)
    3540:	fe 01       	movw	r30, r28
    3542:	e3 54       	subi	r30, 0x43	; 67
    3544:	ff 4f       	sbci	r31, 0xFF	; 255
    3546:	60 81       	ld	r22, Z
    3548:	71 81       	ldd	r23, Z+1	; 0x01
    354a:	82 81       	ldd	r24, Z+2	; 0x02
    354c:	93 81       	ldd	r25, Z+3	; 0x03
    354e:	20 e0       	ldi	r18, 0x00	; 0
    3550:	3f ef       	ldi	r19, 0xFF	; 255
    3552:	4f e7       	ldi	r20, 0x7F	; 127
    3554:	57 e4       	ldi	r21, 0x47	; 71
    3556:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    355a:	18 16       	cp	r1, r24
    355c:	0c f0       	brlt	.+2      	; 0x3560 <main+0xa96>
    355e:	43 c0       	rjmp	.+134    	; 0x35e6 <main+0xb1c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3560:	fe 01       	movw	r30, r28
    3562:	ef 53       	subi	r30, 0x3F	; 63
    3564:	ff 4f       	sbci	r31, 0xFF	; 255
    3566:	60 81       	ld	r22, Z
    3568:	71 81       	ldd	r23, Z+1	; 0x01
    356a:	82 81       	ldd	r24, Z+2	; 0x02
    356c:	93 81       	ldd	r25, Z+3	; 0x03
    356e:	20 e0       	ldi	r18, 0x00	; 0
    3570:	30 e0       	ldi	r19, 0x00	; 0
    3572:	40 e2       	ldi	r20, 0x20	; 32
    3574:	51 e4       	ldi	r21, 0x41	; 65
    3576:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    357a:	dc 01       	movw	r26, r24
    357c:	cb 01       	movw	r24, r22
    357e:	8e 01       	movw	r16, r28
    3580:	05 54       	subi	r16, 0x45	; 69
    3582:	1f 4f       	sbci	r17, 0xFF	; 255
    3584:	bc 01       	movw	r22, r24
    3586:	cd 01       	movw	r24, r26
    3588:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    358c:	dc 01       	movw	r26, r24
    358e:	cb 01       	movw	r24, r22
    3590:	f8 01       	movw	r30, r16
    3592:	91 83       	std	Z+1, r25	; 0x01
    3594:	80 83       	st	Z, r24
    3596:	1f c0       	rjmp	.+62     	; 0x35d6 <main+0xb0c>
    3598:	fe 01       	movw	r30, r28
    359a:	e7 54       	subi	r30, 0x47	; 71
    359c:	ff 4f       	sbci	r31, 0xFF	; 255
    359e:	88 ec       	ldi	r24, 0xC8	; 200
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	91 83       	std	Z+1, r25	; 0x01
    35a4:	80 83       	st	Z, r24
    35a6:	fe 01       	movw	r30, r28
    35a8:	e7 54       	subi	r30, 0x47	; 71
    35aa:	ff 4f       	sbci	r31, 0xFF	; 255
    35ac:	80 81       	ld	r24, Z
    35ae:	91 81       	ldd	r25, Z+1	; 0x01
    35b0:	01 97       	sbiw	r24, 0x01	; 1
    35b2:	f1 f7       	brne	.-4      	; 0x35b0 <main+0xae6>
    35b4:	fe 01       	movw	r30, r28
    35b6:	e7 54       	subi	r30, 0x47	; 71
    35b8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ba:	91 83       	std	Z+1, r25	; 0x01
    35bc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35be:	de 01       	movw	r26, r28
    35c0:	a5 54       	subi	r26, 0x45	; 69
    35c2:	bf 4f       	sbci	r27, 0xFF	; 255
    35c4:	fe 01       	movw	r30, r28
    35c6:	e5 54       	subi	r30, 0x45	; 69
    35c8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ca:	80 81       	ld	r24, Z
    35cc:	91 81       	ldd	r25, Z+1	; 0x01
    35ce:	01 97       	sbiw	r24, 0x01	; 1
    35d0:	11 96       	adiw	r26, 0x01	; 1
    35d2:	9c 93       	st	X, r25
    35d4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35d6:	fe 01       	movw	r30, r28
    35d8:	e5 54       	subi	r30, 0x45	; 69
    35da:	ff 4f       	sbci	r31, 0xFF	; 255
    35dc:	80 81       	ld	r24, Z
    35de:	91 81       	ldd	r25, Z+1	; 0x01
    35e0:	00 97       	sbiw	r24, 0x00	; 0
    35e2:	d1 f6       	brne	.-76     	; 0x3598 <main+0xace>
    35e4:	27 c0       	rjmp	.+78     	; 0x3634 <main+0xb6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35e6:	8e 01       	movw	r16, r28
    35e8:	05 54       	subi	r16, 0x45	; 69
    35ea:	1f 4f       	sbci	r17, 0xFF	; 255
    35ec:	fe 01       	movw	r30, r28
    35ee:	e3 54       	subi	r30, 0x43	; 67
    35f0:	ff 4f       	sbci	r31, 0xFF	; 255
    35f2:	60 81       	ld	r22, Z
    35f4:	71 81       	ldd	r23, Z+1	; 0x01
    35f6:	82 81       	ldd	r24, Z+2	; 0x02
    35f8:	93 81       	ldd	r25, Z+3	; 0x03
    35fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35fe:	dc 01       	movw	r26, r24
    3600:	cb 01       	movw	r24, r22
    3602:	f8 01       	movw	r30, r16
    3604:	91 83       	std	Z+1, r25	; 0x01
    3606:	80 83       	st	Z, r24
    3608:	de 01       	movw	r26, r28
    360a:	a9 54       	subi	r26, 0x49	; 73
    360c:	bf 4f       	sbci	r27, 0xFF	; 255
    360e:	fe 01       	movw	r30, r28
    3610:	e5 54       	subi	r30, 0x45	; 69
    3612:	ff 4f       	sbci	r31, 0xFF	; 255
    3614:	80 81       	ld	r24, Z
    3616:	91 81       	ldd	r25, Z+1	; 0x01
    3618:	8d 93       	st	X+, r24
    361a:	9c 93       	st	X, r25
    361c:	fe 01       	movw	r30, r28
    361e:	e9 54       	subi	r30, 0x49	; 73
    3620:	ff 4f       	sbci	r31, 0xFF	; 255
    3622:	80 81       	ld	r24, Z
    3624:	91 81       	ldd	r25, Z+1	; 0x01
    3626:	01 97       	sbiw	r24, 0x01	; 1
    3628:	f1 f7       	brne	.-4      	; 0x3626 <main+0xb5c>
    362a:	fe 01       	movw	r30, r28
    362c:	e9 54       	subi	r30, 0x49	; 73
    362e:	ff 4f       	sbci	r31, 0xFF	; 255
    3630:	91 83       	std	Z+1, r25	; 0x01
    3632:	80 83       	st	Z, r24

	 _delay_ms(10) ;

	 LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    3634:	80 e8       	ldi	r24, 0x80	; 128
    3636:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	 LCD4_voidSendString(mes15) ;
    363a:	ce 01       	movw	r24, r28
    363c:	8e 58       	subi	r24, 0x8E	; 142
    363e:	9e 4f       	sbci	r25, 0xFE	; 254
    3640:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>
    3644:	fe 01       	movw	r30, r28
    3646:	ed 54       	subi	r30, 0x4D	; 77
    3648:	ff 4f       	sbci	r31, 0xFF	; 255
    364a:	80 e0       	ldi	r24, 0x00	; 0
    364c:	90 e0       	ldi	r25, 0x00	; 0
    364e:	aa ef       	ldi	r26, 0xFA	; 250
    3650:	b3 e4       	ldi	r27, 0x43	; 67
    3652:	80 83       	st	Z, r24
    3654:	91 83       	std	Z+1, r25	; 0x01
    3656:	a2 83       	std	Z+2, r26	; 0x02
    3658:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    365a:	8e 01       	movw	r16, r28
    365c:	01 55       	subi	r16, 0x51	; 81
    365e:	1f 4f       	sbci	r17, 0xFF	; 255
    3660:	fe 01       	movw	r30, r28
    3662:	ed 54       	subi	r30, 0x4D	; 77
    3664:	ff 4f       	sbci	r31, 0xFF	; 255
    3666:	60 81       	ld	r22, Z
    3668:	71 81       	ldd	r23, Z+1	; 0x01
    366a:	82 81       	ldd	r24, Z+2	; 0x02
    366c:	93 81       	ldd	r25, Z+3	; 0x03
    366e:	20 e0       	ldi	r18, 0x00	; 0
    3670:	30 e0       	ldi	r19, 0x00	; 0
    3672:	4a ef       	ldi	r20, 0xFA	; 250
    3674:	54 e4       	ldi	r21, 0x44	; 68
    3676:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    367a:	dc 01       	movw	r26, r24
    367c:	cb 01       	movw	r24, r22
    367e:	f8 01       	movw	r30, r16
    3680:	80 83       	st	Z, r24
    3682:	91 83       	std	Z+1, r25	; 0x01
    3684:	a2 83       	std	Z+2, r26	; 0x02
    3686:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3688:	fe 01       	movw	r30, r28
    368a:	e1 55       	subi	r30, 0x51	; 81
    368c:	ff 4f       	sbci	r31, 0xFF	; 255
    368e:	60 81       	ld	r22, Z
    3690:	71 81       	ldd	r23, Z+1	; 0x01
    3692:	82 81       	ldd	r24, Z+2	; 0x02
    3694:	93 81       	ldd	r25, Z+3	; 0x03
    3696:	20 e0       	ldi	r18, 0x00	; 0
    3698:	30 e0       	ldi	r19, 0x00	; 0
    369a:	40 e8       	ldi	r20, 0x80	; 128
    369c:	5f e3       	ldi	r21, 0x3F	; 63
    369e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    36a2:	88 23       	and	r24, r24
    36a4:	44 f4       	brge	.+16     	; 0x36b6 <main+0xbec>
		__ticks = 1;
    36a6:	fe 01       	movw	r30, r28
    36a8:	e3 55       	subi	r30, 0x53	; 83
    36aa:	ff 4f       	sbci	r31, 0xFF	; 255
    36ac:	81 e0       	ldi	r24, 0x01	; 1
    36ae:	90 e0       	ldi	r25, 0x00	; 0
    36b0:	91 83       	std	Z+1, r25	; 0x01
    36b2:	80 83       	st	Z, r24
    36b4:	64 c0       	rjmp	.+200    	; 0x377e <main+0xcb4>
	else if (__tmp > 65535)
    36b6:	fe 01       	movw	r30, r28
    36b8:	e1 55       	subi	r30, 0x51	; 81
    36ba:	ff 4f       	sbci	r31, 0xFF	; 255
    36bc:	60 81       	ld	r22, Z
    36be:	71 81       	ldd	r23, Z+1	; 0x01
    36c0:	82 81       	ldd	r24, Z+2	; 0x02
    36c2:	93 81       	ldd	r25, Z+3	; 0x03
    36c4:	20 e0       	ldi	r18, 0x00	; 0
    36c6:	3f ef       	ldi	r19, 0xFF	; 255
    36c8:	4f e7       	ldi	r20, 0x7F	; 127
    36ca:	57 e4       	ldi	r21, 0x47	; 71
    36cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    36d0:	18 16       	cp	r1, r24
    36d2:	0c f0       	brlt	.+2      	; 0x36d6 <main+0xc0c>
    36d4:	43 c0       	rjmp	.+134    	; 0x375c <main+0xc92>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36d6:	fe 01       	movw	r30, r28
    36d8:	ed 54       	subi	r30, 0x4D	; 77
    36da:	ff 4f       	sbci	r31, 0xFF	; 255
    36dc:	60 81       	ld	r22, Z
    36de:	71 81       	ldd	r23, Z+1	; 0x01
    36e0:	82 81       	ldd	r24, Z+2	; 0x02
    36e2:	93 81       	ldd	r25, Z+3	; 0x03
    36e4:	20 e0       	ldi	r18, 0x00	; 0
    36e6:	30 e0       	ldi	r19, 0x00	; 0
    36e8:	40 e2       	ldi	r20, 0x20	; 32
    36ea:	51 e4       	ldi	r21, 0x41	; 65
    36ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36f0:	dc 01       	movw	r26, r24
    36f2:	cb 01       	movw	r24, r22
    36f4:	8e 01       	movw	r16, r28
    36f6:	03 55       	subi	r16, 0x53	; 83
    36f8:	1f 4f       	sbci	r17, 0xFF	; 255
    36fa:	bc 01       	movw	r22, r24
    36fc:	cd 01       	movw	r24, r26
    36fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3702:	dc 01       	movw	r26, r24
    3704:	cb 01       	movw	r24, r22
    3706:	f8 01       	movw	r30, r16
    3708:	91 83       	std	Z+1, r25	; 0x01
    370a:	80 83       	st	Z, r24
    370c:	1f c0       	rjmp	.+62     	; 0x374c <main+0xc82>
    370e:	fe 01       	movw	r30, r28
    3710:	e5 55       	subi	r30, 0x55	; 85
    3712:	ff 4f       	sbci	r31, 0xFF	; 255
    3714:	88 ec       	ldi	r24, 0xC8	; 200
    3716:	90 e0       	ldi	r25, 0x00	; 0
    3718:	91 83       	std	Z+1, r25	; 0x01
    371a:	80 83       	st	Z, r24
    371c:	fe 01       	movw	r30, r28
    371e:	e5 55       	subi	r30, 0x55	; 85
    3720:	ff 4f       	sbci	r31, 0xFF	; 255
    3722:	80 81       	ld	r24, Z
    3724:	91 81       	ldd	r25, Z+1	; 0x01
    3726:	01 97       	sbiw	r24, 0x01	; 1
    3728:	f1 f7       	brne	.-4      	; 0x3726 <main+0xc5c>
    372a:	fe 01       	movw	r30, r28
    372c:	e5 55       	subi	r30, 0x55	; 85
    372e:	ff 4f       	sbci	r31, 0xFF	; 255
    3730:	91 83       	std	Z+1, r25	; 0x01
    3732:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3734:	de 01       	movw	r26, r28
    3736:	a3 55       	subi	r26, 0x53	; 83
    3738:	bf 4f       	sbci	r27, 0xFF	; 255
    373a:	fe 01       	movw	r30, r28
    373c:	e3 55       	subi	r30, 0x53	; 83
    373e:	ff 4f       	sbci	r31, 0xFF	; 255
    3740:	80 81       	ld	r24, Z
    3742:	91 81       	ldd	r25, Z+1	; 0x01
    3744:	01 97       	sbiw	r24, 0x01	; 1
    3746:	11 96       	adiw	r26, 0x01	; 1
    3748:	9c 93       	st	X, r25
    374a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    374c:	fe 01       	movw	r30, r28
    374e:	e3 55       	subi	r30, 0x53	; 83
    3750:	ff 4f       	sbci	r31, 0xFF	; 255
    3752:	80 81       	ld	r24, Z
    3754:	91 81       	ldd	r25, Z+1	; 0x01
    3756:	00 97       	sbiw	r24, 0x00	; 0
    3758:	d1 f6       	brne	.-76     	; 0x370e <main+0xc44>
    375a:	27 c0       	rjmp	.+78     	; 0x37aa <main+0xce0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    375c:	8e 01       	movw	r16, r28
    375e:	03 55       	subi	r16, 0x53	; 83
    3760:	1f 4f       	sbci	r17, 0xFF	; 255
    3762:	fe 01       	movw	r30, r28
    3764:	e1 55       	subi	r30, 0x51	; 81
    3766:	ff 4f       	sbci	r31, 0xFF	; 255
    3768:	60 81       	ld	r22, Z
    376a:	71 81       	ldd	r23, Z+1	; 0x01
    376c:	82 81       	ldd	r24, Z+2	; 0x02
    376e:	93 81       	ldd	r25, Z+3	; 0x03
    3770:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3774:	dc 01       	movw	r26, r24
    3776:	cb 01       	movw	r24, r22
    3778:	f8 01       	movw	r30, r16
    377a:	91 83       	std	Z+1, r25	; 0x01
    377c:	80 83       	st	Z, r24
    377e:	de 01       	movw	r26, r28
    3780:	a7 55       	subi	r26, 0x57	; 87
    3782:	bf 4f       	sbci	r27, 0xFF	; 255
    3784:	fe 01       	movw	r30, r28
    3786:	e3 55       	subi	r30, 0x53	; 83
    3788:	ff 4f       	sbci	r31, 0xFF	; 255
    378a:	80 81       	ld	r24, Z
    378c:	91 81       	ldd	r25, Z+1	; 0x01
    378e:	8d 93       	st	X+, r24
    3790:	9c 93       	st	X, r25
    3792:	fe 01       	movw	r30, r28
    3794:	e7 55       	subi	r30, 0x57	; 87
    3796:	ff 4f       	sbci	r31, 0xFF	; 255
    3798:	80 81       	ld	r24, Z
    379a:	91 81       	ldd	r25, Z+1	; 0x01
    379c:	01 97       	sbiw	r24, 0x01	; 1
    379e:	f1 f7       	brne	.-4      	; 0x379c <main+0xcd2>
    37a0:	fe 01       	movw	r30, r28
    37a2:	e7 55       	subi	r30, 0x57	; 87
    37a4:	ff 4f       	sbci	r31, 0xFF	; 255
    37a6:	91 83       	std	Z+1, r25	; 0x01
    37a8:	80 83       	st	Z, r24

	 _delay_ms(500) ;

	 LCD4_voidSendCmd(LCD_CLEAR);
    37aa:	81 e0       	ldi	r24, 0x01	; 1
    37ac:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	 LCD4_voidSendString(mes2) ;
    37b0:	ce 01       	movw	r24, r28
    37b2:	84 52       	subi	r24, 0x24	; 36
    37b4:	9f 4f       	sbci	r25, 0xFF	; 255
    37b6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

	 LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    37ba:	80 ec       	ldi	r24, 0xC0	; 192
    37bc:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	 LCD4_voidSendString(mes3) ;
    37c0:	ce 01       	movw	r24, r28
    37c2:	83 51       	subi	r24, 0x13	; 19
    37c4:	9f 4f       	sbci	r25, 0xFF	; 255
    37c6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>


	while(1)
	{

if(!(x == 1))
    37ca:	fe 01       	movw	r30, r28
    37cc:	e7 53       	subi	r30, 0x37	; 55
    37ce:	ff 4f       	sbci	r31, 0xFF	; 255
    37d0:	80 81       	ld	r24, Z
    37d2:	81 30       	cpi	r24, 0x01	; 1
    37d4:	29 f0       	breq	.+10     	; 0x37e0 <main+0xd16>
{
	KeyBad_u8GetKey(&chary);
    37d6:	ce 01       	movw	r24, r28
    37d8:	86 53       	subi	r24, 0x36	; 54
    37da:	9f 4f       	sbci	r25, 0xFF	; 255
    37dc:	0e 94 ce 08 	call	0x119c	; 0x119c <KeyBad_u8GetKey>
}


	if(chary == 1)
    37e0:	fe 01       	movw	r30, r28
    37e2:	e6 53       	subi	r30, 0x36	; 54
    37e4:	ff 4f       	sbci	r31, 0xFF	; 255
    37e6:	80 81       	ld	r24, Z
    37e8:	81 30       	cpi	r24, 0x01	; 1
    37ea:	09 f0       	breq	.+2      	; 0x37ee <main+0xd24>
    37ec:	fd c4       	rjmp	.+2554   	; 0x41e8 <main+0x171e>
	{
		x = 1;
    37ee:	fe 01       	movw	r30, r28
    37f0:	e7 53       	subi	r30, 0x37	; 55
    37f2:	ff 4f       	sbci	r31, 0xFF	; 255
    37f4:	81 e0       	ldi	r24, 0x01	; 1
    37f6:	80 83       	st	Z, r24

		if (counter == 0)
    37f8:	fe 01       	movw	r30, r28
    37fa:	e8 53       	subi	r30, 0x38	; 56
    37fc:	ff 4f       	sbci	r31, 0xFF	; 255
    37fe:	80 81       	ld	r24, Z
    3800:	88 23       	and	r24, r24
    3802:	09 f0       	breq	.+2      	; 0x3806 <main+0xd3c>
    3804:	c6 c0       	rjmp	.+396    	; 0x3992 <main+0xec8>
		{
			LCD4_voidSendCmd(LCD_CLEAR);
    3806:	81 e0       	ldi	r24, 0x01	; 1
    3808:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    380c:	fe 01       	movw	r30, r28
    380e:	eb 55       	subi	r30, 0x5B	; 91
    3810:	ff 4f       	sbci	r31, 0xFF	; 255
    3812:	80 e0       	ldi	r24, 0x00	; 0
    3814:	90 e0       	ldi	r25, 0x00	; 0
    3816:	a0 e2       	ldi	r26, 0x20	; 32
    3818:	b1 e4       	ldi	r27, 0x41	; 65
    381a:	80 83       	st	Z, r24
    381c:	91 83       	std	Z+1, r25	; 0x01
    381e:	a2 83       	std	Z+2, r26	; 0x02
    3820:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3822:	8e 01       	movw	r16, r28
    3824:	0f 55       	subi	r16, 0x5F	; 95
    3826:	1f 4f       	sbci	r17, 0xFF	; 255
    3828:	fe 01       	movw	r30, r28
    382a:	eb 55       	subi	r30, 0x5B	; 91
    382c:	ff 4f       	sbci	r31, 0xFF	; 255
    382e:	60 81       	ld	r22, Z
    3830:	71 81       	ldd	r23, Z+1	; 0x01
    3832:	82 81       	ldd	r24, Z+2	; 0x02
    3834:	93 81       	ldd	r25, Z+3	; 0x03
    3836:	20 e0       	ldi	r18, 0x00	; 0
    3838:	30 e0       	ldi	r19, 0x00	; 0
    383a:	4a ef       	ldi	r20, 0xFA	; 250
    383c:	54 e4       	ldi	r21, 0x44	; 68
    383e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3842:	dc 01       	movw	r26, r24
    3844:	cb 01       	movw	r24, r22
    3846:	f8 01       	movw	r30, r16
    3848:	80 83       	st	Z, r24
    384a:	91 83       	std	Z+1, r25	; 0x01
    384c:	a2 83       	std	Z+2, r26	; 0x02
    384e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3850:	fe 01       	movw	r30, r28
    3852:	ef 55       	subi	r30, 0x5F	; 95
    3854:	ff 4f       	sbci	r31, 0xFF	; 255
    3856:	60 81       	ld	r22, Z
    3858:	71 81       	ldd	r23, Z+1	; 0x01
    385a:	82 81       	ldd	r24, Z+2	; 0x02
    385c:	93 81       	ldd	r25, Z+3	; 0x03
    385e:	20 e0       	ldi	r18, 0x00	; 0
    3860:	30 e0       	ldi	r19, 0x00	; 0
    3862:	40 e8       	ldi	r20, 0x80	; 128
    3864:	5f e3       	ldi	r21, 0x3F	; 63
    3866:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    386a:	88 23       	and	r24, r24
    386c:	44 f4       	brge	.+16     	; 0x387e <main+0xdb4>
		__ticks = 1;
    386e:	fe 01       	movw	r30, r28
    3870:	e1 56       	subi	r30, 0x61	; 97
    3872:	ff 4f       	sbci	r31, 0xFF	; 255
    3874:	81 e0       	ldi	r24, 0x01	; 1
    3876:	90 e0       	ldi	r25, 0x00	; 0
    3878:	91 83       	std	Z+1, r25	; 0x01
    387a:	80 83       	st	Z, r24
    387c:	64 c0       	rjmp	.+200    	; 0x3946 <main+0xe7c>
	else if (__tmp > 65535)
    387e:	fe 01       	movw	r30, r28
    3880:	ef 55       	subi	r30, 0x5F	; 95
    3882:	ff 4f       	sbci	r31, 0xFF	; 255
    3884:	60 81       	ld	r22, Z
    3886:	71 81       	ldd	r23, Z+1	; 0x01
    3888:	82 81       	ldd	r24, Z+2	; 0x02
    388a:	93 81       	ldd	r25, Z+3	; 0x03
    388c:	20 e0       	ldi	r18, 0x00	; 0
    388e:	3f ef       	ldi	r19, 0xFF	; 255
    3890:	4f e7       	ldi	r20, 0x7F	; 127
    3892:	57 e4       	ldi	r21, 0x47	; 71
    3894:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3898:	18 16       	cp	r1, r24
    389a:	0c f0       	brlt	.+2      	; 0x389e <main+0xdd4>
    389c:	43 c0       	rjmp	.+134    	; 0x3924 <main+0xe5a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    389e:	fe 01       	movw	r30, r28
    38a0:	eb 55       	subi	r30, 0x5B	; 91
    38a2:	ff 4f       	sbci	r31, 0xFF	; 255
    38a4:	60 81       	ld	r22, Z
    38a6:	71 81       	ldd	r23, Z+1	; 0x01
    38a8:	82 81       	ldd	r24, Z+2	; 0x02
    38aa:	93 81       	ldd	r25, Z+3	; 0x03
    38ac:	20 e0       	ldi	r18, 0x00	; 0
    38ae:	30 e0       	ldi	r19, 0x00	; 0
    38b0:	40 e2       	ldi	r20, 0x20	; 32
    38b2:	51 e4       	ldi	r21, 0x41	; 65
    38b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38b8:	dc 01       	movw	r26, r24
    38ba:	cb 01       	movw	r24, r22
    38bc:	8e 01       	movw	r16, r28
    38be:	01 56       	subi	r16, 0x61	; 97
    38c0:	1f 4f       	sbci	r17, 0xFF	; 255
    38c2:	bc 01       	movw	r22, r24
    38c4:	cd 01       	movw	r24, r26
    38c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38ca:	dc 01       	movw	r26, r24
    38cc:	cb 01       	movw	r24, r22
    38ce:	f8 01       	movw	r30, r16
    38d0:	91 83       	std	Z+1, r25	; 0x01
    38d2:	80 83       	st	Z, r24
    38d4:	1f c0       	rjmp	.+62     	; 0x3914 <main+0xe4a>
    38d6:	fe 01       	movw	r30, r28
    38d8:	e3 56       	subi	r30, 0x63	; 99
    38da:	ff 4f       	sbci	r31, 0xFF	; 255
    38dc:	88 ec       	ldi	r24, 0xC8	; 200
    38de:	90 e0       	ldi	r25, 0x00	; 0
    38e0:	91 83       	std	Z+1, r25	; 0x01
    38e2:	80 83       	st	Z, r24
    38e4:	fe 01       	movw	r30, r28
    38e6:	e3 56       	subi	r30, 0x63	; 99
    38e8:	ff 4f       	sbci	r31, 0xFF	; 255
    38ea:	80 81       	ld	r24, Z
    38ec:	91 81       	ldd	r25, Z+1	; 0x01
    38ee:	01 97       	sbiw	r24, 0x01	; 1
    38f0:	f1 f7       	brne	.-4      	; 0x38ee <main+0xe24>
    38f2:	fe 01       	movw	r30, r28
    38f4:	e3 56       	subi	r30, 0x63	; 99
    38f6:	ff 4f       	sbci	r31, 0xFF	; 255
    38f8:	91 83       	std	Z+1, r25	; 0x01
    38fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38fc:	de 01       	movw	r26, r28
    38fe:	a1 56       	subi	r26, 0x61	; 97
    3900:	bf 4f       	sbci	r27, 0xFF	; 255
    3902:	fe 01       	movw	r30, r28
    3904:	e1 56       	subi	r30, 0x61	; 97
    3906:	ff 4f       	sbci	r31, 0xFF	; 255
    3908:	80 81       	ld	r24, Z
    390a:	91 81       	ldd	r25, Z+1	; 0x01
    390c:	01 97       	sbiw	r24, 0x01	; 1
    390e:	11 96       	adiw	r26, 0x01	; 1
    3910:	9c 93       	st	X, r25
    3912:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3914:	fe 01       	movw	r30, r28
    3916:	e1 56       	subi	r30, 0x61	; 97
    3918:	ff 4f       	sbci	r31, 0xFF	; 255
    391a:	80 81       	ld	r24, Z
    391c:	91 81       	ldd	r25, Z+1	; 0x01
    391e:	00 97       	sbiw	r24, 0x00	; 0
    3920:	d1 f6       	brne	.-76     	; 0x38d6 <main+0xe0c>
    3922:	27 c0       	rjmp	.+78     	; 0x3972 <main+0xea8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3924:	8e 01       	movw	r16, r28
    3926:	01 56       	subi	r16, 0x61	; 97
    3928:	1f 4f       	sbci	r17, 0xFF	; 255
    392a:	fe 01       	movw	r30, r28
    392c:	ef 55       	subi	r30, 0x5F	; 95
    392e:	ff 4f       	sbci	r31, 0xFF	; 255
    3930:	60 81       	ld	r22, Z
    3932:	71 81       	ldd	r23, Z+1	; 0x01
    3934:	82 81       	ldd	r24, Z+2	; 0x02
    3936:	93 81       	ldd	r25, Z+3	; 0x03
    3938:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    393c:	dc 01       	movw	r26, r24
    393e:	cb 01       	movw	r24, r22
    3940:	f8 01       	movw	r30, r16
    3942:	91 83       	std	Z+1, r25	; 0x01
    3944:	80 83       	st	Z, r24
    3946:	de 01       	movw	r26, r28
    3948:	a5 56       	subi	r26, 0x65	; 101
    394a:	bf 4f       	sbci	r27, 0xFF	; 255
    394c:	fe 01       	movw	r30, r28
    394e:	e1 56       	subi	r30, 0x61	; 97
    3950:	ff 4f       	sbci	r31, 0xFF	; 255
    3952:	80 81       	ld	r24, Z
    3954:	91 81       	ldd	r25, Z+1	; 0x01
    3956:	8d 93       	st	X+, r24
    3958:	9c 93       	st	X, r25
    395a:	fe 01       	movw	r30, r28
    395c:	e5 56       	subi	r30, 0x65	; 101
    395e:	ff 4f       	sbci	r31, 0xFF	; 255
    3960:	80 81       	ld	r24, Z
    3962:	91 81       	ldd	r25, Z+1	; 0x01
    3964:	01 97       	sbiw	r24, 0x01	; 1
    3966:	f1 f7       	brne	.-4      	; 0x3964 <main+0xe9a>
    3968:	fe 01       	movw	r30, r28
    396a:	e5 56       	subi	r30, 0x65	; 101
    396c:	ff 4f       	sbci	r31, 0xFF	; 255
    396e:	91 83       	std	Z+1, r25	; 0x01
    3970:	80 83       	st	Z, r24

			_delay_ms(10) ;

			LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    3972:	80 e8       	ldi	r24, 0x80	; 128
    3974:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

			LCD4_voidSendString(mes4) ;
    3978:	ce 01       	movw	r24, r28
    397a:	87 50       	subi	r24, 0x07	; 7
    397c:	9f 4f       	sbci	r25, 0xFF	; 255
    397e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

			LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    3982:	80 ec       	ldi	r24, 0xC0	; 192
    3984:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

			LCD4_voidSendString(mes5) ;
    3988:	ce 01       	movw	r24, r28
    398a:	89 5f       	subi	r24, 0xF9	; 249
    398c:	9e 4f       	sbci	r25, 0xFE	; 254
    398e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

		}
		KeyBad_u8GetKey(&chary1);
    3992:	ce 01       	movw	r24, r28
    3994:	85 53       	subi	r24, 0x35	; 53
    3996:	9f 4f       	sbci	r25, 0xFF	; 255
    3998:	0e 94 ce 08 	call	0x119c	; 0x119c <KeyBad_u8GetKey>

            if(chary1 == 1)
    399c:	fe 01       	movw	r30, r28
    399e:	e5 53       	subi	r30, 0x35	; 53
    39a0:	ff 4f       	sbci	r31, 0xFF	; 255
    39a2:	80 81       	ld	r24, Z
    39a4:	81 30       	cpi	r24, 0x01	; 1
    39a6:	09 f0       	breq	.+2      	; 0x39aa <main+0xee0>
    39a8:	dc c0       	rjmp	.+440    	; 0x3b62 <main+0x1098>
            	{

            	if (counter1 == 0)
    39aa:	fe 01       	movw	r30, r28
    39ac:	e9 53       	subi	r30, 0x39	; 57
    39ae:	ff 4f       	sbci	r31, 0xFF	; 255
    39b0:	80 81       	ld	r24, Z
    39b2:	88 23       	and	r24, r24
    39b4:	09 f0       	breq	.+2      	; 0x39b8 <main+0xeee>
    39b6:	c9 c0       	rjmp	.+402    	; 0x3b4a <main+0x1080>
      {
            		LCD4_voidSendCmd(LCD_CLEAR);
    39b8:	81 e0       	ldi	r24, 0x01	; 1
    39ba:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    39be:	fe 01       	movw	r30, r28
    39c0:	e9 56       	subi	r30, 0x69	; 105
    39c2:	ff 4f       	sbci	r31, 0xFF	; 255
    39c4:	80 e0       	ldi	r24, 0x00	; 0
    39c6:	90 e0       	ldi	r25, 0x00	; 0
    39c8:	a0 e2       	ldi	r26, 0x20	; 32
    39ca:	b1 e4       	ldi	r27, 0x41	; 65
    39cc:	80 83       	st	Z, r24
    39ce:	91 83       	std	Z+1, r25	; 0x01
    39d0:	a2 83       	std	Z+2, r26	; 0x02
    39d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39d4:	8e 01       	movw	r16, r28
    39d6:	0d 56       	subi	r16, 0x6D	; 109
    39d8:	1f 4f       	sbci	r17, 0xFF	; 255
    39da:	fe 01       	movw	r30, r28
    39dc:	e9 56       	subi	r30, 0x69	; 105
    39de:	ff 4f       	sbci	r31, 0xFF	; 255
    39e0:	60 81       	ld	r22, Z
    39e2:	71 81       	ldd	r23, Z+1	; 0x01
    39e4:	82 81       	ldd	r24, Z+2	; 0x02
    39e6:	93 81       	ldd	r25, Z+3	; 0x03
    39e8:	20 e0       	ldi	r18, 0x00	; 0
    39ea:	30 e0       	ldi	r19, 0x00	; 0
    39ec:	4a ef       	ldi	r20, 0xFA	; 250
    39ee:	54 e4       	ldi	r21, 0x44	; 68
    39f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39f4:	dc 01       	movw	r26, r24
    39f6:	cb 01       	movw	r24, r22
    39f8:	f8 01       	movw	r30, r16
    39fa:	80 83       	st	Z, r24
    39fc:	91 83       	std	Z+1, r25	; 0x01
    39fe:	a2 83       	std	Z+2, r26	; 0x02
    3a00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a02:	fe 01       	movw	r30, r28
    3a04:	ed 56       	subi	r30, 0x6D	; 109
    3a06:	ff 4f       	sbci	r31, 0xFF	; 255
    3a08:	60 81       	ld	r22, Z
    3a0a:	71 81       	ldd	r23, Z+1	; 0x01
    3a0c:	82 81       	ldd	r24, Z+2	; 0x02
    3a0e:	93 81       	ldd	r25, Z+3	; 0x03
    3a10:	20 e0       	ldi	r18, 0x00	; 0
    3a12:	30 e0       	ldi	r19, 0x00	; 0
    3a14:	40 e8       	ldi	r20, 0x80	; 128
    3a16:	5f e3       	ldi	r21, 0x3F	; 63
    3a18:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a1c:	88 23       	and	r24, r24
    3a1e:	44 f4       	brge	.+16     	; 0x3a30 <main+0xf66>
		__ticks = 1;
    3a20:	fe 01       	movw	r30, r28
    3a22:	ef 56       	subi	r30, 0x6F	; 111
    3a24:	ff 4f       	sbci	r31, 0xFF	; 255
    3a26:	81 e0       	ldi	r24, 0x01	; 1
    3a28:	90 e0       	ldi	r25, 0x00	; 0
    3a2a:	91 83       	std	Z+1, r25	; 0x01
    3a2c:	80 83       	st	Z, r24
    3a2e:	64 c0       	rjmp	.+200    	; 0x3af8 <main+0x102e>
	else if (__tmp > 65535)
    3a30:	fe 01       	movw	r30, r28
    3a32:	ed 56       	subi	r30, 0x6D	; 109
    3a34:	ff 4f       	sbci	r31, 0xFF	; 255
    3a36:	60 81       	ld	r22, Z
    3a38:	71 81       	ldd	r23, Z+1	; 0x01
    3a3a:	82 81       	ldd	r24, Z+2	; 0x02
    3a3c:	93 81       	ldd	r25, Z+3	; 0x03
    3a3e:	20 e0       	ldi	r18, 0x00	; 0
    3a40:	3f ef       	ldi	r19, 0xFF	; 255
    3a42:	4f e7       	ldi	r20, 0x7F	; 127
    3a44:	57 e4       	ldi	r21, 0x47	; 71
    3a46:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a4a:	18 16       	cp	r1, r24
    3a4c:	0c f0       	brlt	.+2      	; 0x3a50 <main+0xf86>
    3a4e:	43 c0       	rjmp	.+134    	; 0x3ad6 <main+0x100c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a50:	fe 01       	movw	r30, r28
    3a52:	e9 56       	subi	r30, 0x69	; 105
    3a54:	ff 4f       	sbci	r31, 0xFF	; 255
    3a56:	60 81       	ld	r22, Z
    3a58:	71 81       	ldd	r23, Z+1	; 0x01
    3a5a:	82 81       	ldd	r24, Z+2	; 0x02
    3a5c:	93 81       	ldd	r25, Z+3	; 0x03
    3a5e:	20 e0       	ldi	r18, 0x00	; 0
    3a60:	30 e0       	ldi	r19, 0x00	; 0
    3a62:	40 e2       	ldi	r20, 0x20	; 32
    3a64:	51 e4       	ldi	r21, 0x41	; 65
    3a66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a6a:	dc 01       	movw	r26, r24
    3a6c:	cb 01       	movw	r24, r22
    3a6e:	8e 01       	movw	r16, r28
    3a70:	0f 56       	subi	r16, 0x6F	; 111
    3a72:	1f 4f       	sbci	r17, 0xFF	; 255
    3a74:	bc 01       	movw	r22, r24
    3a76:	cd 01       	movw	r24, r26
    3a78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a7c:	dc 01       	movw	r26, r24
    3a7e:	cb 01       	movw	r24, r22
    3a80:	f8 01       	movw	r30, r16
    3a82:	91 83       	std	Z+1, r25	; 0x01
    3a84:	80 83       	st	Z, r24
    3a86:	1f c0       	rjmp	.+62     	; 0x3ac6 <main+0xffc>
    3a88:	fe 01       	movw	r30, r28
    3a8a:	e1 57       	subi	r30, 0x71	; 113
    3a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a8e:	88 ec       	ldi	r24, 0xC8	; 200
    3a90:	90 e0       	ldi	r25, 0x00	; 0
    3a92:	91 83       	std	Z+1, r25	; 0x01
    3a94:	80 83       	st	Z, r24
    3a96:	fe 01       	movw	r30, r28
    3a98:	e1 57       	subi	r30, 0x71	; 113
    3a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a9c:	80 81       	ld	r24, Z
    3a9e:	91 81       	ldd	r25, Z+1	; 0x01
    3aa0:	01 97       	sbiw	r24, 0x01	; 1
    3aa2:	f1 f7       	brne	.-4      	; 0x3aa0 <main+0xfd6>
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	e1 57       	subi	r30, 0x71	; 113
    3aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aaa:	91 83       	std	Z+1, r25	; 0x01
    3aac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aae:	de 01       	movw	r26, r28
    3ab0:	af 56       	subi	r26, 0x6F	; 111
    3ab2:	bf 4f       	sbci	r27, 0xFF	; 255
    3ab4:	fe 01       	movw	r30, r28
    3ab6:	ef 56       	subi	r30, 0x6F	; 111
    3ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aba:	80 81       	ld	r24, Z
    3abc:	91 81       	ldd	r25, Z+1	; 0x01
    3abe:	01 97       	sbiw	r24, 0x01	; 1
    3ac0:	11 96       	adiw	r26, 0x01	; 1
    3ac2:	9c 93       	st	X, r25
    3ac4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ac6:	fe 01       	movw	r30, r28
    3ac8:	ef 56       	subi	r30, 0x6F	; 111
    3aca:	ff 4f       	sbci	r31, 0xFF	; 255
    3acc:	80 81       	ld	r24, Z
    3ace:	91 81       	ldd	r25, Z+1	; 0x01
    3ad0:	00 97       	sbiw	r24, 0x00	; 0
    3ad2:	d1 f6       	brne	.-76     	; 0x3a88 <main+0xfbe>
    3ad4:	27 c0       	rjmp	.+78     	; 0x3b24 <main+0x105a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ad6:	8e 01       	movw	r16, r28
    3ad8:	0f 56       	subi	r16, 0x6F	; 111
    3ada:	1f 4f       	sbci	r17, 0xFF	; 255
    3adc:	fe 01       	movw	r30, r28
    3ade:	ed 56       	subi	r30, 0x6D	; 109
    3ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae2:	60 81       	ld	r22, Z
    3ae4:	71 81       	ldd	r23, Z+1	; 0x01
    3ae6:	82 81       	ldd	r24, Z+2	; 0x02
    3ae8:	93 81       	ldd	r25, Z+3	; 0x03
    3aea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3aee:	dc 01       	movw	r26, r24
    3af0:	cb 01       	movw	r24, r22
    3af2:	f8 01       	movw	r30, r16
    3af4:	91 83       	std	Z+1, r25	; 0x01
    3af6:	80 83       	st	Z, r24
    3af8:	de 01       	movw	r26, r28
    3afa:	a3 57       	subi	r26, 0x73	; 115
    3afc:	bf 4f       	sbci	r27, 0xFF	; 255
    3afe:	fe 01       	movw	r30, r28
    3b00:	ef 56       	subi	r30, 0x6F	; 111
    3b02:	ff 4f       	sbci	r31, 0xFF	; 255
    3b04:	80 81       	ld	r24, Z
    3b06:	91 81       	ldd	r25, Z+1	; 0x01
    3b08:	8d 93       	st	X+, r24
    3b0a:	9c 93       	st	X, r25
    3b0c:	fe 01       	movw	r30, r28
    3b0e:	e3 57       	subi	r30, 0x73	; 115
    3b10:	ff 4f       	sbci	r31, 0xFF	; 255
    3b12:	80 81       	ld	r24, Z
    3b14:	91 81       	ldd	r25, Z+1	; 0x01
    3b16:	01 97       	sbiw	r24, 0x01	; 1
    3b18:	f1 f7       	brne	.-4      	; 0x3b16 <main+0x104c>
    3b1a:	fe 01       	movw	r30, r28
    3b1c:	e3 57       	subi	r30, 0x73	; 115
    3b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b20:	91 83       	std	Z+1, r25	; 0x01
    3b22:	80 83       	st	Z, r24

            		_delay_ms(10) ;

            		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    3b24:	80 e8       	ldi	r24, 0x80	; 128
    3b26:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>



            		LCD4_voidSendString(mes8) ;
    3b2a:	ce 01       	movw	r24, r28
    3b2c:	87 5d       	subi	r24, 0xD7	; 215
    3b2e:	9e 4f       	sbci	r25, 0xFE	; 254
    3b30:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

            		LCD4_voidSendChar(0b11110011) ;
    3b34:	83 ef       	ldi	r24, 0xF3	; 243
    3b36:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <LCD4_voidSendChar>

            		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    3b3a:	80 ec       	ldi	r24, 0xC0	; 192
    3b3c:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

            		LCD4_voidSendString(mes11) ;
    3b40:	ce 01       	movw	r24, r28
    3b42:	82 5b       	subi	r24, 0xB2	; 178
    3b44:	9e 4f       	sbci	r25, 0xFE	; 254
    3b46:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

        }

            		STEPPER_voidRunclockw();
    3b4a:	0e 94 0f 11 	call	0x221e	; 0x221e <STEPPER_voidRunclockw>

            		counter1 = 10 ;
    3b4e:	fe 01       	movw	r30, r28
    3b50:	e9 53       	subi	r30, 0x39	; 57
    3b52:	ff 4f       	sbci	r31, 0xFF	; 255
    3b54:	8a e0       	ldi	r24, 0x0A	; 10
    3b56:	80 83       	st	Z, r24

            		 counter4 = 0 ;
    3b58:	fe 01       	movw	r30, r28
    3b5a:	eb 53       	subi	r30, 0x3B	; 59
    3b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5e:	10 82       	st	Z, r1
    3b60:	3d c3       	rjmp	.+1658   	; 0x41dc <main+0x1712>


         }
            else if (chary1 == 2)
    3b62:	fe 01       	movw	r30, r28
    3b64:	e5 53       	subi	r30, 0x35	; 53
    3b66:	ff 4f       	sbci	r31, 0xFF	; 255
    3b68:	80 81       	ld	r24, Z
    3b6a:	82 30       	cpi	r24, 0x02	; 2
    3b6c:	09 f0       	breq	.+2      	; 0x3b70 <main+0x10a6>
    3b6e:	dc c0       	rjmp	.+440    	; 0x3d28 <main+0x125e>
            {
              	if (counter1 == 0)
    3b70:	fe 01       	movw	r30, r28
    3b72:	e9 53       	subi	r30, 0x39	; 57
    3b74:	ff 4f       	sbci	r31, 0xFF	; 255
    3b76:	80 81       	ld	r24, Z
    3b78:	88 23       	and	r24, r24
    3b7a:	09 f0       	breq	.+2      	; 0x3b7e <main+0x10b4>
    3b7c:	c9 c0       	rjmp	.+402    	; 0x3d10 <main+0x1246>
              {
            	LCD4_voidSendCmd(LCD_CLEAR);
    3b7e:	81 e0       	ldi	r24, 0x01	; 1
    3b80:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    3b84:	fe 01       	movw	r30, r28
    3b86:	e7 57       	subi	r30, 0x77	; 119
    3b88:	ff 4f       	sbci	r31, 0xFF	; 255
    3b8a:	80 e0       	ldi	r24, 0x00	; 0
    3b8c:	90 e0       	ldi	r25, 0x00	; 0
    3b8e:	a0 e2       	ldi	r26, 0x20	; 32
    3b90:	b1 e4       	ldi	r27, 0x41	; 65
    3b92:	80 83       	st	Z, r24
    3b94:	91 83       	std	Z+1, r25	; 0x01
    3b96:	a2 83       	std	Z+2, r26	; 0x02
    3b98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b9a:	8e 01       	movw	r16, r28
    3b9c:	0b 57       	subi	r16, 0x7B	; 123
    3b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	e7 57       	subi	r30, 0x77	; 119
    3ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba6:	60 81       	ld	r22, Z
    3ba8:	71 81       	ldd	r23, Z+1	; 0x01
    3baa:	82 81       	ldd	r24, Z+2	; 0x02
    3bac:	93 81       	ldd	r25, Z+3	; 0x03
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	4a ef       	ldi	r20, 0xFA	; 250
    3bb4:	54 e4       	ldi	r21, 0x44	; 68
    3bb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bba:	dc 01       	movw	r26, r24
    3bbc:	cb 01       	movw	r24, r22
    3bbe:	f8 01       	movw	r30, r16
    3bc0:	80 83       	st	Z, r24
    3bc2:	91 83       	std	Z+1, r25	; 0x01
    3bc4:	a2 83       	std	Z+2, r26	; 0x02
    3bc6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bc8:	fe 01       	movw	r30, r28
    3bca:	eb 57       	subi	r30, 0x7B	; 123
    3bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bce:	60 81       	ld	r22, Z
    3bd0:	71 81       	ldd	r23, Z+1	; 0x01
    3bd2:	82 81       	ldd	r24, Z+2	; 0x02
    3bd4:	93 81       	ldd	r25, Z+3	; 0x03
    3bd6:	20 e0       	ldi	r18, 0x00	; 0
    3bd8:	30 e0       	ldi	r19, 0x00	; 0
    3bda:	40 e8       	ldi	r20, 0x80	; 128
    3bdc:	5f e3       	ldi	r21, 0x3F	; 63
    3bde:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3be2:	88 23       	and	r24, r24
    3be4:	44 f4       	brge	.+16     	; 0x3bf6 <main+0x112c>
		__ticks = 1;
    3be6:	fe 01       	movw	r30, r28
    3be8:	ed 57       	subi	r30, 0x7D	; 125
    3bea:	ff 4f       	sbci	r31, 0xFF	; 255
    3bec:	81 e0       	ldi	r24, 0x01	; 1
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	91 83       	std	Z+1, r25	; 0x01
    3bf2:	80 83       	st	Z, r24
    3bf4:	64 c0       	rjmp	.+200    	; 0x3cbe <main+0x11f4>
	else if (__tmp > 65535)
    3bf6:	fe 01       	movw	r30, r28
    3bf8:	eb 57       	subi	r30, 0x7B	; 123
    3bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfc:	60 81       	ld	r22, Z
    3bfe:	71 81       	ldd	r23, Z+1	; 0x01
    3c00:	82 81       	ldd	r24, Z+2	; 0x02
    3c02:	93 81       	ldd	r25, Z+3	; 0x03
    3c04:	20 e0       	ldi	r18, 0x00	; 0
    3c06:	3f ef       	ldi	r19, 0xFF	; 255
    3c08:	4f e7       	ldi	r20, 0x7F	; 127
    3c0a:	57 e4       	ldi	r21, 0x47	; 71
    3c0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c10:	18 16       	cp	r1, r24
    3c12:	0c f0       	brlt	.+2      	; 0x3c16 <main+0x114c>
    3c14:	43 c0       	rjmp	.+134    	; 0x3c9c <main+0x11d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c16:	fe 01       	movw	r30, r28
    3c18:	e7 57       	subi	r30, 0x77	; 119
    3c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c1c:	60 81       	ld	r22, Z
    3c1e:	71 81       	ldd	r23, Z+1	; 0x01
    3c20:	82 81       	ldd	r24, Z+2	; 0x02
    3c22:	93 81       	ldd	r25, Z+3	; 0x03
    3c24:	20 e0       	ldi	r18, 0x00	; 0
    3c26:	30 e0       	ldi	r19, 0x00	; 0
    3c28:	40 e2       	ldi	r20, 0x20	; 32
    3c2a:	51 e4       	ldi	r21, 0x41	; 65
    3c2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c30:	dc 01       	movw	r26, r24
    3c32:	cb 01       	movw	r24, r22
    3c34:	8e 01       	movw	r16, r28
    3c36:	0d 57       	subi	r16, 0x7D	; 125
    3c38:	1f 4f       	sbci	r17, 0xFF	; 255
    3c3a:	bc 01       	movw	r22, r24
    3c3c:	cd 01       	movw	r24, r26
    3c3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c42:	dc 01       	movw	r26, r24
    3c44:	cb 01       	movw	r24, r22
    3c46:	f8 01       	movw	r30, r16
    3c48:	91 83       	std	Z+1, r25	; 0x01
    3c4a:	80 83       	st	Z, r24
    3c4c:	1f c0       	rjmp	.+62     	; 0x3c8c <main+0x11c2>
    3c4e:	fe 01       	movw	r30, r28
    3c50:	ef 57       	subi	r30, 0x7F	; 127
    3c52:	ff 4f       	sbci	r31, 0xFF	; 255
    3c54:	88 ec       	ldi	r24, 0xC8	; 200
    3c56:	90 e0       	ldi	r25, 0x00	; 0
    3c58:	91 83       	std	Z+1, r25	; 0x01
    3c5a:	80 83       	st	Z, r24
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	ef 57       	subi	r30, 0x7F	; 127
    3c60:	ff 4f       	sbci	r31, 0xFF	; 255
    3c62:	80 81       	ld	r24, Z
    3c64:	91 81       	ldd	r25, Z+1	; 0x01
    3c66:	01 97       	sbiw	r24, 0x01	; 1
    3c68:	f1 f7       	brne	.-4      	; 0x3c66 <main+0x119c>
    3c6a:	fe 01       	movw	r30, r28
    3c6c:	ef 57       	subi	r30, 0x7F	; 127
    3c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c70:	91 83       	std	Z+1, r25	; 0x01
    3c72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c74:	de 01       	movw	r26, r28
    3c76:	ad 57       	subi	r26, 0x7D	; 125
    3c78:	bf 4f       	sbci	r27, 0xFF	; 255
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	ed 57       	subi	r30, 0x7D	; 125
    3c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c80:	80 81       	ld	r24, Z
    3c82:	91 81       	ldd	r25, Z+1	; 0x01
    3c84:	01 97       	sbiw	r24, 0x01	; 1
    3c86:	11 96       	adiw	r26, 0x01	; 1
    3c88:	9c 93       	st	X, r25
    3c8a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c8c:	fe 01       	movw	r30, r28
    3c8e:	ed 57       	subi	r30, 0x7D	; 125
    3c90:	ff 4f       	sbci	r31, 0xFF	; 255
    3c92:	80 81       	ld	r24, Z
    3c94:	91 81       	ldd	r25, Z+1	; 0x01
    3c96:	00 97       	sbiw	r24, 0x00	; 0
    3c98:	d1 f6       	brne	.-76     	; 0x3c4e <main+0x1184>
    3c9a:	27 c0       	rjmp	.+78     	; 0x3cea <main+0x1220>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c9c:	8e 01       	movw	r16, r28
    3c9e:	0d 57       	subi	r16, 0x7D	; 125
    3ca0:	1f 4f       	sbci	r17, 0xFF	; 255
    3ca2:	fe 01       	movw	r30, r28
    3ca4:	eb 57       	subi	r30, 0x7B	; 123
    3ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca8:	60 81       	ld	r22, Z
    3caa:	71 81       	ldd	r23, Z+1	; 0x01
    3cac:	82 81       	ldd	r24, Z+2	; 0x02
    3cae:	93 81       	ldd	r25, Z+3	; 0x03
    3cb0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cb4:	dc 01       	movw	r26, r24
    3cb6:	cb 01       	movw	r24, r22
    3cb8:	f8 01       	movw	r30, r16
    3cba:	91 83       	std	Z+1, r25	; 0x01
    3cbc:	80 83       	st	Z, r24
    3cbe:	de 01       	movw	r26, r28
    3cc0:	a1 58       	subi	r26, 0x81	; 129
    3cc2:	bf 4f       	sbci	r27, 0xFF	; 255
    3cc4:	fe 01       	movw	r30, r28
    3cc6:	ed 57       	subi	r30, 0x7D	; 125
    3cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cca:	80 81       	ld	r24, Z
    3ccc:	91 81       	ldd	r25, Z+1	; 0x01
    3cce:	8d 93       	st	X+, r24
    3cd0:	9c 93       	st	X, r25
    3cd2:	fe 01       	movw	r30, r28
    3cd4:	e1 58       	subi	r30, 0x81	; 129
    3cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd8:	80 81       	ld	r24, Z
    3cda:	91 81       	ldd	r25, Z+1	; 0x01
    3cdc:	01 97       	sbiw	r24, 0x01	; 1
    3cde:	f1 f7       	brne	.-4      	; 0x3cdc <main+0x1212>
    3ce0:	fe 01       	movw	r30, r28
    3ce2:	e1 58       	subi	r30, 0x81	; 129
    3ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce6:	91 83       	std	Z+1, r25	; 0x01
    3ce8:	80 83       	st	Z, r24

	   	   		_delay_ms(10) ;

	   	   		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    3cea:	80 e8       	ldi	r24, 0x80	; 128
    3cec:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	   	   		LCD4_voidSendString(mes8) ;
    3cf0:	ce 01       	movw	r24, r28
    3cf2:	87 5d       	subi	r24, 0xD7	; 215
    3cf4:	9e 4f       	sbci	r25, 0xFE	; 254
    3cf6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

	   	   	LCD4_voidSendChar(0b11110011) ;
    3cfa:	83 ef       	ldi	r24, 0xF3	; 243
    3cfc:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <LCD4_voidSendChar>

	   	 LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    3d00:	80 ec       	ldi	r24, 0xC0	; 192
    3d02:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	   	             		LCD4_voidSendString(mes12) ;
    3d06:	ce 01       	movw	r24, r28
    3d08:	87 5a       	subi	r24, 0xA7	; 167
    3d0a:	9e 4f       	sbci	r25, 0xFE	; 254
    3d0c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>


              }

	   	   		STEPPER_voidRunAnticlockw() ;
    3d10:	0e 94 3a 13 	call	0x2674	; 0x2674 <STEPPER_voidRunAnticlockw>

	   	   	counter1 = 10 ;
    3d14:	fe 01       	movw	r30, r28
    3d16:	e9 53       	subi	r30, 0x39	; 57
    3d18:	ff 4f       	sbci	r31, 0xFF	; 255
    3d1a:	8a e0       	ldi	r24, 0x0A	; 10
    3d1c:	80 83       	st	Z, r24

	   	 counter4 = 0 ;
    3d1e:	fe 01       	movw	r30, r28
    3d20:	eb 53       	subi	r30, 0x3B	; 59
    3d22:	ff 4f       	sbci	r31, 0xFF	; 255
    3d24:	10 82       	st	Z, r1
    3d26:	5a c2       	rjmp	.+1204   	; 0x41dc <main+0x1712>

            }

else if (chary1 == 3)
    3d28:	fe 01       	movw	r30, r28
    3d2a:	e5 53       	subi	r30, 0x35	; 53
    3d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2e:	80 81       	ld	r24, Z
    3d30:	83 30       	cpi	r24, 0x03	; 3
    3d32:	09 f0       	breq	.+2      	; 0x3d36 <main+0x126c>
    3d34:	53 c2       	rjmp	.+1190   	; 0x41dc <main+0x1712>

       {

	STEPPER_voidStop();
    3d36:	0e 94 04 11 	call	0x2208	; 0x2208 <STEPPER_voidStop>

	DIO_u8SetPinValue(DIO_PORT_C ,6 , DIO_PORT_LOW) ;
    3d3a:	82 e0       	ldi	r24, 0x02	; 2
    3d3c:	66 e0       	ldi	r22, 0x06	; 6
    3d3e:	40 e0       	ldi	r20, 0x00	; 0
    3d40:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

	DIO_u8SetPinValue(DIO_PORT_C ,7 , DIO_PORT_LOW) ;
    3d44:	82 e0       	ldi	r24, 0x02	; 2
    3d46:	67 e0       	ldi	r22, 0x07	; 7
    3d48:	40 e0       	ldi	r20, 0x00	; 0
    3d4a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

            	if (counter4 == 0)
    3d4e:	fe 01       	movw	r30, r28
    3d50:	eb 53       	subi	r30, 0x3B	; 59
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	80 81       	ld	r24, Z
    3d56:	88 23       	and	r24, r24
    3d58:	09 f0       	breq	.+2      	; 0x3d5c <main+0x1292>
    3d5a:	37 c2       	rjmp	.+1134   	; 0x41ca <main+0x1700>
       {
            		LCD4_voidSendCmd(LCD_CLEAR);
    3d5c:	81 e0       	ldi	r24, 0x01	; 1
    3d5e:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    3d62:	fe 01       	movw	r30, r28
    3d64:	e5 58       	subi	r30, 0x85	; 133
    3d66:	ff 4f       	sbci	r31, 0xFF	; 255
    3d68:	80 e0       	ldi	r24, 0x00	; 0
    3d6a:	90 e0       	ldi	r25, 0x00	; 0
    3d6c:	a0 e2       	ldi	r26, 0x20	; 32
    3d6e:	b1 e4       	ldi	r27, 0x41	; 65
    3d70:	80 83       	st	Z, r24
    3d72:	91 83       	std	Z+1, r25	; 0x01
    3d74:	a2 83       	std	Z+2, r26	; 0x02
    3d76:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d78:	8e 01       	movw	r16, r28
    3d7a:	09 58       	subi	r16, 0x89	; 137
    3d7c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d7e:	fe 01       	movw	r30, r28
    3d80:	e5 58       	subi	r30, 0x85	; 133
    3d82:	ff 4f       	sbci	r31, 0xFF	; 255
    3d84:	60 81       	ld	r22, Z
    3d86:	71 81       	ldd	r23, Z+1	; 0x01
    3d88:	82 81       	ldd	r24, Z+2	; 0x02
    3d8a:	93 81       	ldd	r25, Z+3	; 0x03
    3d8c:	20 e0       	ldi	r18, 0x00	; 0
    3d8e:	30 e0       	ldi	r19, 0x00	; 0
    3d90:	4a ef       	ldi	r20, 0xFA	; 250
    3d92:	54 e4       	ldi	r21, 0x44	; 68
    3d94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d98:	dc 01       	movw	r26, r24
    3d9a:	cb 01       	movw	r24, r22
    3d9c:	f8 01       	movw	r30, r16
    3d9e:	80 83       	st	Z, r24
    3da0:	91 83       	std	Z+1, r25	; 0x01
    3da2:	a2 83       	std	Z+2, r26	; 0x02
    3da4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3da6:	fe 01       	movw	r30, r28
    3da8:	e9 58       	subi	r30, 0x89	; 137
    3daa:	ff 4f       	sbci	r31, 0xFF	; 255
    3dac:	60 81       	ld	r22, Z
    3dae:	71 81       	ldd	r23, Z+1	; 0x01
    3db0:	82 81       	ldd	r24, Z+2	; 0x02
    3db2:	93 81       	ldd	r25, Z+3	; 0x03
    3db4:	20 e0       	ldi	r18, 0x00	; 0
    3db6:	30 e0       	ldi	r19, 0x00	; 0
    3db8:	40 e8       	ldi	r20, 0x80	; 128
    3dba:	5f e3       	ldi	r21, 0x3F	; 63
    3dbc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3dc0:	88 23       	and	r24, r24
    3dc2:	44 f4       	brge	.+16     	; 0x3dd4 <main+0x130a>
		__ticks = 1;
    3dc4:	fe 01       	movw	r30, r28
    3dc6:	eb 58       	subi	r30, 0x8B	; 139
    3dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dca:	81 e0       	ldi	r24, 0x01	; 1
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	91 83       	std	Z+1, r25	; 0x01
    3dd0:	80 83       	st	Z, r24
    3dd2:	64 c0       	rjmp	.+200    	; 0x3e9c <main+0x13d2>
	else if (__tmp > 65535)
    3dd4:	fe 01       	movw	r30, r28
    3dd6:	e9 58       	subi	r30, 0x89	; 137
    3dd8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dda:	60 81       	ld	r22, Z
    3ddc:	71 81       	ldd	r23, Z+1	; 0x01
    3dde:	82 81       	ldd	r24, Z+2	; 0x02
    3de0:	93 81       	ldd	r25, Z+3	; 0x03
    3de2:	20 e0       	ldi	r18, 0x00	; 0
    3de4:	3f ef       	ldi	r19, 0xFF	; 255
    3de6:	4f e7       	ldi	r20, 0x7F	; 127
    3de8:	57 e4       	ldi	r21, 0x47	; 71
    3dea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3dee:	18 16       	cp	r1, r24
    3df0:	0c f0       	brlt	.+2      	; 0x3df4 <main+0x132a>
    3df2:	43 c0       	rjmp	.+134    	; 0x3e7a <main+0x13b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3df4:	fe 01       	movw	r30, r28
    3df6:	e5 58       	subi	r30, 0x85	; 133
    3df8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dfa:	60 81       	ld	r22, Z
    3dfc:	71 81       	ldd	r23, Z+1	; 0x01
    3dfe:	82 81       	ldd	r24, Z+2	; 0x02
    3e00:	93 81       	ldd	r25, Z+3	; 0x03
    3e02:	20 e0       	ldi	r18, 0x00	; 0
    3e04:	30 e0       	ldi	r19, 0x00	; 0
    3e06:	40 e2       	ldi	r20, 0x20	; 32
    3e08:	51 e4       	ldi	r21, 0x41	; 65
    3e0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e0e:	dc 01       	movw	r26, r24
    3e10:	cb 01       	movw	r24, r22
    3e12:	8e 01       	movw	r16, r28
    3e14:	0b 58       	subi	r16, 0x8B	; 139
    3e16:	1f 4f       	sbci	r17, 0xFF	; 255
    3e18:	bc 01       	movw	r22, r24
    3e1a:	cd 01       	movw	r24, r26
    3e1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e20:	dc 01       	movw	r26, r24
    3e22:	cb 01       	movw	r24, r22
    3e24:	f8 01       	movw	r30, r16
    3e26:	91 83       	std	Z+1, r25	; 0x01
    3e28:	80 83       	st	Z, r24
    3e2a:	1f c0       	rjmp	.+62     	; 0x3e6a <main+0x13a0>
    3e2c:	fe 01       	movw	r30, r28
    3e2e:	ed 58       	subi	r30, 0x8D	; 141
    3e30:	ff 4f       	sbci	r31, 0xFF	; 255
    3e32:	88 ec       	ldi	r24, 0xC8	; 200
    3e34:	90 e0       	ldi	r25, 0x00	; 0
    3e36:	91 83       	std	Z+1, r25	; 0x01
    3e38:	80 83       	st	Z, r24
    3e3a:	fe 01       	movw	r30, r28
    3e3c:	ed 58       	subi	r30, 0x8D	; 141
    3e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e40:	80 81       	ld	r24, Z
    3e42:	91 81       	ldd	r25, Z+1	; 0x01
    3e44:	01 97       	sbiw	r24, 0x01	; 1
    3e46:	f1 f7       	brne	.-4      	; 0x3e44 <main+0x137a>
    3e48:	fe 01       	movw	r30, r28
    3e4a:	ed 58       	subi	r30, 0x8D	; 141
    3e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4e:	91 83       	std	Z+1, r25	; 0x01
    3e50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e52:	de 01       	movw	r26, r28
    3e54:	ab 58       	subi	r26, 0x8B	; 139
    3e56:	bf 4f       	sbci	r27, 0xFF	; 255
    3e58:	fe 01       	movw	r30, r28
    3e5a:	eb 58       	subi	r30, 0x8B	; 139
    3e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5e:	80 81       	ld	r24, Z
    3e60:	91 81       	ldd	r25, Z+1	; 0x01
    3e62:	01 97       	sbiw	r24, 0x01	; 1
    3e64:	11 96       	adiw	r26, 0x01	; 1
    3e66:	9c 93       	st	X, r25
    3e68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e6a:	fe 01       	movw	r30, r28
    3e6c:	eb 58       	subi	r30, 0x8B	; 139
    3e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e70:	80 81       	ld	r24, Z
    3e72:	91 81       	ldd	r25, Z+1	; 0x01
    3e74:	00 97       	sbiw	r24, 0x00	; 0
    3e76:	d1 f6       	brne	.-76     	; 0x3e2c <main+0x1362>
    3e78:	27 c0       	rjmp	.+78     	; 0x3ec8 <main+0x13fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e7a:	8e 01       	movw	r16, r28
    3e7c:	0b 58       	subi	r16, 0x8B	; 139
    3e7e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e80:	fe 01       	movw	r30, r28
    3e82:	e9 58       	subi	r30, 0x89	; 137
    3e84:	ff 4f       	sbci	r31, 0xFF	; 255
    3e86:	60 81       	ld	r22, Z
    3e88:	71 81       	ldd	r23, Z+1	; 0x01
    3e8a:	82 81       	ldd	r24, Z+2	; 0x02
    3e8c:	93 81       	ldd	r25, Z+3	; 0x03
    3e8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e92:	dc 01       	movw	r26, r24
    3e94:	cb 01       	movw	r24, r22
    3e96:	f8 01       	movw	r30, r16
    3e98:	91 83       	std	Z+1, r25	; 0x01
    3e9a:	80 83       	st	Z, r24
    3e9c:	de 01       	movw	r26, r28
    3e9e:	af 58       	subi	r26, 0x8F	; 143
    3ea0:	bf 4f       	sbci	r27, 0xFF	; 255
    3ea2:	fe 01       	movw	r30, r28
    3ea4:	eb 58       	subi	r30, 0x8B	; 139
    3ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea8:	80 81       	ld	r24, Z
    3eaa:	91 81       	ldd	r25, Z+1	; 0x01
    3eac:	8d 93       	st	X+, r24
    3eae:	9c 93       	st	X, r25
    3eb0:	fe 01       	movw	r30, r28
    3eb2:	ef 58       	subi	r30, 0x8F	; 143
    3eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb6:	80 81       	ld	r24, Z
    3eb8:	91 81       	ldd	r25, Z+1	; 0x01
    3eba:	01 97       	sbiw	r24, 0x01	; 1
    3ebc:	f1 f7       	brne	.-4      	; 0x3eba <main+0x13f0>
    3ebe:	fe 01       	movw	r30, r28
    3ec0:	ef 58       	subi	r30, 0x8F	; 143
    3ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec4:	91 83       	std	Z+1, r25	; 0x01
    3ec6:	80 83       	st	Z, r24

            		_delay_ms(10) ;

            		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    3ec8:	80 e8       	ldi	r24, 0x80	; 128
    3eca:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>



            		LCD4_voidSendString(mes10) ;
    3ece:	ce 01       	movw	r24, r28
    3ed0:	88 5c       	subi	r24, 0xC8	; 200
    3ed2:	9e 4f       	sbci	r25, 0xFE	; 254
    3ed4:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>
    3ed8:	fe 01       	movw	r30, r28
    3eda:	e3 59       	subi	r30, 0x93	; 147
    3edc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ede:	80 e0       	ldi	r24, 0x00	; 0
    3ee0:	90 e0       	ldi	r25, 0x00	; 0
    3ee2:	aa ef       	ldi	r26, 0xFA	; 250
    3ee4:	b3 e4       	ldi	r27, 0x43	; 67
    3ee6:	80 83       	st	Z, r24
    3ee8:	91 83       	std	Z+1, r25	; 0x01
    3eea:	a2 83       	std	Z+2, r26	; 0x02
    3eec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3eee:	8e 01       	movw	r16, r28
    3ef0:	07 59       	subi	r16, 0x97	; 151
    3ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	e3 59       	subi	r30, 0x93	; 147
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	60 81       	ld	r22, Z
    3efc:	71 81       	ldd	r23, Z+1	; 0x01
    3efe:	82 81       	ldd	r24, Z+2	; 0x02
    3f00:	93 81       	ldd	r25, Z+3	; 0x03
    3f02:	20 e0       	ldi	r18, 0x00	; 0
    3f04:	30 e0       	ldi	r19, 0x00	; 0
    3f06:	4a ef       	ldi	r20, 0xFA	; 250
    3f08:	54 e4       	ldi	r21, 0x44	; 68
    3f0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f0e:	dc 01       	movw	r26, r24
    3f10:	cb 01       	movw	r24, r22
    3f12:	f8 01       	movw	r30, r16
    3f14:	80 83       	st	Z, r24
    3f16:	91 83       	std	Z+1, r25	; 0x01
    3f18:	a2 83       	std	Z+2, r26	; 0x02
    3f1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f1c:	fe 01       	movw	r30, r28
    3f1e:	e7 59       	subi	r30, 0x97	; 151
    3f20:	ff 4f       	sbci	r31, 0xFF	; 255
    3f22:	60 81       	ld	r22, Z
    3f24:	71 81       	ldd	r23, Z+1	; 0x01
    3f26:	82 81       	ldd	r24, Z+2	; 0x02
    3f28:	93 81       	ldd	r25, Z+3	; 0x03
    3f2a:	20 e0       	ldi	r18, 0x00	; 0
    3f2c:	30 e0       	ldi	r19, 0x00	; 0
    3f2e:	40 e8       	ldi	r20, 0x80	; 128
    3f30:	5f e3       	ldi	r21, 0x3F	; 63
    3f32:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f36:	88 23       	and	r24, r24
    3f38:	44 f4       	brge	.+16     	; 0x3f4a <main+0x1480>
		__ticks = 1;
    3f3a:	fe 01       	movw	r30, r28
    3f3c:	e9 59       	subi	r30, 0x99	; 153
    3f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f40:	81 e0       	ldi	r24, 0x01	; 1
    3f42:	90 e0       	ldi	r25, 0x00	; 0
    3f44:	91 83       	std	Z+1, r25	; 0x01
    3f46:	80 83       	st	Z, r24
    3f48:	64 c0       	rjmp	.+200    	; 0x4012 <main+0x1548>
	else if (__tmp > 65535)
    3f4a:	fe 01       	movw	r30, r28
    3f4c:	e7 59       	subi	r30, 0x97	; 151
    3f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f50:	60 81       	ld	r22, Z
    3f52:	71 81       	ldd	r23, Z+1	; 0x01
    3f54:	82 81       	ldd	r24, Z+2	; 0x02
    3f56:	93 81       	ldd	r25, Z+3	; 0x03
    3f58:	20 e0       	ldi	r18, 0x00	; 0
    3f5a:	3f ef       	ldi	r19, 0xFF	; 255
    3f5c:	4f e7       	ldi	r20, 0x7F	; 127
    3f5e:	57 e4       	ldi	r21, 0x47	; 71
    3f60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f64:	18 16       	cp	r1, r24
    3f66:	0c f0       	brlt	.+2      	; 0x3f6a <main+0x14a0>
    3f68:	43 c0       	rjmp	.+134    	; 0x3ff0 <main+0x1526>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f6a:	fe 01       	movw	r30, r28
    3f6c:	e3 59       	subi	r30, 0x93	; 147
    3f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f70:	60 81       	ld	r22, Z
    3f72:	71 81       	ldd	r23, Z+1	; 0x01
    3f74:	82 81       	ldd	r24, Z+2	; 0x02
    3f76:	93 81       	ldd	r25, Z+3	; 0x03
    3f78:	20 e0       	ldi	r18, 0x00	; 0
    3f7a:	30 e0       	ldi	r19, 0x00	; 0
    3f7c:	40 e2       	ldi	r20, 0x20	; 32
    3f7e:	51 e4       	ldi	r21, 0x41	; 65
    3f80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f84:	dc 01       	movw	r26, r24
    3f86:	cb 01       	movw	r24, r22
    3f88:	8e 01       	movw	r16, r28
    3f8a:	09 59       	subi	r16, 0x99	; 153
    3f8c:	1f 4f       	sbci	r17, 0xFF	; 255
    3f8e:	bc 01       	movw	r22, r24
    3f90:	cd 01       	movw	r24, r26
    3f92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f96:	dc 01       	movw	r26, r24
    3f98:	cb 01       	movw	r24, r22
    3f9a:	f8 01       	movw	r30, r16
    3f9c:	91 83       	std	Z+1, r25	; 0x01
    3f9e:	80 83       	st	Z, r24
    3fa0:	1f c0       	rjmp	.+62     	; 0x3fe0 <main+0x1516>
    3fa2:	fe 01       	movw	r30, r28
    3fa4:	eb 59       	subi	r30, 0x9B	; 155
    3fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa8:	88 ec       	ldi	r24, 0xC8	; 200
    3faa:	90 e0       	ldi	r25, 0x00	; 0
    3fac:	91 83       	std	Z+1, r25	; 0x01
    3fae:	80 83       	st	Z, r24
    3fb0:	fe 01       	movw	r30, r28
    3fb2:	eb 59       	subi	r30, 0x9B	; 155
    3fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb6:	80 81       	ld	r24, Z
    3fb8:	91 81       	ldd	r25, Z+1	; 0x01
    3fba:	01 97       	sbiw	r24, 0x01	; 1
    3fbc:	f1 f7       	brne	.-4      	; 0x3fba <main+0x14f0>
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	eb 59       	subi	r30, 0x9B	; 155
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	91 83       	std	Z+1, r25	; 0x01
    3fc6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fc8:	de 01       	movw	r26, r28
    3fca:	a9 59       	subi	r26, 0x99	; 153
    3fcc:	bf 4f       	sbci	r27, 0xFF	; 255
    3fce:	fe 01       	movw	r30, r28
    3fd0:	e9 59       	subi	r30, 0x99	; 153
    3fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd4:	80 81       	ld	r24, Z
    3fd6:	91 81       	ldd	r25, Z+1	; 0x01
    3fd8:	01 97       	sbiw	r24, 0x01	; 1
    3fda:	11 96       	adiw	r26, 0x01	; 1
    3fdc:	9c 93       	st	X, r25
    3fde:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fe0:	fe 01       	movw	r30, r28
    3fe2:	e9 59       	subi	r30, 0x99	; 153
    3fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe6:	80 81       	ld	r24, Z
    3fe8:	91 81       	ldd	r25, Z+1	; 0x01
    3fea:	00 97       	sbiw	r24, 0x00	; 0
    3fec:	d1 f6       	brne	.-76     	; 0x3fa2 <main+0x14d8>
    3fee:	27 c0       	rjmp	.+78     	; 0x403e <main+0x1574>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ff0:	8e 01       	movw	r16, r28
    3ff2:	09 59       	subi	r16, 0x99	; 153
    3ff4:	1f 4f       	sbci	r17, 0xFF	; 255
    3ff6:	fe 01       	movw	r30, r28
    3ff8:	e7 59       	subi	r30, 0x97	; 151
    3ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    3ffc:	60 81       	ld	r22, Z
    3ffe:	71 81       	ldd	r23, Z+1	; 0x01
    4000:	82 81       	ldd	r24, Z+2	; 0x02
    4002:	93 81       	ldd	r25, Z+3	; 0x03
    4004:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4008:	dc 01       	movw	r26, r24
    400a:	cb 01       	movw	r24, r22
    400c:	f8 01       	movw	r30, r16
    400e:	91 83       	std	Z+1, r25	; 0x01
    4010:	80 83       	st	Z, r24
    4012:	de 01       	movw	r26, r28
    4014:	ad 59       	subi	r26, 0x9D	; 157
    4016:	bf 4f       	sbci	r27, 0xFF	; 255
    4018:	fe 01       	movw	r30, r28
    401a:	e9 59       	subi	r30, 0x99	; 153
    401c:	ff 4f       	sbci	r31, 0xFF	; 255
    401e:	80 81       	ld	r24, Z
    4020:	91 81       	ldd	r25, Z+1	; 0x01
    4022:	8d 93       	st	X+, r24
    4024:	9c 93       	st	X, r25
    4026:	fe 01       	movw	r30, r28
    4028:	ed 59       	subi	r30, 0x9D	; 157
    402a:	ff 4f       	sbci	r31, 0xFF	; 255
    402c:	80 81       	ld	r24, Z
    402e:	91 81       	ldd	r25, Z+1	; 0x01
    4030:	01 97       	sbiw	r24, 0x01	; 1
    4032:	f1 f7       	brne	.-4      	; 0x4030 <main+0x1566>
    4034:	fe 01       	movw	r30, r28
    4036:	ed 59       	subi	r30, 0x9D	; 157
    4038:	ff 4f       	sbci	r31, 0xFF	; 255
    403a:	91 83       	std	Z+1, r25	; 0x01
    403c:	80 83       	st	Z, r24


            		_delay_ms(500);


            		LCD4_voidSendCmd(LCD_CLEAR);
    403e:	81 e0       	ldi	r24, 0x01	; 1
    4040:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    4044:	fe 01       	movw	r30, r28
    4046:	e1 5a       	subi	r30, 0xA1	; 161
    4048:	ff 4f       	sbci	r31, 0xFF	; 255
    404a:	80 e0       	ldi	r24, 0x00	; 0
    404c:	90 e0       	ldi	r25, 0x00	; 0
    404e:	a0 e2       	ldi	r26, 0x20	; 32
    4050:	b1 e4       	ldi	r27, 0x41	; 65
    4052:	80 83       	st	Z, r24
    4054:	91 83       	std	Z+1, r25	; 0x01
    4056:	a2 83       	std	Z+2, r26	; 0x02
    4058:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    405a:	8e 01       	movw	r16, r28
    405c:	05 5a       	subi	r16, 0xA5	; 165
    405e:	1f 4f       	sbci	r17, 0xFF	; 255
    4060:	fe 01       	movw	r30, r28
    4062:	e1 5a       	subi	r30, 0xA1	; 161
    4064:	ff 4f       	sbci	r31, 0xFF	; 255
    4066:	60 81       	ld	r22, Z
    4068:	71 81       	ldd	r23, Z+1	; 0x01
    406a:	82 81       	ldd	r24, Z+2	; 0x02
    406c:	93 81       	ldd	r25, Z+3	; 0x03
    406e:	20 e0       	ldi	r18, 0x00	; 0
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	4a ef       	ldi	r20, 0xFA	; 250
    4074:	54 e4       	ldi	r21, 0x44	; 68
    4076:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    407a:	dc 01       	movw	r26, r24
    407c:	cb 01       	movw	r24, r22
    407e:	f8 01       	movw	r30, r16
    4080:	80 83       	st	Z, r24
    4082:	91 83       	std	Z+1, r25	; 0x01
    4084:	a2 83       	std	Z+2, r26	; 0x02
    4086:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4088:	fe 01       	movw	r30, r28
    408a:	e5 5a       	subi	r30, 0xA5	; 165
    408c:	ff 4f       	sbci	r31, 0xFF	; 255
    408e:	60 81       	ld	r22, Z
    4090:	71 81       	ldd	r23, Z+1	; 0x01
    4092:	82 81       	ldd	r24, Z+2	; 0x02
    4094:	93 81       	ldd	r25, Z+3	; 0x03
    4096:	20 e0       	ldi	r18, 0x00	; 0
    4098:	30 e0       	ldi	r19, 0x00	; 0
    409a:	40 e8       	ldi	r20, 0x80	; 128
    409c:	5f e3       	ldi	r21, 0x3F	; 63
    409e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    40a2:	88 23       	and	r24, r24
    40a4:	44 f4       	brge	.+16     	; 0x40b6 <main+0x15ec>
		__ticks = 1;
    40a6:	fe 01       	movw	r30, r28
    40a8:	e7 5a       	subi	r30, 0xA7	; 167
    40aa:	ff 4f       	sbci	r31, 0xFF	; 255
    40ac:	81 e0       	ldi	r24, 0x01	; 1
    40ae:	90 e0       	ldi	r25, 0x00	; 0
    40b0:	91 83       	std	Z+1, r25	; 0x01
    40b2:	80 83       	st	Z, r24
    40b4:	64 c0       	rjmp	.+200    	; 0x417e <main+0x16b4>
	else if (__tmp > 65535)
    40b6:	fe 01       	movw	r30, r28
    40b8:	e5 5a       	subi	r30, 0xA5	; 165
    40ba:	ff 4f       	sbci	r31, 0xFF	; 255
    40bc:	60 81       	ld	r22, Z
    40be:	71 81       	ldd	r23, Z+1	; 0x01
    40c0:	82 81       	ldd	r24, Z+2	; 0x02
    40c2:	93 81       	ldd	r25, Z+3	; 0x03
    40c4:	20 e0       	ldi	r18, 0x00	; 0
    40c6:	3f ef       	ldi	r19, 0xFF	; 255
    40c8:	4f e7       	ldi	r20, 0x7F	; 127
    40ca:	57 e4       	ldi	r21, 0x47	; 71
    40cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40d0:	18 16       	cp	r1, r24
    40d2:	0c f0       	brlt	.+2      	; 0x40d6 <main+0x160c>
    40d4:	43 c0       	rjmp	.+134    	; 0x415c <main+0x1692>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40d6:	fe 01       	movw	r30, r28
    40d8:	e1 5a       	subi	r30, 0xA1	; 161
    40da:	ff 4f       	sbci	r31, 0xFF	; 255
    40dc:	60 81       	ld	r22, Z
    40de:	71 81       	ldd	r23, Z+1	; 0x01
    40e0:	82 81       	ldd	r24, Z+2	; 0x02
    40e2:	93 81       	ldd	r25, Z+3	; 0x03
    40e4:	20 e0       	ldi	r18, 0x00	; 0
    40e6:	30 e0       	ldi	r19, 0x00	; 0
    40e8:	40 e2       	ldi	r20, 0x20	; 32
    40ea:	51 e4       	ldi	r21, 0x41	; 65
    40ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40f0:	dc 01       	movw	r26, r24
    40f2:	cb 01       	movw	r24, r22
    40f4:	8e 01       	movw	r16, r28
    40f6:	07 5a       	subi	r16, 0xA7	; 167
    40f8:	1f 4f       	sbci	r17, 0xFF	; 255
    40fa:	bc 01       	movw	r22, r24
    40fc:	cd 01       	movw	r24, r26
    40fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4102:	dc 01       	movw	r26, r24
    4104:	cb 01       	movw	r24, r22
    4106:	f8 01       	movw	r30, r16
    4108:	91 83       	std	Z+1, r25	; 0x01
    410a:	80 83       	st	Z, r24
    410c:	1f c0       	rjmp	.+62     	; 0x414c <main+0x1682>
    410e:	fe 01       	movw	r30, r28
    4110:	e9 5a       	subi	r30, 0xA9	; 169
    4112:	ff 4f       	sbci	r31, 0xFF	; 255
    4114:	88 ec       	ldi	r24, 0xC8	; 200
    4116:	90 e0       	ldi	r25, 0x00	; 0
    4118:	91 83       	std	Z+1, r25	; 0x01
    411a:	80 83       	st	Z, r24
    411c:	fe 01       	movw	r30, r28
    411e:	e9 5a       	subi	r30, 0xA9	; 169
    4120:	ff 4f       	sbci	r31, 0xFF	; 255
    4122:	80 81       	ld	r24, Z
    4124:	91 81       	ldd	r25, Z+1	; 0x01
    4126:	01 97       	sbiw	r24, 0x01	; 1
    4128:	f1 f7       	brne	.-4      	; 0x4126 <main+0x165c>
    412a:	fe 01       	movw	r30, r28
    412c:	e9 5a       	subi	r30, 0xA9	; 169
    412e:	ff 4f       	sbci	r31, 0xFF	; 255
    4130:	91 83       	std	Z+1, r25	; 0x01
    4132:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4134:	de 01       	movw	r26, r28
    4136:	a7 5a       	subi	r26, 0xA7	; 167
    4138:	bf 4f       	sbci	r27, 0xFF	; 255
    413a:	fe 01       	movw	r30, r28
    413c:	e7 5a       	subi	r30, 0xA7	; 167
    413e:	ff 4f       	sbci	r31, 0xFF	; 255
    4140:	80 81       	ld	r24, Z
    4142:	91 81       	ldd	r25, Z+1	; 0x01
    4144:	01 97       	sbiw	r24, 0x01	; 1
    4146:	11 96       	adiw	r26, 0x01	; 1
    4148:	9c 93       	st	X, r25
    414a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    414c:	fe 01       	movw	r30, r28
    414e:	e7 5a       	subi	r30, 0xA7	; 167
    4150:	ff 4f       	sbci	r31, 0xFF	; 255
    4152:	80 81       	ld	r24, Z
    4154:	91 81       	ldd	r25, Z+1	; 0x01
    4156:	00 97       	sbiw	r24, 0x00	; 0
    4158:	d1 f6       	brne	.-76     	; 0x410e <main+0x1644>
    415a:	27 c0       	rjmp	.+78     	; 0x41aa <main+0x16e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    415c:	8e 01       	movw	r16, r28
    415e:	07 5a       	subi	r16, 0xA7	; 167
    4160:	1f 4f       	sbci	r17, 0xFF	; 255
    4162:	fe 01       	movw	r30, r28
    4164:	e5 5a       	subi	r30, 0xA5	; 165
    4166:	ff 4f       	sbci	r31, 0xFF	; 255
    4168:	60 81       	ld	r22, Z
    416a:	71 81       	ldd	r23, Z+1	; 0x01
    416c:	82 81       	ldd	r24, Z+2	; 0x02
    416e:	93 81       	ldd	r25, Z+3	; 0x03
    4170:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4174:	dc 01       	movw	r26, r24
    4176:	cb 01       	movw	r24, r22
    4178:	f8 01       	movw	r30, r16
    417a:	91 83       	std	Z+1, r25	; 0x01
    417c:	80 83       	st	Z, r24
    417e:	de 01       	movw	r26, r28
    4180:	ab 5a       	subi	r26, 0xAB	; 171
    4182:	bf 4f       	sbci	r27, 0xFF	; 255
    4184:	fe 01       	movw	r30, r28
    4186:	e7 5a       	subi	r30, 0xA7	; 167
    4188:	ff 4f       	sbci	r31, 0xFF	; 255
    418a:	80 81       	ld	r24, Z
    418c:	91 81       	ldd	r25, Z+1	; 0x01
    418e:	8d 93       	st	X+, r24
    4190:	9c 93       	st	X, r25
    4192:	fe 01       	movw	r30, r28
    4194:	eb 5a       	subi	r30, 0xAB	; 171
    4196:	ff 4f       	sbci	r31, 0xFF	; 255
    4198:	80 81       	ld	r24, Z
    419a:	91 81       	ldd	r25, Z+1	; 0x01
    419c:	01 97       	sbiw	r24, 0x01	; 1
    419e:	f1 f7       	brne	.-4      	; 0x419c <main+0x16d2>
    41a0:	fe 01       	movw	r30, r28
    41a2:	eb 5a       	subi	r30, 0xAB	; 171
    41a4:	ff 4f       	sbci	r31, 0xFF	; 255
    41a6:	91 83       	std	Z+1, r25	; 0x01
    41a8:	80 83       	st	Z, r24

            					_delay_ms(10) ;

            					LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    41aa:	80 e8       	ldi	r24, 0x80	; 128
    41ac:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

            					LCD4_voidSendString(mes4) ;
    41b0:	ce 01       	movw	r24, r28
    41b2:	87 50       	subi	r24, 0x07	; 7
    41b4:	9f 4f       	sbci	r25, 0xFF	; 255
    41b6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

            					LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    41ba:	80 ec       	ldi	r24, 0xC0	; 192
    41bc:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

            					LCD4_voidSendString(mes5) ;
    41c0:	ce 01       	movw	r24, r28
    41c2:	89 5f       	subi	r24, 0xF9	; 249
    41c4:	9e 4f       	sbci	r25, 0xFE	; 254
    41c6:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>
        }




            	counter4 = 20 ;
    41ca:	fe 01       	movw	r30, r28
    41cc:	eb 53       	subi	r30, 0x3B	; 59
    41ce:	ff 4f       	sbci	r31, 0xFF	; 255
    41d0:	84 e1       	ldi	r24, 0x14	; 20
    41d2:	80 83       	st	Z, r24

            	counter1 = 0 ;
    41d4:	fe 01       	movw	r30, r28
    41d6:	e9 53       	subi	r30, 0x39	; 57
    41d8:	ff 4f       	sbci	r31, 0xFF	; 255
    41da:	10 82       	st	Z, r1
        	}



            counter = 10;
    41dc:	fe 01       	movw	r30, r28
    41de:	e8 53       	subi	r30, 0x38	; 56
    41e0:	ff 4f       	sbci	r31, 0xFF	; 255
    41e2:	8a e0       	ldi	r24, 0x0A	; 10
    41e4:	80 83       	st	Z, r24
    41e6:	f1 ca       	rjmp	.-2590   	; 0x37ca <main+0xd00>


}

	else if(chary == 2 )
    41e8:	fe 01       	movw	r30, r28
    41ea:	e6 53       	subi	r30, 0x36	; 54
    41ec:	ff 4f       	sbci	r31, 0xFF	; 255
    41ee:	80 81       	ld	r24, Z
    41f0:	82 30       	cpi	r24, 0x02	; 2
    41f2:	09 f0       	breq	.+2      	; 0x41f6 <main+0x172c>
    41f4:	ea ca       	rjmp	.-2604   	; 0x37ca <main+0xd00>
	{
		x = 1;
    41f6:	fe 01       	movw	r30, r28
    41f8:	e7 53       	subi	r30, 0x37	; 55
    41fa:	ff 4f       	sbci	r31, 0xFF	; 255
    41fc:	81 e0       	ldi	r24, 0x01	; 1
    41fe:	80 83       	st	Z, r24

		if (counter3 == 0)
    4200:	fe 01       	movw	r30, r28
    4202:	ea 53       	subi	r30, 0x3A	; 58
    4204:	ff 4f       	sbci	r31, 0xFF	; 255
    4206:	80 81       	ld	r24, Z
    4208:	88 23       	and	r24, r24
    420a:	09 f0       	breq	.+2      	; 0x420e <main+0x1744>
    420c:	c6 c0       	rjmp	.+396    	; 0x439a <main+0x18d0>
				{
	        	LCD4_voidSendCmd(LCD_CLEAR);
    420e:	81 e0       	ldi	r24, 0x01	; 1
    4210:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    4214:	fe 01       	movw	r30, r28
    4216:	ef 5a       	subi	r30, 0xAF	; 175
    4218:	ff 4f       	sbci	r31, 0xFF	; 255
    421a:	80 e0       	ldi	r24, 0x00	; 0
    421c:	90 e0       	ldi	r25, 0x00	; 0
    421e:	a0 e2       	ldi	r26, 0x20	; 32
    4220:	b1 e4       	ldi	r27, 0x41	; 65
    4222:	80 83       	st	Z, r24
    4224:	91 83       	std	Z+1, r25	; 0x01
    4226:	a2 83       	std	Z+2, r26	; 0x02
    4228:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    422a:	8e 01       	movw	r16, r28
    422c:	03 5b       	subi	r16, 0xB3	; 179
    422e:	1f 4f       	sbci	r17, 0xFF	; 255
    4230:	fe 01       	movw	r30, r28
    4232:	ef 5a       	subi	r30, 0xAF	; 175
    4234:	ff 4f       	sbci	r31, 0xFF	; 255
    4236:	60 81       	ld	r22, Z
    4238:	71 81       	ldd	r23, Z+1	; 0x01
    423a:	82 81       	ldd	r24, Z+2	; 0x02
    423c:	93 81       	ldd	r25, Z+3	; 0x03
    423e:	20 e0       	ldi	r18, 0x00	; 0
    4240:	30 e0       	ldi	r19, 0x00	; 0
    4242:	4a ef       	ldi	r20, 0xFA	; 250
    4244:	54 e4       	ldi	r21, 0x44	; 68
    4246:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    424a:	dc 01       	movw	r26, r24
    424c:	cb 01       	movw	r24, r22
    424e:	f8 01       	movw	r30, r16
    4250:	80 83       	st	Z, r24
    4252:	91 83       	std	Z+1, r25	; 0x01
    4254:	a2 83       	std	Z+2, r26	; 0x02
    4256:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4258:	fe 01       	movw	r30, r28
    425a:	e3 5b       	subi	r30, 0xB3	; 179
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	60 81       	ld	r22, Z
    4260:	71 81       	ldd	r23, Z+1	; 0x01
    4262:	82 81       	ldd	r24, Z+2	; 0x02
    4264:	93 81       	ldd	r25, Z+3	; 0x03
    4266:	20 e0       	ldi	r18, 0x00	; 0
    4268:	30 e0       	ldi	r19, 0x00	; 0
    426a:	40 e8       	ldi	r20, 0x80	; 128
    426c:	5f e3       	ldi	r21, 0x3F	; 63
    426e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4272:	88 23       	and	r24, r24
    4274:	44 f4       	brge	.+16     	; 0x4286 <main+0x17bc>
		__ticks = 1;
    4276:	fe 01       	movw	r30, r28
    4278:	e5 5b       	subi	r30, 0xB5	; 181
    427a:	ff 4f       	sbci	r31, 0xFF	; 255
    427c:	81 e0       	ldi	r24, 0x01	; 1
    427e:	90 e0       	ldi	r25, 0x00	; 0
    4280:	91 83       	std	Z+1, r25	; 0x01
    4282:	80 83       	st	Z, r24
    4284:	64 c0       	rjmp	.+200    	; 0x434e <main+0x1884>
	else if (__tmp > 65535)
    4286:	fe 01       	movw	r30, r28
    4288:	e3 5b       	subi	r30, 0xB3	; 179
    428a:	ff 4f       	sbci	r31, 0xFF	; 255
    428c:	60 81       	ld	r22, Z
    428e:	71 81       	ldd	r23, Z+1	; 0x01
    4290:	82 81       	ldd	r24, Z+2	; 0x02
    4292:	93 81       	ldd	r25, Z+3	; 0x03
    4294:	20 e0       	ldi	r18, 0x00	; 0
    4296:	3f ef       	ldi	r19, 0xFF	; 255
    4298:	4f e7       	ldi	r20, 0x7F	; 127
    429a:	57 e4       	ldi	r21, 0x47	; 71
    429c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    42a0:	18 16       	cp	r1, r24
    42a2:	0c f0       	brlt	.+2      	; 0x42a6 <main+0x17dc>
    42a4:	43 c0       	rjmp	.+134    	; 0x432c <main+0x1862>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42a6:	fe 01       	movw	r30, r28
    42a8:	ef 5a       	subi	r30, 0xAF	; 175
    42aa:	ff 4f       	sbci	r31, 0xFF	; 255
    42ac:	60 81       	ld	r22, Z
    42ae:	71 81       	ldd	r23, Z+1	; 0x01
    42b0:	82 81       	ldd	r24, Z+2	; 0x02
    42b2:	93 81       	ldd	r25, Z+3	; 0x03
    42b4:	20 e0       	ldi	r18, 0x00	; 0
    42b6:	30 e0       	ldi	r19, 0x00	; 0
    42b8:	40 e2       	ldi	r20, 0x20	; 32
    42ba:	51 e4       	ldi	r21, 0x41	; 65
    42bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42c0:	dc 01       	movw	r26, r24
    42c2:	cb 01       	movw	r24, r22
    42c4:	8e 01       	movw	r16, r28
    42c6:	05 5b       	subi	r16, 0xB5	; 181
    42c8:	1f 4f       	sbci	r17, 0xFF	; 255
    42ca:	bc 01       	movw	r22, r24
    42cc:	cd 01       	movw	r24, r26
    42ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42d2:	dc 01       	movw	r26, r24
    42d4:	cb 01       	movw	r24, r22
    42d6:	f8 01       	movw	r30, r16
    42d8:	91 83       	std	Z+1, r25	; 0x01
    42da:	80 83       	st	Z, r24
    42dc:	1f c0       	rjmp	.+62     	; 0x431c <main+0x1852>
    42de:	fe 01       	movw	r30, r28
    42e0:	e7 5b       	subi	r30, 0xB7	; 183
    42e2:	ff 4f       	sbci	r31, 0xFF	; 255
    42e4:	88 ec       	ldi	r24, 0xC8	; 200
    42e6:	90 e0       	ldi	r25, 0x00	; 0
    42e8:	91 83       	std	Z+1, r25	; 0x01
    42ea:	80 83       	st	Z, r24
    42ec:	fe 01       	movw	r30, r28
    42ee:	e7 5b       	subi	r30, 0xB7	; 183
    42f0:	ff 4f       	sbci	r31, 0xFF	; 255
    42f2:	80 81       	ld	r24, Z
    42f4:	91 81       	ldd	r25, Z+1	; 0x01
    42f6:	01 97       	sbiw	r24, 0x01	; 1
    42f8:	f1 f7       	brne	.-4      	; 0x42f6 <main+0x182c>
    42fa:	fe 01       	movw	r30, r28
    42fc:	e7 5b       	subi	r30, 0xB7	; 183
    42fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4300:	91 83       	std	Z+1, r25	; 0x01
    4302:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4304:	de 01       	movw	r26, r28
    4306:	a5 5b       	subi	r26, 0xB5	; 181
    4308:	bf 4f       	sbci	r27, 0xFF	; 255
    430a:	fe 01       	movw	r30, r28
    430c:	e5 5b       	subi	r30, 0xB5	; 181
    430e:	ff 4f       	sbci	r31, 0xFF	; 255
    4310:	80 81       	ld	r24, Z
    4312:	91 81       	ldd	r25, Z+1	; 0x01
    4314:	01 97       	sbiw	r24, 0x01	; 1
    4316:	11 96       	adiw	r26, 0x01	; 1
    4318:	9c 93       	st	X, r25
    431a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    431c:	fe 01       	movw	r30, r28
    431e:	e5 5b       	subi	r30, 0xB5	; 181
    4320:	ff 4f       	sbci	r31, 0xFF	; 255
    4322:	80 81       	ld	r24, Z
    4324:	91 81       	ldd	r25, Z+1	; 0x01
    4326:	00 97       	sbiw	r24, 0x00	; 0
    4328:	d1 f6       	brne	.-76     	; 0x42de <main+0x1814>
    432a:	27 c0       	rjmp	.+78     	; 0x437a <main+0x18b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    432c:	8e 01       	movw	r16, r28
    432e:	05 5b       	subi	r16, 0xB5	; 181
    4330:	1f 4f       	sbci	r17, 0xFF	; 255
    4332:	fe 01       	movw	r30, r28
    4334:	e3 5b       	subi	r30, 0xB3	; 179
    4336:	ff 4f       	sbci	r31, 0xFF	; 255
    4338:	60 81       	ld	r22, Z
    433a:	71 81       	ldd	r23, Z+1	; 0x01
    433c:	82 81       	ldd	r24, Z+2	; 0x02
    433e:	93 81       	ldd	r25, Z+3	; 0x03
    4340:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4344:	dc 01       	movw	r26, r24
    4346:	cb 01       	movw	r24, r22
    4348:	f8 01       	movw	r30, r16
    434a:	91 83       	std	Z+1, r25	; 0x01
    434c:	80 83       	st	Z, r24
    434e:	de 01       	movw	r26, r28
    4350:	a9 5b       	subi	r26, 0xB9	; 185
    4352:	bf 4f       	sbci	r27, 0xFF	; 255
    4354:	fe 01       	movw	r30, r28
    4356:	e5 5b       	subi	r30, 0xB5	; 181
    4358:	ff 4f       	sbci	r31, 0xFF	; 255
    435a:	80 81       	ld	r24, Z
    435c:	91 81       	ldd	r25, Z+1	; 0x01
    435e:	8d 93       	st	X+, r24
    4360:	9c 93       	st	X, r25
    4362:	fe 01       	movw	r30, r28
    4364:	e9 5b       	subi	r30, 0xB9	; 185
    4366:	ff 4f       	sbci	r31, 0xFF	; 255
    4368:	80 81       	ld	r24, Z
    436a:	91 81       	ldd	r25, Z+1	; 0x01
    436c:	01 97       	sbiw	r24, 0x01	; 1
    436e:	f1 f7       	brne	.-4      	; 0x436c <main+0x18a2>
    4370:	fe 01       	movw	r30, r28
    4372:	e9 5b       	subi	r30, 0xB9	; 185
    4374:	ff 4f       	sbci	r31, 0xFF	; 255
    4376:	91 83       	std	Z+1, r25	; 0x01
    4378:	80 83       	st	Z, r24

				_delay_ms(10) ;

				LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    437a:	80 e8       	ldi	r24, 0x80	; 128
    437c:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

				LCD4_voidSendString(mes6) ;
    4380:	ce 01       	movw	r24, r28
    4382:	8a 5e       	subi	r24, 0xEA	; 234
    4384:	9e 4f       	sbci	r25, 0xFE	; 254
    4386:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

			    LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    438a:	80 ec       	ldi	r24, 0xC0	; 192
    438c:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

				LCD4_voidSendString(mes7) ;
    4390:	ce 01       	movw	r24, r28
    4392:	81 5e       	subi	r24, 0xE1	; 225
    4394:	9e 4f       	sbci	r25, 0xFE	; 254
    4396:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

				}

					KeyBad_u8GetKey(&chary1);
    439a:	ce 01       	movw	r24, r28
    439c:	85 53       	subi	r24, 0x35	; 53
    439e:	9f 4f       	sbci	r25, 0xFF	; 255
    43a0:	0e 94 ce 08 	call	0x119c	; 0x119c <KeyBad_u8GetKey>

		            if(chary1 == 1)
    43a4:	fe 01       	movw	r30, r28
    43a6:	e5 53       	subi	r30, 0x35	; 53
    43a8:	ff 4f       	sbci	r31, 0xFF	; 255
    43aa:	80 81       	ld	r24, Z
    43ac:	81 30       	cpi	r24, 0x01	; 1
    43ae:	09 f0       	breq	.+2      	; 0x43b2 <main+0x18e8>
    43b0:	b1 c0       	rjmp	.+354    	; 0x4514 <main+0x1a4a>
		            	{

		            	if (counter1 == 0)
    43b2:	fe 01       	movw	r30, r28
    43b4:	e9 53       	subi	r30, 0x39	; 57
    43b6:	ff 4f       	sbci	r31, 0xFF	; 255
    43b8:	80 81       	ld	r24, Z
    43ba:	88 23       	and	r24, r24
    43bc:	09 f0       	breq	.+2      	; 0x43c0 <main+0x18f6>
    43be:	9b c0       	rjmp	.+310    	; 0x44f6 <main+0x1a2c>
		            	              {

		            		LCD4_voidSendCmd(LCD_CLEAR);
    43c0:	81 e0       	ldi	r24, 0x01	; 1
    43c2:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    43c6:	fe 01       	movw	r30, r28
    43c8:	ed 5b       	subi	r30, 0xBD	; 189
    43ca:	ff 4f       	sbci	r31, 0xFF	; 255
    43cc:	80 e0       	ldi	r24, 0x00	; 0
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	a0 e2       	ldi	r26, 0x20	; 32
    43d2:	b1 e4       	ldi	r27, 0x41	; 65
    43d4:	80 83       	st	Z, r24
    43d6:	91 83       	std	Z+1, r25	; 0x01
    43d8:	a2 83       	std	Z+2, r26	; 0x02
    43da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43dc:	8e 01       	movw	r16, r28
    43de:	01 5c       	subi	r16, 0xC1	; 193
    43e0:	1f 4f       	sbci	r17, 0xFF	; 255
    43e2:	fe 01       	movw	r30, r28
    43e4:	ed 5b       	subi	r30, 0xBD	; 189
    43e6:	ff 4f       	sbci	r31, 0xFF	; 255
    43e8:	60 81       	ld	r22, Z
    43ea:	71 81       	ldd	r23, Z+1	; 0x01
    43ec:	82 81       	ldd	r24, Z+2	; 0x02
    43ee:	93 81       	ldd	r25, Z+3	; 0x03
    43f0:	20 e0       	ldi	r18, 0x00	; 0
    43f2:	30 e0       	ldi	r19, 0x00	; 0
    43f4:	4a ef       	ldi	r20, 0xFA	; 250
    43f6:	54 e4       	ldi	r21, 0x44	; 68
    43f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43fc:	dc 01       	movw	r26, r24
    43fe:	cb 01       	movw	r24, r22
    4400:	f8 01       	movw	r30, r16
    4402:	80 83       	st	Z, r24
    4404:	91 83       	std	Z+1, r25	; 0x01
    4406:	a2 83       	std	Z+2, r26	; 0x02
    4408:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    440a:	fe 01       	movw	r30, r28
    440c:	ff 96       	adiw	r30, 0x3f	; 63
    440e:	60 81       	ld	r22, Z
    4410:	71 81       	ldd	r23, Z+1	; 0x01
    4412:	82 81       	ldd	r24, Z+2	; 0x02
    4414:	93 81       	ldd	r25, Z+3	; 0x03
    4416:	20 e0       	ldi	r18, 0x00	; 0
    4418:	30 e0       	ldi	r19, 0x00	; 0
    441a:	40 e8       	ldi	r20, 0x80	; 128
    441c:	5f e3       	ldi	r21, 0x3F	; 63
    441e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4422:	88 23       	and	r24, r24
    4424:	2c f4       	brge	.+10     	; 0x4430 <main+0x1966>
		__ticks = 1;
    4426:	81 e0       	ldi	r24, 0x01	; 1
    4428:	90 e0       	ldi	r25, 0x00	; 0
    442a:	9e af       	std	Y+62, r25	; 0x3e
    442c:	8d af       	std	Y+61, r24	; 0x3d
    442e:	46 c0       	rjmp	.+140    	; 0x44bc <main+0x19f2>
	else if (__tmp > 65535)
    4430:	fe 01       	movw	r30, r28
    4432:	ff 96       	adiw	r30, 0x3f	; 63
    4434:	60 81       	ld	r22, Z
    4436:	71 81       	ldd	r23, Z+1	; 0x01
    4438:	82 81       	ldd	r24, Z+2	; 0x02
    443a:	93 81       	ldd	r25, Z+3	; 0x03
    443c:	20 e0       	ldi	r18, 0x00	; 0
    443e:	3f ef       	ldi	r19, 0xFF	; 255
    4440:	4f e7       	ldi	r20, 0x7F	; 127
    4442:	57 e4       	ldi	r21, 0x47	; 71
    4444:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4448:	18 16       	cp	r1, r24
    444a:	64 f5       	brge	.+88     	; 0x44a4 <main+0x19da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    444c:	fe 01       	movw	r30, r28
    444e:	ed 5b       	subi	r30, 0xBD	; 189
    4450:	ff 4f       	sbci	r31, 0xFF	; 255
    4452:	60 81       	ld	r22, Z
    4454:	71 81       	ldd	r23, Z+1	; 0x01
    4456:	82 81       	ldd	r24, Z+2	; 0x02
    4458:	93 81       	ldd	r25, Z+3	; 0x03
    445a:	20 e0       	ldi	r18, 0x00	; 0
    445c:	30 e0       	ldi	r19, 0x00	; 0
    445e:	40 e2       	ldi	r20, 0x20	; 32
    4460:	51 e4       	ldi	r21, 0x41	; 65
    4462:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4466:	dc 01       	movw	r26, r24
    4468:	cb 01       	movw	r24, r22
    446a:	bc 01       	movw	r22, r24
    446c:	cd 01       	movw	r24, r26
    446e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4472:	dc 01       	movw	r26, r24
    4474:	cb 01       	movw	r24, r22
    4476:	9e af       	std	Y+62, r25	; 0x3e
    4478:	8d af       	std	Y+61, r24	; 0x3d
    447a:	0f c0       	rjmp	.+30     	; 0x449a <main+0x19d0>
    447c:	88 ec       	ldi	r24, 0xC8	; 200
    447e:	90 e0       	ldi	r25, 0x00	; 0
    4480:	9c af       	std	Y+60, r25	; 0x3c
    4482:	8b af       	std	Y+59, r24	; 0x3b
    4484:	8b ad       	ldd	r24, Y+59	; 0x3b
    4486:	9c ad       	ldd	r25, Y+60	; 0x3c
    4488:	01 97       	sbiw	r24, 0x01	; 1
    448a:	f1 f7       	brne	.-4      	; 0x4488 <main+0x19be>
    448c:	9c af       	std	Y+60, r25	; 0x3c
    448e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4490:	8d ad       	ldd	r24, Y+61	; 0x3d
    4492:	9e ad       	ldd	r25, Y+62	; 0x3e
    4494:	01 97       	sbiw	r24, 0x01	; 1
    4496:	9e af       	std	Y+62, r25	; 0x3e
    4498:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    449a:	8d ad       	ldd	r24, Y+61	; 0x3d
    449c:	9e ad       	ldd	r25, Y+62	; 0x3e
    449e:	00 97       	sbiw	r24, 0x00	; 0
    44a0:	69 f7       	brne	.-38     	; 0x447c <main+0x19b2>
    44a2:	16 c0       	rjmp	.+44     	; 0x44d0 <main+0x1a06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44a4:	fe 01       	movw	r30, r28
    44a6:	ff 96       	adiw	r30, 0x3f	; 63
    44a8:	60 81       	ld	r22, Z
    44aa:	71 81       	ldd	r23, Z+1	; 0x01
    44ac:	82 81       	ldd	r24, Z+2	; 0x02
    44ae:	93 81       	ldd	r25, Z+3	; 0x03
    44b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44b4:	dc 01       	movw	r26, r24
    44b6:	cb 01       	movw	r24, r22
    44b8:	9e af       	std	Y+62, r25	; 0x3e
    44ba:	8d af       	std	Y+61, r24	; 0x3d
    44bc:	8d ad       	ldd	r24, Y+61	; 0x3d
    44be:	9e ad       	ldd	r25, Y+62	; 0x3e
    44c0:	9a af       	std	Y+58, r25	; 0x3a
    44c2:	89 af       	std	Y+57, r24	; 0x39
    44c4:	89 ad       	ldd	r24, Y+57	; 0x39
    44c6:	9a ad       	ldd	r25, Y+58	; 0x3a
    44c8:	01 97       	sbiw	r24, 0x01	; 1
    44ca:	f1 f7       	brne	.-4      	; 0x44c8 <main+0x19fe>
    44cc:	9a af       	std	Y+58, r25	; 0x3a
    44ce:	89 af       	std	Y+57, r24	; 0x39

		            		_delay_ms(10) ;

		            		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    44d0:	80 e8       	ldi	r24, 0x80	; 128
    44d2:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

		            		LCD4_voidSendString(mes8) ;
    44d6:	ce 01       	movw	r24, r28
    44d8:	87 5d       	subi	r24, 0xD7	; 215
    44da:	9e 4f       	sbci	r25, 0xFE	; 254
    44dc:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

		            		LCD4_voidSendChar(0b11110011) ;
    44e0:	83 ef       	ldi	r24, 0xF3	; 243
    44e2:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <LCD4_voidSendChar>

		            		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    44e6:	80 ec       	ldi	r24, 0xC0	; 192
    44e8:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

		            		            		LCD4_voidSendString(mes13) ;
    44ec:	ce 01       	movw	r24, r28
    44ee:	8b 59       	subi	r24, 0x9B	; 155
    44f0:	9e 4f       	sbci	r25, 0xFE	; 254
    44f2:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>


		            	              }

		            		DIO_u8SetPinValue(DIO_PORT_C , 6, DIO_PIN_HIGH) ;
    44f6:	82 e0       	ldi	r24, 0x02	; 2
    44f8:	66 e0       	ldi	r22, 0x06	; 6
    44fa:	41 e0       	ldi	r20, 0x01	; 1
    44fc:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

		            		counter1 = 10 ;
    4500:	fe 01       	movw	r30, r28
    4502:	e9 53       	subi	r30, 0x39	; 57
    4504:	ff 4f       	sbci	r31, 0xFF	; 255
    4506:	8a e0       	ldi	r24, 0x0A	; 10
    4508:	80 83       	st	Z, r24

		            		 counter4 = 0 ;
    450a:	fe 01       	movw	r30, r28
    450c:	eb 53       	subi	r30, 0x3B	; 59
    450e:	ff 4f       	sbci	r31, 0xFF	; 255
    4510:	10 82       	st	Z, r1
    4512:	36 c2       	rjmp	.+1132   	; 0x4980 <main+0x1eb6>

		            	}
		            else if (chary1 == 2)
    4514:	fe 01       	movw	r30, r28
    4516:	e5 53       	subi	r30, 0x35	; 53
    4518:	ff 4f       	sbci	r31, 0xFF	; 255
    451a:	80 81       	ld	r24, Z
    451c:	82 30       	cpi	r24, 0x02	; 2
    451e:	09 f0       	breq	.+2      	; 0x4522 <main+0x1a58>
    4520:	9e c0       	rjmp	.+316    	; 0x465e <main+0x1b94>
		            {

		            	if (counter1 == 0)
    4522:	fe 01       	movw	r30, r28
    4524:	e9 53       	subi	r30, 0x39	; 57
    4526:	ff 4f       	sbci	r31, 0xFF	; 255
    4528:	80 81       	ld	r24, Z
    452a:	88 23       	and	r24, r24
    452c:	09 f0       	breq	.+2      	; 0x4530 <main+0x1a66>
    452e:	88 c0       	rjmp	.+272    	; 0x4640 <main+0x1b76>
		            	              {


		            	LCD4_voidSendCmd(LCD_CLEAR);
    4530:	81 e0       	ldi	r24, 0x01	; 1
    4532:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    4536:	80 e0       	ldi	r24, 0x00	; 0
    4538:	90 e0       	ldi	r25, 0x00	; 0
    453a:	a0 e2       	ldi	r26, 0x20	; 32
    453c:	b1 e4       	ldi	r27, 0x41	; 65
    453e:	8d ab       	std	Y+53, r24	; 0x35
    4540:	9e ab       	std	Y+54, r25	; 0x36
    4542:	af ab       	std	Y+55, r26	; 0x37
    4544:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4546:	6d a9       	ldd	r22, Y+53	; 0x35
    4548:	7e a9       	ldd	r23, Y+54	; 0x36
    454a:	8f a9       	ldd	r24, Y+55	; 0x37
    454c:	98 ad       	ldd	r25, Y+56	; 0x38
    454e:	20 e0       	ldi	r18, 0x00	; 0
    4550:	30 e0       	ldi	r19, 0x00	; 0
    4552:	4a ef       	ldi	r20, 0xFA	; 250
    4554:	54 e4       	ldi	r21, 0x44	; 68
    4556:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    455a:	dc 01       	movw	r26, r24
    455c:	cb 01       	movw	r24, r22
    455e:	89 ab       	std	Y+49, r24	; 0x31
    4560:	9a ab       	std	Y+50, r25	; 0x32
    4562:	ab ab       	std	Y+51, r26	; 0x33
    4564:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4566:	69 a9       	ldd	r22, Y+49	; 0x31
    4568:	7a a9       	ldd	r23, Y+50	; 0x32
    456a:	8b a9       	ldd	r24, Y+51	; 0x33
    456c:	9c a9       	ldd	r25, Y+52	; 0x34
    456e:	20 e0       	ldi	r18, 0x00	; 0
    4570:	30 e0       	ldi	r19, 0x00	; 0
    4572:	40 e8       	ldi	r20, 0x80	; 128
    4574:	5f e3       	ldi	r21, 0x3F	; 63
    4576:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    457a:	88 23       	and	r24, r24
    457c:	2c f4       	brge	.+10     	; 0x4588 <main+0x1abe>
		__ticks = 1;
    457e:	81 e0       	ldi	r24, 0x01	; 1
    4580:	90 e0       	ldi	r25, 0x00	; 0
    4582:	98 ab       	std	Y+48, r25	; 0x30
    4584:	8f a7       	std	Y+47, r24	; 0x2f
    4586:	3f c0       	rjmp	.+126    	; 0x4606 <main+0x1b3c>
	else if (__tmp > 65535)
    4588:	69 a9       	ldd	r22, Y+49	; 0x31
    458a:	7a a9       	ldd	r23, Y+50	; 0x32
    458c:	8b a9       	ldd	r24, Y+51	; 0x33
    458e:	9c a9       	ldd	r25, Y+52	; 0x34
    4590:	20 e0       	ldi	r18, 0x00	; 0
    4592:	3f ef       	ldi	r19, 0xFF	; 255
    4594:	4f e7       	ldi	r20, 0x7F	; 127
    4596:	57 e4       	ldi	r21, 0x47	; 71
    4598:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    459c:	18 16       	cp	r1, r24
    459e:	4c f5       	brge	.+82     	; 0x45f2 <main+0x1b28>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45a0:	6d a9       	ldd	r22, Y+53	; 0x35
    45a2:	7e a9       	ldd	r23, Y+54	; 0x36
    45a4:	8f a9       	ldd	r24, Y+55	; 0x37
    45a6:	98 ad       	ldd	r25, Y+56	; 0x38
    45a8:	20 e0       	ldi	r18, 0x00	; 0
    45aa:	30 e0       	ldi	r19, 0x00	; 0
    45ac:	40 e2       	ldi	r20, 0x20	; 32
    45ae:	51 e4       	ldi	r21, 0x41	; 65
    45b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45b4:	dc 01       	movw	r26, r24
    45b6:	cb 01       	movw	r24, r22
    45b8:	bc 01       	movw	r22, r24
    45ba:	cd 01       	movw	r24, r26
    45bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45c0:	dc 01       	movw	r26, r24
    45c2:	cb 01       	movw	r24, r22
    45c4:	98 ab       	std	Y+48, r25	; 0x30
    45c6:	8f a7       	std	Y+47, r24	; 0x2f
    45c8:	0f c0       	rjmp	.+30     	; 0x45e8 <main+0x1b1e>
    45ca:	88 ec       	ldi	r24, 0xC8	; 200
    45cc:	90 e0       	ldi	r25, 0x00	; 0
    45ce:	9e a7       	std	Y+46, r25	; 0x2e
    45d0:	8d a7       	std	Y+45, r24	; 0x2d
    45d2:	8d a5       	ldd	r24, Y+45	; 0x2d
    45d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    45d6:	01 97       	sbiw	r24, 0x01	; 1
    45d8:	f1 f7       	brne	.-4      	; 0x45d6 <main+0x1b0c>
    45da:	9e a7       	std	Y+46, r25	; 0x2e
    45dc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45de:	8f a5       	ldd	r24, Y+47	; 0x2f
    45e0:	98 a9       	ldd	r25, Y+48	; 0x30
    45e2:	01 97       	sbiw	r24, 0x01	; 1
    45e4:	98 ab       	std	Y+48, r25	; 0x30
    45e6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    45ea:	98 a9       	ldd	r25, Y+48	; 0x30
    45ec:	00 97       	sbiw	r24, 0x00	; 0
    45ee:	69 f7       	brne	.-38     	; 0x45ca <main+0x1b00>
    45f0:	14 c0       	rjmp	.+40     	; 0x461a <main+0x1b50>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45f2:	69 a9       	ldd	r22, Y+49	; 0x31
    45f4:	7a a9       	ldd	r23, Y+50	; 0x32
    45f6:	8b a9       	ldd	r24, Y+51	; 0x33
    45f8:	9c a9       	ldd	r25, Y+52	; 0x34
    45fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45fe:	dc 01       	movw	r26, r24
    4600:	cb 01       	movw	r24, r22
    4602:	98 ab       	std	Y+48, r25	; 0x30
    4604:	8f a7       	std	Y+47, r24	; 0x2f
    4606:	8f a5       	ldd	r24, Y+47	; 0x2f
    4608:	98 a9       	ldd	r25, Y+48	; 0x30
    460a:	9c a7       	std	Y+44, r25	; 0x2c
    460c:	8b a7       	std	Y+43, r24	; 0x2b
    460e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4610:	9c a5       	ldd	r25, Y+44	; 0x2c
    4612:	01 97       	sbiw	r24, 0x01	; 1
    4614:	f1 f7       	brne	.-4      	; 0x4612 <main+0x1b48>
    4616:	9c a7       	std	Y+44, r25	; 0x2c
    4618:	8b a7       	std	Y+43, r24	; 0x2b

			   	   		_delay_ms(10) ;

			   	   		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    461a:	80 e8       	ldi	r24, 0x80	; 128
    461c:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

			   	   		LCD4_voidSendString(mes8) ;
    4620:	ce 01       	movw	r24, r28
    4622:	87 5d       	subi	r24, 0xD7	; 215
    4624:	9e 4f       	sbci	r25, 0xFE	; 254
    4626:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

			   	   	LCD4_voidSendChar(0b11110011) ;
    462a:	83 ef       	ldi	r24, 0xF3	; 243
    462c:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <LCD4_voidSendChar>
			   	 LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    4630:	80 ec       	ldi	r24, 0xC0	; 192
    4632:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

			   	             		LCD4_voidSendString(mes14) ;
    4636:	ce 01       	movw	r24, r28
    4638:	85 59       	subi	r24, 0x95	; 149
    463a:	9e 4f       	sbci	r25, 0xFE	; 254
    463c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

		            	              }

			   	   	DIO_u8SetPinValue(DIO_PORT_C , 7, DIO_PIN_HIGH) ;
    4640:	82 e0       	ldi	r24, 0x02	; 2
    4642:	67 e0       	ldi	r22, 0x07	; 7
    4644:	41 e0       	ldi	r20, 0x01	; 1
    4646:	0e 94 b5 06 	call	0xd6a	; 0xd6a <DIO_u8SetPinValue>

			   	   	counter1 = 10 ;
    464a:	fe 01       	movw	r30, r28
    464c:	e9 53       	subi	r30, 0x39	; 57
    464e:	ff 4f       	sbci	r31, 0xFF	; 255
    4650:	8a e0       	ldi	r24, 0x0A	; 10
    4652:	80 83       	st	Z, r24

			   	 counter4 = 0 ;
    4654:	fe 01       	movw	r30, r28
    4656:	eb 53       	subi	r30, 0x3B	; 59
    4658:	ff 4f       	sbci	r31, 0xFF	; 255
    465a:	10 82       	st	Z, r1
    465c:	91 c1       	rjmp	.+802    	; 0x4980 <main+0x1eb6>

		            }

		            else if (chary1 == 3)
    465e:	fe 01       	movw	r30, r28
    4660:	e5 53       	subi	r30, 0x35	; 53
    4662:	ff 4f       	sbci	r31, 0xFF	; 255
    4664:	80 81       	ld	r24, Z
    4666:	83 30       	cpi	r24, 0x03	; 3
    4668:	09 f0       	breq	.+2      	; 0x466c <main+0x1ba2>
    466a:	8a c1       	rjmp	.+788    	; 0x4980 <main+0x1eb6>

		                   {
		        		STEPPER_voidStop();
    466c:	0e 94 04 11 	call	0x2208	; 0x2208 <STEPPER_voidStop>

		        		DIO_u8SetPortValue(DIO_PORT_A , DIO_PORT_LOW) ;
    4670:	80 e0       	ldi	r24, 0x00	; 0
    4672:	60 e0       	ldi	r22, 0x00	; 0
    4674:	0e 94 81 07 	call	0xf02	; 0xf02 <DIO_u8SetPortValue>

		                        	if (counter4 == 0)
    4678:	fe 01       	movw	r30, r28
    467a:	eb 53       	subi	r30, 0x3B	; 59
    467c:	ff 4f       	sbci	r31, 0xFF	; 255
    467e:	80 81       	ld	r24, Z
    4680:	88 23       	and	r24, r24
    4682:	09 f0       	breq	.+2      	; 0x4686 <main+0x1bbc>
    4684:	74 c1       	rjmp	.+744    	; 0x496e <main+0x1ea4>
		                   {
		                        		LCD4_voidSendCmd(LCD_CLEAR);
    4686:	81 e0       	ldi	r24, 0x01	; 1
    4688:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    468c:	80 e0       	ldi	r24, 0x00	; 0
    468e:	90 e0       	ldi	r25, 0x00	; 0
    4690:	a0 e2       	ldi	r26, 0x20	; 32
    4692:	b1 e4       	ldi	r27, 0x41	; 65
    4694:	8f a3       	std	Y+39, r24	; 0x27
    4696:	98 a7       	std	Y+40, r25	; 0x28
    4698:	a9 a7       	std	Y+41, r26	; 0x29
    469a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    469c:	6f a1       	ldd	r22, Y+39	; 0x27
    469e:	78 a5       	ldd	r23, Y+40	; 0x28
    46a0:	89 a5       	ldd	r24, Y+41	; 0x29
    46a2:	9a a5       	ldd	r25, Y+42	; 0x2a
    46a4:	20 e0       	ldi	r18, 0x00	; 0
    46a6:	30 e0       	ldi	r19, 0x00	; 0
    46a8:	4a ef       	ldi	r20, 0xFA	; 250
    46aa:	54 e4       	ldi	r21, 0x44	; 68
    46ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46b0:	dc 01       	movw	r26, r24
    46b2:	cb 01       	movw	r24, r22
    46b4:	8b a3       	std	Y+35, r24	; 0x23
    46b6:	9c a3       	std	Y+36, r25	; 0x24
    46b8:	ad a3       	std	Y+37, r26	; 0x25
    46ba:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    46bc:	6b a1       	ldd	r22, Y+35	; 0x23
    46be:	7c a1       	ldd	r23, Y+36	; 0x24
    46c0:	8d a1       	ldd	r24, Y+37	; 0x25
    46c2:	9e a1       	ldd	r25, Y+38	; 0x26
    46c4:	20 e0       	ldi	r18, 0x00	; 0
    46c6:	30 e0       	ldi	r19, 0x00	; 0
    46c8:	40 e8       	ldi	r20, 0x80	; 128
    46ca:	5f e3       	ldi	r21, 0x3F	; 63
    46cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46d0:	88 23       	and	r24, r24
    46d2:	2c f4       	brge	.+10     	; 0x46de <main+0x1c14>
		__ticks = 1;
    46d4:	81 e0       	ldi	r24, 0x01	; 1
    46d6:	90 e0       	ldi	r25, 0x00	; 0
    46d8:	9a a3       	std	Y+34, r25	; 0x22
    46da:	89 a3       	std	Y+33, r24	; 0x21
    46dc:	3f c0       	rjmp	.+126    	; 0x475c <main+0x1c92>
	else if (__tmp > 65535)
    46de:	6b a1       	ldd	r22, Y+35	; 0x23
    46e0:	7c a1       	ldd	r23, Y+36	; 0x24
    46e2:	8d a1       	ldd	r24, Y+37	; 0x25
    46e4:	9e a1       	ldd	r25, Y+38	; 0x26
    46e6:	20 e0       	ldi	r18, 0x00	; 0
    46e8:	3f ef       	ldi	r19, 0xFF	; 255
    46ea:	4f e7       	ldi	r20, 0x7F	; 127
    46ec:	57 e4       	ldi	r21, 0x47	; 71
    46ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    46f2:	18 16       	cp	r1, r24
    46f4:	4c f5       	brge	.+82     	; 0x4748 <main+0x1c7e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46f6:	6f a1       	ldd	r22, Y+39	; 0x27
    46f8:	78 a5       	ldd	r23, Y+40	; 0x28
    46fa:	89 a5       	ldd	r24, Y+41	; 0x29
    46fc:	9a a5       	ldd	r25, Y+42	; 0x2a
    46fe:	20 e0       	ldi	r18, 0x00	; 0
    4700:	30 e0       	ldi	r19, 0x00	; 0
    4702:	40 e2       	ldi	r20, 0x20	; 32
    4704:	51 e4       	ldi	r21, 0x41	; 65
    4706:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    470a:	dc 01       	movw	r26, r24
    470c:	cb 01       	movw	r24, r22
    470e:	bc 01       	movw	r22, r24
    4710:	cd 01       	movw	r24, r26
    4712:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4716:	dc 01       	movw	r26, r24
    4718:	cb 01       	movw	r24, r22
    471a:	9a a3       	std	Y+34, r25	; 0x22
    471c:	89 a3       	std	Y+33, r24	; 0x21
    471e:	0f c0       	rjmp	.+30     	; 0x473e <main+0x1c74>
    4720:	88 ec       	ldi	r24, 0xC8	; 200
    4722:	90 e0       	ldi	r25, 0x00	; 0
    4724:	98 a3       	std	Y+32, r25	; 0x20
    4726:	8f 8f       	std	Y+31, r24	; 0x1f
    4728:	8f 8d       	ldd	r24, Y+31	; 0x1f
    472a:	98 a1       	ldd	r25, Y+32	; 0x20
    472c:	01 97       	sbiw	r24, 0x01	; 1
    472e:	f1 f7       	brne	.-4      	; 0x472c <main+0x1c62>
    4730:	98 a3       	std	Y+32, r25	; 0x20
    4732:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4734:	89 a1       	ldd	r24, Y+33	; 0x21
    4736:	9a a1       	ldd	r25, Y+34	; 0x22
    4738:	01 97       	sbiw	r24, 0x01	; 1
    473a:	9a a3       	std	Y+34, r25	; 0x22
    473c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    473e:	89 a1       	ldd	r24, Y+33	; 0x21
    4740:	9a a1       	ldd	r25, Y+34	; 0x22
    4742:	00 97       	sbiw	r24, 0x00	; 0
    4744:	69 f7       	brne	.-38     	; 0x4720 <main+0x1c56>
    4746:	14 c0       	rjmp	.+40     	; 0x4770 <main+0x1ca6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4748:	6b a1       	ldd	r22, Y+35	; 0x23
    474a:	7c a1       	ldd	r23, Y+36	; 0x24
    474c:	8d a1       	ldd	r24, Y+37	; 0x25
    474e:	9e a1       	ldd	r25, Y+38	; 0x26
    4750:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4754:	dc 01       	movw	r26, r24
    4756:	cb 01       	movw	r24, r22
    4758:	9a a3       	std	Y+34, r25	; 0x22
    475a:	89 a3       	std	Y+33, r24	; 0x21
    475c:	89 a1       	ldd	r24, Y+33	; 0x21
    475e:	9a a1       	ldd	r25, Y+34	; 0x22
    4760:	9e 8f       	std	Y+30, r25	; 0x1e
    4762:	8d 8f       	std	Y+29, r24	; 0x1d
    4764:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4766:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4768:	01 97       	sbiw	r24, 0x01	; 1
    476a:	f1 f7       	brne	.-4      	; 0x4768 <main+0x1c9e>
    476c:	9e 8f       	std	Y+30, r25	; 0x1e
    476e:	8d 8f       	std	Y+29, r24	; 0x1d

		                        		_delay_ms(10) ;

		                        		LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    4770:	80 e8       	ldi	r24, 0x80	; 128
    4772:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>



		                        		LCD4_voidSendString(mes10) ;
    4776:	ce 01       	movw	r24, r28
    4778:	88 5c       	subi	r24, 0xC8	; 200
    477a:	9e 4f       	sbci	r25, 0xFE	; 254
    477c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>
    4780:	80 e0       	ldi	r24, 0x00	; 0
    4782:	90 e0       	ldi	r25, 0x00	; 0
    4784:	aa ef       	ldi	r26, 0xFA	; 250
    4786:	b3 e4       	ldi	r27, 0x43	; 67
    4788:	89 8f       	std	Y+25, r24	; 0x19
    478a:	9a 8f       	std	Y+26, r25	; 0x1a
    478c:	ab 8f       	std	Y+27, r26	; 0x1b
    478e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4790:	69 8d       	ldd	r22, Y+25	; 0x19
    4792:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4794:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4796:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4798:	20 e0       	ldi	r18, 0x00	; 0
    479a:	30 e0       	ldi	r19, 0x00	; 0
    479c:	4a ef       	ldi	r20, 0xFA	; 250
    479e:	54 e4       	ldi	r21, 0x44	; 68
    47a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47a4:	dc 01       	movw	r26, r24
    47a6:	cb 01       	movw	r24, r22
    47a8:	8d 8b       	std	Y+21, r24	; 0x15
    47aa:	9e 8b       	std	Y+22, r25	; 0x16
    47ac:	af 8b       	std	Y+23, r26	; 0x17
    47ae:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    47b0:	6d 89       	ldd	r22, Y+21	; 0x15
    47b2:	7e 89       	ldd	r23, Y+22	; 0x16
    47b4:	8f 89       	ldd	r24, Y+23	; 0x17
    47b6:	98 8d       	ldd	r25, Y+24	; 0x18
    47b8:	20 e0       	ldi	r18, 0x00	; 0
    47ba:	30 e0       	ldi	r19, 0x00	; 0
    47bc:	40 e8       	ldi	r20, 0x80	; 128
    47be:	5f e3       	ldi	r21, 0x3F	; 63
    47c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    47c4:	88 23       	and	r24, r24
    47c6:	2c f4       	brge	.+10     	; 0x47d2 <main+0x1d08>
		__ticks = 1;
    47c8:	81 e0       	ldi	r24, 0x01	; 1
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	9c 8b       	std	Y+20, r25	; 0x14
    47ce:	8b 8b       	std	Y+19, r24	; 0x13
    47d0:	3f c0       	rjmp	.+126    	; 0x4850 <main+0x1d86>
	else if (__tmp > 65535)
    47d2:	6d 89       	ldd	r22, Y+21	; 0x15
    47d4:	7e 89       	ldd	r23, Y+22	; 0x16
    47d6:	8f 89       	ldd	r24, Y+23	; 0x17
    47d8:	98 8d       	ldd	r25, Y+24	; 0x18
    47da:	20 e0       	ldi	r18, 0x00	; 0
    47dc:	3f ef       	ldi	r19, 0xFF	; 255
    47de:	4f e7       	ldi	r20, 0x7F	; 127
    47e0:	57 e4       	ldi	r21, 0x47	; 71
    47e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    47e6:	18 16       	cp	r1, r24
    47e8:	4c f5       	brge	.+82     	; 0x483c <main+0x1d72>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47ea:	69 8d       	ldd	r22, Y+25	; 0x19
    47ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    47ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    47f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    47f2:	20 e0       	ldi	r18, 0x00	; 0
    47f4:	30 e0       	ldi	r19, 0x00	; 0
    47f6:	40 e2       	ldi	r20, 0x20	; 32
    47f8:	51 e4       	ldi	r21, 0x41	; 65
    47fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47fe:	dc 01       	movw	r26, r24
    4800:	cb 01       	movw	r24, r22
    4802:	bc 01       	movw	r22, r24
    4804:	cd 01       	movw	r24, r26
    4806:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    480a:	dc 01       	movw	r26, r24
    480c:	cb 01       	movw	r24, r22
    480e:	9c 8b       	std	Y+20, r25	; 0x14
    4810:	8b 8b       	std	Y+19, r24	; 0x13
    4812:	0f c0       	rjmp	.+30     	; 0x4832 <main+0x1d68>
    4814:	88 ec       	ldi	r24, 0xC8	; 200
    4816:	90 e0       	ldi	r25, 0x00	; 0
    4818:	9a 8b       	std	Y+18, r25	; 0x12
    481a:	89 8b       	std	Y+17, r24	; 0x11
    481c:	89 89       	ldd	r24, Y+17	; 0x11
    481e:	9a 89       	ldd	r25, Y+18	; 0x12
    4820:	01 97       	sbiw	r24, 0x01	; 1
    4822:	f1 f7       	brne	.-4      	; 0x4820 <main+0x1d56>
    4824:	9a 8b       	std	Y+18, r25	; 0x12
    4826:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4828:	8b 89       	ldd	r24, Y+19	; 0x13
    482a:	9c 89       	ldd	r25, Y+20	; 0x14
    482c:	01 97       	sbiw	r24, 0x01	; 1
    482e:	9c 8b       	std	Y+20, r25	; 0x14
    4830:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4832:	8b 89       	ldd	r24, Y+19	; 0x13
    4834:	9c 89       	ldd	r25, Y+20	; 0x14
    4836:	00 97       	sbiw	r24, 0x00	; 0
    4838:	69 f7       	brne	.-38     	; 0x4814 <main+0x1d4a>
    483a:	14 c0       	rjmp	.+40     	; 0x4864 <main+0x1d9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    483c:	6d 89       	ldd	r22, Y+21	; 0x15
    483e:	7e 89       	ldd	r23, Y+22	; 0x16
    4840:	8f 89       	ldd	r24, Y+23	; 0x17
    4842:	98 8d       	ldd	r25, Y+24	; 0x18
    4844:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4848:	dc 01       	movw	r26, r24
    484a:	cb 01       	movw	r24, r22
    484c:	9c 8b       	std	Y+20, r25	; 0x14
    484e:	8b 8b       	std	Y+19, r24	; 0x13
    4850:	8b 89       	ldd	r24, Y+19	; 0x13
    4852:	9c 89       	ldd	r25, Y+20	; 0x14
    4854:	98 8b       	std	Y+16, r25	; 0x10
    4856:	8f 87       	std	Y+15, r24	; 0x0f
    4858:	8f 85       	ldd	r24, Y+15	; 0x0f
    485a:	98 89       	ldd	r25, Y+16	; 0x10
    485c:	01 97       	sbiw	r24, 0x01	; 1
    485e:	f1 f7       	brne	.-4      	; 0x485c <main+0x1d92>
    4860:	98 8b       	std	Y+16, r25	; 0x10
    4862:	8f 87       	std	Y+15, r24	; 0x0f

		                        		_delay_ms(500);

		                        		LCD4_voidSendCmd(LCD_CLEAR);
    4864:	81 e0       	ldi	r24, 0x01	; 1
    4866:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>
    486a:	80 e0       	ldi	r24, 0x00	; 0
    486c:	90 e0       	ldi	r25, 0x00	; 0
    486e:	a0 e2       	ldi	r26, 0x20	; 32
    4870:	b1 e4       	ldi	r27, 0x41	; 65
    4872:	8b 87       	std	Y+11, r24	; 0x0b
    4874:	9c 87       	std	Y+12, r25	; 0x0c
    4876:	ad 87       	std	Y+13, r26	; 0x0d
    4878:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    487a:	6b 85       	ldd	r22, Y+11	; 0x0b
    487c:	7c 85       	ldd	r23, Y+12	; 0x0c
    487e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4880:	9e 85       	ldd	r25, Y+14	; 0x0e
    4882:	20 e0       	ldi	r18, 0x00	; 0
    4884:	30 e0       	ldi	r19, 0x00	; 0
    4886:	4a ef       	ldi	r20, 0xFA	; 250
    4888:	54 e4       	ldi	r21, 0x44	; 68
    488a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    488e:	dc 01       	movw	r26, r24
    4890:	cb 01       	movw	r24, r22
    4892:	8f 83       	std	Y+7, r24	; 0x07
    4894:	98 87       	std	Y+8, r25	; 0x08
    4896:	a9 87       	std	Y+9, r26	; 0x09
    4898:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    489a:	6f 81       	ldd	r22, Y+7	; 0x07
    489c:	78 85       	ldd	r23, Y+8	; 0x08
    489e:	89 85       	ldd	r24, Y+9	; 0x09
    48a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	40 e8       	ldi	r20, 0x80	; 128
    48a8:	5f e3       	ldi	r21, 0x3F	; 63
    48aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    48ae:	88 23       	and	r24, r24
    48b0:	2c f4       	brge	.+10     	; 0x48bc <main+0x1df2>
		__ticks = 1;
    48b2:	81 e0       	ldi	r24, 0x01	; 1
    48b4:	90 e0       	ldi	r25, 0x00	; 0
    48b6:	9e 83       	std	Y+6, r25	; 0x06
    48b8:	8d 83       	std	Y+5, r24	; 0x05
    48ba:	3f c0       	rjmp	.+126    	; 0x493a <main+0x1e70>
	else if (__tmp > 65535)
    48bc:	6f 81       	ldd	r22, Y+7	; 0x07
    48be:	78 85       	ldd	r23, Y+8	; 0x08
    48c0:	89 85       	ldd	r24, Y+9	; 0x09
    48c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    48c4:	20 e0       	ldi	r18, 0x00	; 0
    48c6:	3f ef       	ldi	r19, 0xFF	; 255
    48c8:	4f e7       	ldi	r20, 0x7F	; 127
    48ca:	57 e4       	ldi	r21, 0x47	; 71
    48cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48d0:	18 16       	cp	r1, r24
    48d2:	4c f5       	brge	.+82     	; 0x4926 <main+0x1e5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    48d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    48d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    48da:	9e 85       	ldd	r25, Y+14	; 0x0e
    48dc:	20 e0       	ldi	r18, 0x00	; 0
    48de:	30 e0       	ldi	r19, 0x00	; 0
    48e0:	40 e2       	ldi	r20, 0x20	; 32
    48e2:	51 e4       	ldi	r21, 0x41	; 65
    48e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48e8:	dc 01       	movw	r26, r24
    48ea:	cb 01       	movw	r24, r22
    48ec:	bc 01       	movw	r22, r24
    48ee:	cd 01       	movw	r24, r26
    48f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48f4:	dc 01       	movw	r26, r24
    48f6:	cb 01       	movw	r24, r22
    48f8:	9e 83       	std	Y+6, r25	; 0x06
    48fa:	8d 83       	std	Y+5, r24	; 0x05
    48fc:	0f c0       	rjmp	.+30     	; 0x491c <main+0x1e52>
    48fe:	88 ec       	ldi	r24, 0xC8	; 200
    4900:	90 e0       	ldi	r25, 0x00	; 0
    4902:	9c 83       	std	Y+4, r25	; 0x04
    4904:	8b 83       	std	Y+3, r24	; 0x03
    4906:	8b 81       	ldd	r24, Y+3	; 0x03
    4908:	9c 81       	ldd	r25, Y+4	; 0x04
    490a:	01 97       	sbiw	r24, 0x01	; 1
    490c:	f1 f7       	brne	.-4      	; 0x490a <main+0x1e40>
    490e:	9c 83       	std	Y+4, r25	; 0x04
    4910:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4912:	8d 81       	ldd	r24, Y+5	; 0x05
    4914:	9e 81       	ldd	r25, Y+6	; 0x06
    4916:	01 97       	sbiw	r24, 0x01	; 1
    4918:	9e 83       	std	Y+6, r25	; 0x06
    491a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    491c:	8d 81       	ldd	r24, Y+5	; 0x05
    491e:	9e 81       	ldd	r25, Y+6	; 0x06
    4920:	00 97       	sbiw	r24, 0x00	; 0
    4922:	69 f7       	brne	.-38     	; 0x48fe <main+0x1e34>
    4924:	14 c0       	rjmp	.+40     	; 0x494e <main+0x1e84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4926:	6f 81       	ldd	r22, Y+7	; 0x07
    4928:	78 85       	ldd	r23, Y+8	; 0x08
    492a:	89 85       	ldd	r24, Y+9	; 0x09
    492c:	9a 85       	ldd	r25, Y+10	; 0x0a
    492e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4932:	dc 01       	movw	r26, r24
    4934:	cb 01       	movw	r24, r22
    4936:	9e 83       	std	Y+6, r25	; 0x06
    4938:	8d 83       	std	Y+5, r24	; 0x05
    493a:	8d 81       	ldd	r24, Y+5	; 0x05
    493c:	9e 81       	ldd	r25, Y+6	; 0x06
    493e:	9a 83       	std	Y+2, r25	; 0x02
    4940:	89 83       	std	Y+1, r24	; 0x01
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	9a 81       	ldd	r25, Y+2	; 0x02
    4946:	01 97       	sbiw	r24, 0x01	; 1
    4948:	f1 f7       	brne	.-4      	; 0x4946 <main+0x1e7c>
    494a:	9a 83       	std	Y+2, r25	; 0x02
    494c:	89 83       	std	Y+1, r24	; 0x01

		                        		_delay_ms(10) ;

	                                    LCD4_voidSendCmd(LCD_CURSOR_BEGIN_FIRST_LINE);
    494e:	80 e8       	ldi	r24, 0x80	; 128
    4950:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>


	                                    LCD4_voidSendString(mes6) ;
    4954:	ce 01       	movw	r24, r28
    4956:	8a 5e       	subi	r24, 0xEA	; 234
    4958:	9e 4f       	sbci	r25, 0xFE	; 254
    495a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

	                                    			    LCD4_voidSendCmd(LCD_CURSOR_BEGIN_SECOUND_LINE);
    495e:	80 ec       	ldi	r24, 0xC0	; 192
    4960:	0e 94 c1 09 	call	0x1382	; 0x1382 <LCD4_voidSendCmd>

	                                    				LCD4_voidSendString(mes7) ;
    4964:	ce 01       	movw	r24, r28
    4966:	81 5e       	subi	r24, 0xE1	; 225
    4968:	9e 4f       	sbci	r25, 0xFE	; 254
    496a:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <LCD4_voidSendString>

		                    }



		                        	counter4 = 20 ;
    496e:	fe 01       	movw	r30, r28
    4970:	eb 53       	subi	r30, 0x3B	; 59
    4972:	ff 4f       	sbci	r31, 0xFF	; 255
    4974:	84 e1       	ldi	r24, 0x14	; 20
    4976:	80 83       	st	Z, r24

		                        	counter1 = 0 ;
    4978:	fe 01       	movw	r30, r28
    497a:	e9 53       	subi	r30, 0x39	; 57
    497c:	ff 4f       	sbci	r31, 0xFF	; 255
    497e:	10 82       	st	Z, r1
		                    	}



		            counter3 = 10;
    4980:	fe 01       	movw	r30, r28
    4982:	ea 53       	subi	r30, 0x3A	; 58
    4984:	ff 4f       	sbci	r31, 0xFF	; 255
    4986:	8a e0       	ldi	r24, 0x0A	; 10
    4988:	80 83       	st	Z, r24
    498a:	0c 94 e5 1b 	jmp	0x37ca	; 0x37ca <main+0xd00>

0000498e <__prologue_saves__>:
    498e:	2f 92       	push	r2
    4990:	3f 92       	push	r3
    4992:	4f 92       	push	r4
    4994:	5f 92       	push	r5
    4996:	6f 92       	push	r6
    4998:	7f 92       	push	r7
    499a:	8f 92       	push	r8
    499c:	9f 92       	push	r9
    499e:	af 92       	push	r10
    49a0:	bf 92       	push	r11
    49a2:	cf 92       	push	r12
    49a4:	df 92       	push	r13
    49a6:	ef 92       	push	r14
    49a8:	ff 92       	push	r15
    49aa:	0f 93       	push	r16
    49ac:	1f 93       	push	r17
    49ae:	cf 93       	push	r28
    49b0:	df 93       	push	r29
    49b2:	cd b7       	in	r28, 0x3d	; 61
    49b4:	de b7       	in	r29, 0x3e	; 62
    49b6:	ca 1b       	sub	r28, r26
    49b8:	db 0b       	sbc	r29, r27
    49ba:	0f b6       	in	r0, 0x3f	; 63
    49bc:	f8 94       	cli
    49be:	de bf       	out	0x3e, r29	; 62
    49c0:	0f be       	out	0x3f, r0	; 63
    49c2:	cd bf       	out	0x3d, r28	; 61
    49c4:	09 94       	ijmp

000049c6 <__epilogue_restores__>:
    49c6:	2a 88       	ldd	r2, Y+18	; 0x12
    49c8:	39 88       	ldd	r3, Y+17	; 0x11
    49ca:	48 88       	ldd	r4, Y+16	; 0x10
    49cc:	5f 84       	ldd	r5, Y+15	; 0x0f
    49ce:	6e 84       	ldd	r6, Y+14	; 0x0e
    49d0:	7d 84       	ldd	r7, Y+13	; 0x0d
    49d2:	8c 84       	ldd	r8, Y+12	; 0x0c
    49d4:	9b 84       	ldd	r9, Y+11	; 0x0b
    49d6:	aa 84       	ldd	r10, Y+10	; 0x0a
    49d8:	b9 84       	ldd	r11, Y+9	; 0x09
    49da:	c8 84       	ldd	r12, Y+8	; 0x08
    49dc:	df 80       	ldd	r13, Y+7	; 0x07
    49de:	ee 80       	ldd	r14, Y+6	; 0x06
    49e0:	fd 80       	ldd	r15, Y+5	; 0x05
    49e2:	0c 81       	ldd	r16, Y+4	; 0x04
    49e4:	1b 81       	ldd	r17, Y+3	; 0x03
    49e6:	aa 81       	ldd	r26, Y+2	; 0x02
    49e8:	b9 81       	ldd	r27, Y+1	; 0x01
    49ea:	ce 0f       	add	r28, r30
    49ec:	d1 1d       	adc	r29, r1
    49ee:	0f b6       	in	r0, 0x3f	; 63
    49f0:	f8 94       	cli
    49f2:	de bf       	out	0x3e, r29	; 62
    49f4:	0f be       	out	0x3f, r0	; 63
    49f6:	cd bf       	out	0x3d, r28	; 61
    49f8:	ed 01       	movw	r28, r26
    49fa:	08 95       	ret

000049fc <_exit>:
    49fc:	f8 94       	cli

000049fe <__stop_program>:
    49fe:	ff cf       	rjmp	.-2      	; 0x49fe <__stop_program>
